<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Testing from Tribel App" enabled="true">
      <stringProp name="TestPlan.comments">This test plan was created by the BlazeMeter converter v.3.1.23. Please contact support@blazemeter.com for further support.</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="sec-ch-ua" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua</stringProp>
            <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;104&quot;, &quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;104&quot;</stringProp>
          </elementProp>
          <elementProp name="sec-ch-ua-mobile" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
            <stringProp name="Header.value">?0</stringProp>
          </elementProp>
          <elementProp name="Accept" elementType="Header">
            <stringProp name="Header.name">Accept</stringProp>
            <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
          </elementProp>
          <elementProp name="sec-ch-ua-platform" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
            <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
          </elementProp>
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="BASE_URL_1" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_1</stringProp>
            <stringProp name="Argument.value">q7y8ibn334.execute-api.us-east-1.amazonaws.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_2" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_2</stringProp>
            <stringProp name="Argument.value">lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_3" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_3</stringProp>
            <stringProp name="Argument.value">likerslastaticbuckte45555-prodlive.s3.us-east-1.amazonaws.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_4" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_4</stringProp>
            <stringProp name="Argument.value">pwnvm5kfj5.execute-api.us-east-1.amazonaws.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <boolProp name="HTTPSampler.image_parser">true</boolProp>
        <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="true">
        <collectionProp name="DNSCacheManager.servers"/>
        <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
        <boolProp name="DNSCacheManager.isCustomResolver">false</boolProp>
      </DNSCacheManager>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
        <collectionProp name="AuthManager.auth_list"/>
        <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
      </AuthManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">10</stringProp>
        <stringProp name="ThreadGroup.ramp_time">10</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">0</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Test" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://q7y8ibn334.execute-api.us-east-1.amazonaws.com/prodlive/getfilter" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;queryString&quot;:{&quot;userID&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;,&quot;filter_type&quot;:null}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">prodlive/getfilter</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">AWS4-HMAC-SHA256 Credential=ASIAY23MY4J6LURUZLIA/20220823/us-east-1/execute-api/aws4_request, SignedHeaders=content-type;host;x-amz-date;x-amz-security-token, Signature=a3143f19075220f1e73f5e1ecc8fb365f2ea317894185d1035a38cf3ac6a973b</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Amz-Security-Token" elementType="Header">
                  <stringProp name="Header.name">X-Amz-Security-Token</stringProp>
                  <stringProp name="Header.value">IQoJb3JpZ2luX2VjEBAaCXVzLWVhc3QtMSJGMEQCIHa+L91dXZpQQ+00qokgTgvaPlrat5xnX/3dg1jFOeBoAiAHkHvJ1sYiE11HxHVo2HbtIscnmNpX3FdM+pKmqjvmACrNBAiJ//////////8BEAMaDDYwNzQyOTEyNDczMiIMDJaY1Tbcnr3KAnP8KqEEwH3UsaVu5BQZEOkhqNIen5rsxaLaNq08SaakAoAOJxWQ+46sJwGzZDQUPchRYGcw55Dgv1g6Mr+2x/PIlx9JCrrcLruFP9rQbcsPubm9aQZeyWL6m8bMlU4WV3BIAiJ2d4pDeM7pNB2UQ3Vh8xbdzk01IiNpfg3HT7OT1PF/NmIwOrDF1whGJHVWFnvcHGUlAGNK8brwCK9BGhRKxlQeP9s/FgdX+mQxuUGEmAzocjTBBvM50hcWXpCneMK1SgnvbUzY3hXtFhmDg++BtsxukhTS9r6s94JaZWu8Of+JGg8/oTYPyLtYZFPbmxRJJXB3Q9jrAcldZX88aH1Ji5EXcqWKnNn4Q+v91JnbGZL9UmYJpora7TYDKvsQEKfXeYo2cEnzwCGDVUXWRKlpR1kx/BiwPUbMXTXucRcEX9Y1KAr19P67DlcxTMOA5QNKzDsgeyFgCsCZe/nT2Ea1kP5MdvD8mAPGaxbXeIoIBs/hsxsVDI5Kr1RUA4CpS6FlkB50kLzw5nMjDH7eRyK8rW3yndHxS8Xgx0UBsbNZ52vUhMwuf3X0+GinfST59yDQz51xutP/YaOyW3uSeDgKJQ4v8SCkMImEKZyYZCLHX/DGlO/sE3xMYViZEUpqAGdCUjqUr0hI4BnKOt3EZ5dGWTMb9RNrAN3JoJNY7KdHUtTCkMCG5QHsRgFa+5x3egSRAsmxpuDr6KxC68KtHOh5VMF0q/MwkYmSmAY6hgLkQhbjzY1rQ8Yic64xfSS2+rT59O9HaL+9YFajdY83APNUH7w2DK2PxlekNBtNOTJdAsBLtmKgko4uMj64jHIC11JWFA9FFsBYr5p4NGshsruRPlrx+Y63qG+z/N+cybV14F0E4yZD7soXdFZyw/FAepKTdvH9svmXlB4FEVhZmacM8gkzRyCWkU5WpHrU9CWIAIZt7G6T9Zs5ACht8pzqGuy9pzKqN8Aqp7oZGBKe+IH73qecXOVcuwSGSyrReC+AajiQ8J7RBMs+IXfajvc73KUB16DXMpOfBjpHzewu/2WNEHUjC8lzKPgC03TfU5N/KC827/G0G/BUZmnQ/FlnBX242HeS</stringProp>
                </elementProp>
                <elementProp name="x-amz-date" elementType="Header">
                  <stringProp name="Header.name">x-amz-date</stringProp>
                  <stringProp name="Header.value">20220823T074232Z</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  listMemes {\n    items {\n      id\n      meamID\n      memeInputAddClassName\n      memePreviewClassName\n      memelistClassName\n      serialNumber\n      status\n    }\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query starCategory {\n  likerSlaGetStarCategory(userID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;)\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  likerSlaGetPostData(userID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, userGroupID: \&quot;\&quot;, profileUserID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, offset: \&quot;0\&quot;, isPublic: false, categoryID: \&quot;\&quot;, groupPrivacy: \&quot;\&quot;)\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">AWS4-HMAC-SHA256 Credential=ASIAY23MY4J6LURUZLIA/20220823/us-east-1/appsync/aws4_request, SignedHeaders=content-type;host;x-amz-date;x-amz-security-token;x-amz-user-agent, Signature=13bee60aa86a59b05442903b8c38fe4bb42cf47a9bd3217360c0458b02f36c12</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Amz-Security-Token" elementType="Header">
                  <stringProp name="Header.name">X-Amz-Security-Token</stringProp>
                  <stringProp name="Header.value">IQoJb3JpZ2luX2VjEBAaCXVzLWVhc3QtMSJGMEQCIHa+L91dXZpQQ+00qokgTgvaPlrat5xnX/3dg1jFOeBoAiAHkHvJ1sYiE11HxHVo2HbtIscnmNpX3FdM+pKmqjvmACrNBAiJ//////////8BEAMaDDYwNzQyOTEyNDczMiIMDJaY1Tbcnr3KAnP8KqEEwH3UsaVu5BQZEOkhqNIen5rsxaLaNq08SaakAoAOJxWQ+46sJwGzZDQUPchRYGcw55Dgv1g6Mr+2x/PIlx9JCrrcLruFP9rQbcsPubm9aQZeyWL6m8bMlU4WV3BIAiJ2d4pDeM7pNB2UQ3Vh8xbdzk01IiNpfg3HT7OT1PF/NmIwOrDF1whGJHVWFnvcHGUlAGNK8brwCK9BGhRKxlQeP9s/FgdX+mQxuUGEmAzocjTBBvM50hcWXpCneMK1SgnvbUzY3hXtFhmDg++BtsxukhTS9r6s94JaZWu8Of+JGg8/oTYPyLtYZFPbmxRJJXB3Q9jrAcldZX88aH1Ji5EXcqWKnNn4Q+v91JnbGZL9UmYJpora7TYDKvsQEKfXeYo2cEnzwCGDVUXWRKlpR1kx/BiwPUbMXTXucRcEX9Y1KAr19P67DlcxTMOA5QNKzDsgeyFgCsCZe/nT2Ea1kP5MdvD8mAPGaxbXeIoIBs/hsxsVDI5Kr1RUA4CpS6FlkB50kLzw5nMjDH7eRyK8rW3yndHxS8Xgx0UBsbNZ52vUhMwuf3X0+GinfST59yDQz51xutP/YaOyW3uSeDgKJQ4v8SCkMImEKZyYZCLHX/DGlO/sE3xMYViZEUpqAGdCUjqUr0hI4BnKOt3EZ5dGWTMb9RNrAN3JoJNY7KdHUtTCkMCG5QHsRgFa+5x3egSRAsmxpuDr6KxC68KtHOh5VMF0q/MwkYmSmAY6hgLkQhbjzY1rQ8Yic64xfSS2+rT59O9HaL+9YFajdY83APNUH7w2DK2PxlekNBtNOTJdAsBLtmKgko4uMj64jHIC11JWFA9FFsBYr5p4NGshsruRPlrx+Y63qG+z/N+cybV14F0E4yZD7soXdFZyw/FAepKTdvH9svmXlB4FEVhZmacM8gkzRyCWkU5WpHrU9CWIAIZt7G6T9Zs5ACht8pzqGuy9pzKqN8Aqp7oZGBKe+IH73qecXOVcuwSGSyrReC+AajiQ8J7RBMs+IXfajvc73KUB16DXMpOfBjpHzewu/2WNEHUjC8lzKPgC03TfU5N/KC827/G0G/BUZmnQ/FlnBX242HeS</stringProp>
                </elementProp>
                <elementProp name="x-amz-date" elementType="Header">
                  <stringProp name="Header.name">x-amz-date</stringProp>
                  <stringProp name="Header.value">20220823T074232Z</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://likerslastaticbuckte45555-prodlive.s3.us-east-1.amazonaws.com/public/uploads/post_images/f1d78c1f-eb6f-43b2-af89-b8ad92839423.webp?x-id=PutObject" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="x-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-id</stringProp>
                  <stringProp name="Argument.value">PutObject</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">public/uploads/post_images/f1d78c1f-eb6f-43b2-af89-b8ad92839423.webp</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">AWS4-HMAC-SHA256 Credential=ASIAY23MY4J6LURUZLIA/20220823/us-east-1/s3/aws4_request, SignedHeaders=amz-sdk-invocation-id;amz-sdk-request;content-type;host;x-amz-content-sha256;x-amz-date;x-amz-security-token;x-amz-user-agent, Signature=48191fcc4d2e0cef86db5ae2bb922f825a513bb48d81e63bc2d58b1871ef3892</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">image/*</stringProp>
                </elementProp>
                <elementProp name="x-amz-content-sha256" elementType="Header">
                  <stringProp name="Header.name">x-amz-content-sha256</stringProp>
                  <stringProp name="Header.value">UNSIGNED-PAYLOAD</stringProp>
                </elementProp>
                <elementProp name="amz-sdk-invocation-id" elementType="Header">
                  <stringProp name="Header.name">amz-sdk-invocation-id</stringProp>
                  <stringProp name="Header.value">28ad5528-f7e4-484f-97b4-0ca3eb83e9e9</stringProp>
                </elementProp>
                <elementProp name="x-amz-security-token" elementType="Header">
                  <stringProp name="Header.name">x-amz-security-token</stringProp>
                  <stringProp name="Header.value">IQoJb3JpZ2luX2VjEBAaCXVzLWVhc3QtMSJGMEQCIHa+L91dXZpQQ+00qokgTgvaPlrat5xnX/3dg1jFOeBoAiAHkHvJ1sYiE11HxHVo2HbtIscnmNpX3FdM+pKmqjvmACrNBAiJ//////////8BEAMaDDYwNzQyOTEyNDczMiIMDJaY1Tbcnr3KAnP8KqEEwH3UsaVu5BQZEOkhqNIen5rsxaLaNq08SaakAoAOJxWQ+46sJwGzZDQUPchRYGcw55Dgv1g6Mr+2x/PIlx9JCrrcLruFP9rQbcsPubm9aQZeyWL6m8bMlU4WV3BIAiJ2d4pDeM7pNB2UQ3Vh8xbdzk01IiNpfg3HT7OT1PF/NmIwOrDF1whGJHVWFnvcHGUlAGNK8brwCK9BGhRKxlQeP9s/FgdX+mQxuUGEmAzocjTBBvM50hcWXpCneMK1SgnvbUzY3hXtFhmDg++BtsxukhTS9r6s94JaZWu8Of+JGg8/oTYPyLtYZFPbmxRJJXB3Q9jrAcldZX88aH1Ji5EXcqWKnNn4Q+v91JnbGZL9UmYJpora7TYDKvsQEKfXeYo2cEnzwCGDVUXWRKlpR1kx/BiwPUbMXTXucRcEX9Y1KAr19P67DlcxTMOA5QNKzDsgeyFgCsCZe/nT2Ea1kP5MdvD8mAPGaxbXeIoIBs/hsxsVDI5Kr1RUA4CpS6FlkB50kLzw5nMjDH7eRyK8rW3yndHxS8Xgx0UBsbNZ52vUhMwuf3X0+GinfST59yDQz51xutP/YaOyW3uSeDgKJQ4v8SCkMImEKZyYZCLHX/DGlO/sE3xMYViZEUpqAGdCUjqUr0hI4BnKOt3EZ5dGWTMb9RNrAN3JoJNY7KdHUtTCkMCG5QHsRgFa+5x3egSRAsmxpuDr6KxC68KtHOh5VMF0q/MwkYmSmAY6hgLkQhbjzY1rQ8Yic64xfSS2+rT59O9HaL+9YFajdY83APNUH7w2DK2PxlekNBtNOTJdAsBLtmKgko4uMj64jHIC11JWFA9FFsBYr5p4NGshsruRPlrx+Y63qG+z/N+cybV14F0E4yZD7soXdFZyw/FAepKTdvH9svmXlB4FEVhZmacM8gkzRyCWkU5WpHrU9CWIAIZt7G6T9Zs5ACht8pzqGuy9pzKqN8Aqp7oZGBKe+IH73qecXOVcuwSGSyrReC+AajiQ8J7RBMs+IXfajvc73KUB16DXMpOfBjpHzewu/2WNEHUjC8lzKPgC03TfU5N/KC827/G0G/BUZmnQ/FlnBX242HeS</stringProp>
                </elementProp>
                <elementProp name="amz-sdk-request" elementType="Header">
                  <stringProp name="Header.name">amz-sdk-request</stringProp>
                  <stringProp name="Header.value">attempt=1; max=3</stringProp>
                </elementProp>
                <elementProp name="x-amz-date" elementType="Header">
                  <stringProp name="Header.name">x-amz-date</stringProp>
                  <stringProp name="Header.value">20220823T074309Z</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-sdk-js/3.6.1 os/Windows/NT_10.0 lang/js md/browser/Chrome_104.0.0.0 api/s3/3.6.1 aws-amplify/3.8.23_js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://likerslastaticbuckte45555-prodlive.s3.us-east-1.amazonaws.com/public/uploads/post_images/f1d78c1f-eb6f-43b2-af89-b8ad92839423.webp?x-id=PutObject" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="x-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-id</stringProp>
                  <stringProp name="Argument.value">PutObject</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">public/uploads/post_images/f1d78c1f-eb6f-43b2-af89-b8ad92839423.webp</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">AWS4-HMAC-SHA256 Credential=ASIAY23MY4J6LURUZLIA/20220823/us-east-1/s3/aws4_request, SignedHeaders=amz-sdk-invocation-id;amz-sdk-request;content-type;host;x-amz-content-sha256;x-amz-date;x-amz-security-token;x-amz-user-agent, Signature=f93bbe8b7fa31780cd907201ac2b2aadd53ee335887b28685c29ac27d021bf7e</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">image/*</stringProp>
                </elementProp>
                <elementProp name="x-amz-content-sha256" elementType="Header">
                  <stringProp name="Header.name">x-amz-content-sha256</stringProp>
                  <stringProp name="Header.value">UNSIGNED-PAYLOAD</stringProp>
                </elementProp>
                <elementProp name="amz-sdk-invocation-id" elementType="Header">
                  <stringProp name="Header.name">amz-sdk-invocation-id</stringProp>
                  <stringProp name="Header.value">178813a6-16fd-4c79-a7b6-1dff59048dd0</stringProp>
                </elementProp>
                <elementProp name="x-amz-security-token" elementType="Header">
                  <stringProp name="Header.name">x-amz-security-token</stringProp>
                  <stringProp name="Header.value">IQoJb3JpZ2luX2VjEBAaCXVzLWVhc3QtMSJGMEQCIHa+L91dXZpQQ+00qokgTgvaPlrat5xnX/3dg1jFOeBoAiAHkHvJ1sYiE11HxHVo2HbtIscnmNpX3FdM+pKmqjvmACrNBAiJ//////////8BEAMaDDYwNzQyOTEyNDczMiIMDJaY1Tbcnr3KAnP8KqEEwH3UsaVu5BQZEOkhqNIen5rsxaLaNq08SaakAoAOJxWQ+46sJwGzZDQUPchRYGcw55Dgv1g6Mr+2x/PIlx9JCrrcLruFP9rQbcsPubm9aQZeyWL6m8bMlU4WV3BIAiJ2d4pDeM7pNB2UQ3Vh8xbdzk01IiNpfg3HT7OT1PF/NmIwOrDF1whGJHVWFnvcHGUlAGNK8brwCK9BGhRKxlQeP9s/FgdX+mQxuUGEmAzocjTBBvM50hcWXpCneMK1SgnvbUzY3hXtFhmDg++BtsxukhTS9r6s94JaZWu8Of+JGg8/oTYPyLtYZFPbmxRJJXB3Q9jrAcldZX88aH1Ji5EXcqWKnNn4Q+v91JnbGZL9UmYJpora7TYDKvsQEKfXeYo2cEnzwCGDVUXWRKlpR1kx/BiwPUbMXTXucRcEX9Y1KAr19P67DlcxTMOA5QNKzDsgeyFgCsCZe/nT2Ea1kP5MdvD8mAPGaxbXeIoIBs/hsxsVDI5Kr1RUA4CpS6FlkB50kLzw5nMjDH7eRyK8rW3yndHxS8Xgx0UBsbNZ52vUhMwuf3X0+GinfST59yDQz51xutP/YaOyW3uSeDgKJQ4v8SCkMImEKZyYZCLHX/DGlO/sE3xMYViZEUpqAGdCUjqUr0hI4BnKOt3EZ5dGWTMb9RNrAN3JoJNY7KdHUtTCkMCG5QHsRgFa+5x3egSRAsmxpuDr6KxC68KtHOh5VMF0q/MwkYmSmAY6hgLkQhbjzY1rQ8Yic64xfSS2+rT59O9HaL+9YFajdY83APNUH7w2DK2PxlekNBtNOTJdAsBLtmKgko4uMj64jHIC11JWFA9FFsBYr5p4NGshsruRPlrx+Y63qG+z/N+cybV14F0E4yZD7soXdFZyw/FAepKTdvH9svmXlB4FEVhZmacM8gkzRyCWkU5WpHrU9CWIAIZt7G6T9Zs5ACht8pzqGuy9pzKqN8Aqp7oZGBKe+IH73qecXOVcuwSGSyrReC+AajiQ8J7RBMs+IXfajvc73KUB16DXMpOfBjpHzewu/2WNEHUjC8lzKPgC03TfU5N/KC827/G0G/BUZmnQ/FlnBX242HeS</stringProp>
                </elementProp>
                <elementProp name="amz-sdk-request" elementType="Header">
                  <stringProp name="Header.name">amz-sdk-request</stringProp>
                  <stringProp name="Header.value">attempt=1; max=3</stringProp>
                </elementProp>
                <elementProp name="x-amz-date" elementType="Header">
                  <stringProp name="Header.name">x-amz-date</stringProp>
                  <stringProp name="Header.value">20220823T074309Z</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-sdk-js/3.6.1 os/Windows/NT_10.0 lang/js md/browser/Chrome_104.0.0.0 api/s3/3.6.1 aws-amplify/3.8.23_js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;mutation CreatePictureMeta($input: CreatePictureMetaInput!, $condition: ModelPictureMetaConditionInput) {\n  createPictureMeta(input: $input, condition: $condition) {\n    id\n    userID\n    postID\n    postCommentID\n    userGroupID\n    messageID\n    imagekey\n    videoKey\n    album\n    hashKey\n    orderIndex\n    width\n    height\n    imageSize\n    type\n    createdAt\n    updatedAt\n    post {\n      id\n      userID\n      postCategoryID\n      groupId\n      totalLikes\n      totalComments\n      totalShares\n      visiblity\n      postContentType\n      postContent\n      createdAt\n      updatedAt\n      isSharePost\n      sharePostMetaID\n      isWallPost\n      wallPostUserID\n      isGroupPost\n      shouldHidefollowSugessionView\n      isPostTextExpended\n      userGroupID\n      postUsingDevice\n      linkpostURL\n      linkpostDescription\n      linkpostTitle\n      isPinPost\n      isSchedulepost\n      turnOffNotification\n      isBlocked\n      videoUploadStatus\n      status\n      frameNumber\n      hasMention\n      customPostContent\n      sharedHasMention\n      customSharedPostContent\n      isVideoPost\n      meamID\n      memelistClassName\n      memeInputAddClassName\n      memePreviewClassName\n      likeUserStatus\n      isFollowed\n      like_user_status\n      likeID\n      postDate\n    }\n  }\n}\n&quot;,&quot;variables&quot;:{&quot;input&quot;:{&quot;imageSize&quot;:&quot;Small&quot;,&quot;album&quot;:&quot;profilePhotos&quot;,&quot;width&quot;:&quot;400&quot;,&quot;height&quot;:&quot;400&quot;,&quot;imagekey&quot;:&quot;f1d78c1f-eb6f-43b2-af89-b8ad92839423.webp&quot;,&quot;userID&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;mutation UpdateUser($input: UpdateUserInput!, $condition: ModelUserConditionInput) {\n  updateUser(input: $input, condition: $condition) {\n    id\n    userName\n    lastLoginTime\n    lastLoginDate\n    isChattBoxActive\n    loginStatus\n    lastLogOutTime\n    lastLoginDevice\n    owner\n    firstName\n    lastName\n    recentCategories\n    profileLinkName\n    usertourChatboxOnOff\n    usertourFeedSearchBox\n    usertourFeedCategory\n    usertourPostLike\n    usertourPostCategory\n    usertourPostTextArea\n    usertourProgressBar\n    usertourCommentLike\n    usertourAudience\n    usertourAddFriend\n    usertourFollowing\n    totalGoldStars\n    totalSilverStars\n    gender\n    country\n    state\n    isAccountVerified\n    isActive\n    defaultFeed\n    choiceMeta\n    postCategoryID\n    authProvider\n    whoCanAccessWall\n    whoCanAccessPhotos\n    whoCanSendMessage\n    whoCanSeeProfile\n    isChattBoxActive\n    displyHomestate\n    displyLiveIn\n    homestate\n    homestateCity\n    hasAcceptedCockie\n    homestateCountry\n    intro\n    isFoundingMember\n    userStoryAbout\n    userStoryAboutVisibilty\n    userStoryEarlyLife\n    userStoryEarlyLifeVisibilty\n    userStoryFamily\n    userStoryFamilyVisibilty\n    userStoryCareer\n    userStoryCareerVisibilty\n    userStoryBackground\n    userStoryBackgroundVisibilty\n    userStoryChildHood\n    userStoryChildHoodVisibilty\n    userStoryPersonalLife\n    userStoryPersonalVisibilty\n    websiteUrl\n    isLikerSupport\n    isMasterAccount\n    googleUrl\n    googleUrlVisibilty\n    websiteUrlVisibilty\n    facebookUrl\n    facebookUrlVisibilty\n    twitterUrl\n    twitterUrlVisibilty\n    linkedInUrl\n    linkedInUrlVisibilty\n    instagramUrl\n    instagramUrlVisibilty\n    skypeUrl\n    skypeUrlVisibilty\n    pinterestUrl\n    pinterestUrlVisibilty\n    youtubeUrl\n    youtubeUrlVisibilty\n    forceSecurityCheckUp\n    emailNotification\n    pushNotification\n    forceTFA\n    isCognitoConfirmed\n    activeFeedFilterType\n    headline\n    isExisting\n    isTFAActive\n    isVerified\n    createdAt\n    updatedAt\n    coverPhotoActive\n    profilePhotoActive\n    isExparienceAdded\n    isEducationAdded\n    isFriendInvitationDone\n    isBlockByAdmin\n    totalLikes\n    totalFollowers\n    totalFollowing\n    totalFriends\n    totalStars\n    totalComments\n    totalPhotos\n    isPreSignup\n    isTopCommenter\n    topCommentor {\n      items {\n        userID\n      }\n    }\n  }\n}\n&quot;,&quot;variables&quot;:{&quot;input&quot;:{&quot;id&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;,&quot;profilePhotoActive&quot;:&quot;f1d78c1f-eb6f-43b2-af89-b8ad92839423.webp&quot;}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://likerslastaticbuckte45555-prodlive.s3.us-east-1.amazonaws.com/public/uploads/large_images/f1d78c1f-eb6f-43b2-af89-b8ad92839423.jpg?x-id=PutObject" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="x-id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x-id</stringProp>
                  <stringProp name="Argument.value">PutObject</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">public/uploads/large_images/f1d78c1f-eb6f-43b2-af89-b8ad92839423.jpg</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">AWS4-HMAC-SHA256 Credential=ASIAY23MY4J6LURUZLIA/20220823/us-east-1/s3/aws4_request, SignedHeaders=amz-sdk-invocation-id;amz-sdk-request;content-type;host;x-amz-content-sha256;x-amz-date;x-amz-security-token;x-amz-user-agent, Signature=33632699ff0542fdc29c17fb2c34015a50d767985be3cbeea310ce3a958e14dd</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">image/*</stringProp>
                </elementProp>
                <elementProp name="x-amz-content-sha256" elementType="Header">
                  <stringProp name="Header.name">x-amz-content-sha256</stringProp>
                  <stringProp name="Header.value">UNSIGNED-PAYLOAD</stringProp>
                </elementProp>
                <elementProp name="amz-sdk-invocation-id" elementType="Header">
                  <stringProp name="Header.name">amz-sdk-invocation-id</stringProp>
                  <stringProp name="Header.value">c6ca1bc0-3a1b-4db6-920c-9c07883ff242</stringProp>
                </elementProp>
                <elementProp name="x-amz-security-token" elementType="Header">
                  <stringProp name="Header.name">x-amz-security-token</stringProp>
                  <stringProp name="Header.value">IQoJb3JpZ2luX2VjEBAaCXVzLWVhc3QtMSJGMEQCIHa+L91dXZpQQ+00qokgTgvaPlrat5xnX/3dg1jFOeBoAiAHkHvJ1sYiE11HxHVo2HbtIscnmNpX3FdM+pKmqjvmACrNBAiJ//////////8BEAMaDDYwNzQyOTEyNDczMiIMDJaY1Tbcnr3KAnP8KqEEwH3UsaVu5BQZEOkhqNIen5rsxaLaNq08SaakAoAOJxWQ+46sJwGzZDQUPchRYGcw55Dgv1g6Mr+2x/PIlx9JCrrcLruFP9rQbcsPubm9aQZeyWL6m8bMlU4WV3BIAiJ2d4pDeM7pNB2UQ3Vh8xbdzk01IiNpfg3HT7OT1PF/NmIwOrDF1whGJHVWFnvcHGUlAGNK8brwCK9BGhRKxlQeP9s/FgdX+mQxuUGEmAzocjTBBvM50hcWXpCneMK1SgnvbUzY3hXtFhmDg++BtsxukhTS9r6s94JaZWu8Of+JGg8/oTYPyLtYZFPbmxRJJXB3Q9jrAcldZX88aH1Ji5EXcqWKnNn4Q+v91JnbGZL9UmYJpora7TYDKvsQEKfXeYo2cEnzwCGDVUXWRKlpR1kx/BiwPUbMXTXucRcEX9Y1KAr19P67DlcxTMOA5QNKzDsgeyFgCsCZe/nT2Ea1kP5MdvD8mAPGaxbXeIoIBs/hsxsVDI5Kr1RUA4CpS6FlkB50kLzw5nMjDH7eRyK8rW3yndHxS8Xgx0UBsbNZ52vUhMwuf3X0+GinfST59yDQz51xutP/YaOyW3uSeDgKJQ4v8SCkMImEKZyYZCLHX/DGlO/sE3xMYViZEUpqAGdCUjqUr0hI4BnKOt3EZ5dGWTMb9RNrAN3JoJNY7KdHUtTCkMCG5QHsRgFa+5x3egSRAsmxpuDr6KxC68KtHOh5VMF0q/MwkYmSmAY6hgLkQhbjzY1rQ8Yic64xfSS2+rT59O9HaL+9YFajdY83APNUH7w2DK2PxlekNBtNOTJdAsBLtmKgko4uMj64jHIC11JWFA9FFsBYr5p4NGshsruRPlrx+Y63qG+z/N+cybV14F0E4yZD7soXdFZyw/FAepKTdvH9svmXlB4FEVhZmacM8gkzRyCWkU5WpHrU9CWIAIZt7G6T9Zs5ACht8pzqGuy9pzKqN8Aqp7oZGBKe+IH73qecXOVcuwSGSyrReC+AajiQ8J7RBMs+IXfajvc73KUB16DXMpOfBjpHzewu/2WNEHUjC8lzKPgC03TfU5N/KC827/G0G/BUZmnQ/FlnBX242HeS</stringProp>
                </elementProp>
                <elementProp name="amz-sdk-request" elementType="Header">
                  <stringProp name="Header.name">amz-sdk-request</stringProp>
                  <stringProp name="Header.value">attempt=1; max=3</stringProp>
                </elementProp>
                <elementProp name="x-amz-date" elementType="Header">
                  <stringProp name="Header.name">x-amz-date</stringProp>
                  <stringProp name="Header.value">20220823T074313Z</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-sdk-js/3.6.1 os/Windows/NT_10.0 lang/js md/browser/Chrome_104.0.0.0 api/s3/3.6.1 aws-amplify/3.8.23_js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;mutation UpdateUser($input: UpdateUserInput!, $condition: ModelUserConditionInput) {\n  updateUser(input: $input, condition: $condition) {\n    id\n    userName\n    lastLoginTime\n    lastLoginDate\n    isChattBoxActive\n    loginStatus\n    lastLogOutTime\n    lastLoginDevice\n    owner\n    firstName\n    lastName\n    recentCategories\n    profileLinkName\n    usertourChatboxOnOff\n    usertourFeedSearchBox\n    usertourFeedCategory\n    usertourPostLike\n    usertourPostCategory\n    usertourPostTextArea\n    usertourProgressBar\n    usertourCommentLike\n    usertourAudience\n    usertourAddFriend\n    usertourFollowing\n    totalGoldStars\n    totalSilverStars\n    gender\n    country\n    state\n    isAccountVerified\n    isActive\n    defaultFeed\n    choiceMeta\n    postCategoryID\n    authProvider\n    whoCanAccessWall\n    whoCanAccessPhotos\n    whoCanSendMessage\n    whoCanSeeProfile\n    isChattBoxActive\n    displyHomestate\n    displyLiveIn\n    homestate\n    homestateCity\n    hasAcceptedCockie\n    homestateCountry\n    intro\n    isFoundingMember\n    userStoryAbout\n    userStoryAboutVisibilty\n    userStoryEarlyLife\n    userStoryEarlyLifeVisibilty\n    userStoryFamily\n    userStoryFamilyVisibilty\n    userStoryCareer\n    userStoryCareerVisibilty\n    userStoryBackground\n    userStoryBackgroundVisibilty\n    userStoryChildHood\n    userStoryChildHoodVisibilty\n    userStoryPersonalLife\n    userStoryPersonalVisibilty\n    websiteUrl\n    isLikerSupport\n    isMasterAccount\n    googleUrl\n    googleUrlVisibilty\n    websiteUrlVisibilty\n    facebookUrl\n    facebookUrlVisibilty\n    twitterUrl\n    twitterUrlVisibilty\n    linkedInUrl\n    linkedInUrlVisibilty\n    instagramUrl\n    instagramUrlVisibilty\n    skypeUrl\n    skypeUrlVisibilty\n    pinterestUrl\n    pinterestUrlVisibilty\n    youtubeUrl\n    youtubeUrlVisibilty\n    forceSecurityCheckUp\n    emailNotification\n    pushNotification\n    forceTFA\n    isCognitoConfirmed\n    activeFeedFilterType\n    headline\n    isExisting\n    isTFAActive\n    isVerified\n    createdAt\n    updatedAt\n    coverPhotoActive\n    profilePhotoActive\n    isExparienceAdded\n    isEducationAdded\n    isFriendInvitationDone\n    isBlockByAdmin\n    totalLikes\n    totalFollowers\n    totalFollowing\n    totalFriends\n    totalStars\n    totalComments\n    totalPhotos\n    isPreSignup\n    isTopCommenter\n    topCommentor {\n      items {\n        userID\n      }\n    }\n  }\n}\n&quot;,&quot;variables&quot;:{&quot;input&quot;:{&quot;id&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;,&quot;usertourAudience&quot;:&quot;true&quot;}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  likerslaGetFreiendList(userID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, loginUserID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, limit: \&quot;10\&quot;)\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  listMemes {\n    items {\n      id\n      meamID\n      memeInputAddClassName\n      memePreviewClassName\n      memelistClassName\n      serialNumber\n      status\n    }\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  likerSlaGetPostData(userID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, userGroupID: \&quot;\&quot;, profileUserID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, offset: \&quot;0\&quot;, isPublic: false, categoryID: \&quot;\&quot;, groupPrivacy: \&quot;\&quot;)\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">AWS4-HMAC-SHA256 Credential=ASIAY23MY4J6LURUZLIA/20220823/us-east-1/appsync/aws4_request, SignedHeaders=content-type;host;x-amz-date;x-amz-security-token;x-amz-user-agent, Signature=294c17af33b731ca36c5e980b33b615c66601bca1055ee1dc433ee263fc2ba4b</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Amz-Security-Token" elementType="Header">
                  <stringProp name="Header.name">X-Amz-Security-Token</stringProp>
                  <stringProp name="Header.value">IQoJb3JpZ2luX2VjEBAaCXVzLWVhc3QtMSJGMEQCIHa+L91dXZpQQ+00qokgTgvaPlrat5xnX/3dg1jFOeBoAiAHkHvJ1sYiE11HxHVo2HbtIscnmNpX3FdM+pKmqjvmACrNBAiJ//////////8BEAMaDDYwNzQyOTEyNDczMiIMDJaY1Tbcnr3KAnP8KqEEwH3UsaVu5BQZEOkhqNIen5rsxaLaNq08SaakAoAOJxWQ+46sJwGzZDQUPchRYGcw55Dgv1g6Mr+2x/PIlx9JCrrcLruFP9rQbcsPubm9aQZeyWL6m8bMlU4WV3BIAiJ2d4pDeM7pNB2UQ3Vh8xbdzk01IiNpfg3HT7OT1PF/NmIwOrDF1whGJHVWFnvcHGUlAGNK8brwCK9BGhRKxlQeP9s/FgdX+mQxuUGEmAzocjTBBvM50hcWXpCneMK1SgnvbUzY3hXtFhmDg++BtsxukhTS9r6s94JaZWu8Of+JGg8/oTYPyLtYZFPbmxRJJXB3Q9jrAcldZX88aH1Ji5EXcqWKnNn4Q+v91JnbGZL9UmYJpora7TYDKvsQEKfXeYo2cEnzwCGDVUXWRKlpR1kx/BiwPUbMXTXucRcEX9Y1KAr19P67DlcxTMOA5QNKzDsgeyFgCsCZe/nT2Ea1kP5MdvD8mAPGaxbXeIoIBs/hsxsVDI5Kr1RUA4CpS6FlkB50kLzw5nMjDH7eRyK8rW3yndHxS8Xgx0UBsbNZ52vUhMwuf3X0+GinfST59yDQz51xutP/YaOyW3uSeDgKJQ4v8SCkMImEKZyYZCLHX/DGlO/sE3xMYViZEUpqAGdCUjqUr0hI4BnKOt3EZ5dGWTMb9RNrAN3JoJNY7KdHUtTCkMCG5QHsRgFa+5x3egSRAsmxpuDr6KxC68KtHOh5VMF0q/MwkYmSmAY6hgLkQhbjzY1rQ8Yic64xfSS2+rT59O9HaL+9YFajdY83APNUH7w2DK2PxlekNBtNOTJdAsBLtmKgko4uMj64jHIC11JWFA9FFsBYr5p4NGshsruRPlrx+Y63qG+z/N+cybV14F0E4yZD7soXdFZyw/FAepKTdvH9svmXlB4FEVhZmacM8gkzRyCWkU5WpHrU9CWIAIZt7G6T9Zs5ACht8pzqGuy9pzKqN8Aqp7oZGBKe+IH73qecXOVcuwSGSyrReC+AajiQ8J7RBMs+IXfajvc73KUB16DXMpOfBjpHzewu/2WNEHUjC8lzKPgC03TfU5N/KC827/G0G/BUZmnQ/FlnBX242HeS</stringProp>
                </elementProp>
                <elementProp name="x-amz-date" elementType="Header">
                  <stringProp name="Header.name">x-amz-date</stringProp>
                  <stringProp name="Header.value">20220823T074327Z</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  listGroups {\n    items {\n      id\n      groupName\n      postCategories {\n        items {\n          id\n          name\n          groupID\n        }\n      }\n    }\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">AWS4-HMAC-SHA256 Credential=ASIAY23MY4J6LURUZLIA/20220823/us-east-1/appsync/aws4_request, SignedHeaders=content-type;host;x-amz-date;x-amz-security-token;x-amz-user-agent, Signature=f41eb985a209a955a5b57508bd078919f6ee6158f7eaf09f18d014b8664af0d5</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Amz-Security-Token" elementType="Header">
                  <stringProp name="Header.name">X-Amz-Security-Token</stringProp>
                  <stringProp name="Header.value">IQoJb3JpZ2luX2VjEBAaCXVzLWVhc3QtMSJGMEQCIHa+L91dXZpQQ+00qokgTgvaPlrat5xnX/3dg1jFOeBoAiAHkHvJ1sYiE11HxHVo2HbtIscnmNpX3FdM+pKmqjvmACrNBAiJ//////////8BEAMaDDYwNzQyOTEyNDczMiIMDJaY1Tbcnr3KAnP8KqEEwH3UsaVu5BQZEOkhqNIen5rsxaLaNq08SaakAoAOJxWQ+46sJwGzZDQUPchRYGcw55Dgv1g6Mr+2x/PIlx9JCrrcLruFP9rQbcsPubm9aQZeyWL6m8bMlU4WV3BIAiJ2d4pDeM7pNB2UQ3Vh8xbdzk01IiNpfg3HT7OT1PF/NmIwOrDF1whGJHVWFnvcHGUlAGNK8brwCK9BGhRKxlQeP9s/FgdX+mQxuUGEmAzocjTBBvM50hcWXpCneMK1SgnvbUzY3hXtFhmDg++BtsxukhTS9r6s94JaZWu8Of+JGg8/oTYPyLtYZFPbmxRJJXB3Q9jrAcldZX88aH1Ji5EXcqWKnNn4Q+v91JnbGZL9UmYJpora7TYDKvsQEKfXeYo2cEnzwCGDVUXWRKlpR1kx/BiwPUbMXTXucRcEX9Y1KAr19P67DlcxTMOA5QNKzDsgeyFgCsCZe/nT2Ea1kP5MdvD8mAPGaxbXeIoIBs/hsxsVDI5Kr1RUA4CpS6FlkB50kLzw5nMjDH7eRyK8rW3yndHxS8Xgx0UBsbNZ52vUhMwuf3X0+GinfST59yDQz51xutP/YaOyW3uSeDgKJQ4v8SCkMImEKZyYZCLHX/DGlO/sE3xMYViZEUpqAGdCUjqUr0hI4BnKOt3EZ5dGWTMb9RNrAN3JoJNY7KdHUtTCkMCG5QHsRgFa+5x3egSRAsmxpuDr6KxC68KtHOh5VMF0q/MwkYmSmAY6hgLkQhbjzY1rQ8Yic64xfSS2+rT59O9HaL+9YFajdY83APNUH7w2DK2PxlekNBtNOTJdAsBLtmKgko4uMj64jHIC11JWFA9FFsBYr5p4NGshsruRPlrx+Y63qG+z/N+cybV14F0E4yZD7soXdFZyw/FAepKTdvH9svmXlB4FEVhZmacM8gkzRyCWkU5WpHrU9CWIAIZt7G6T9Zs5ACht8pzqGuy9pzKqN8Aqp7oZGBKe+IH73qecXOVcuwSGSyrReC+AajiQ8J7RBMs+IXfajvc73KUB16DXMpOfBjpHzewu/2WNEHUjC8lzKPgC03TfU5N/KC827/G0G/BUZmnQ/FlnBX242HeS</stringProp>
                </elementProp>
                <elementProp name="x-amz-date" elementType="Header">
                  <stringProp name="Header.name">x-amz-date</stringProp>
                  <stringProp name="Header.value">20220823T074340Z</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  listGroups {\n    items {\n      id\n      groupName\n      postCategories {\n        items {\n          id\n          name\n          groupID\n        }\n      }\n    }\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">AWS4-HMAC-SHA256 Credential=ASIAY23MY4J6LURUZLIA/20220823/us-east-1/appsync/aws4_request, SignedHeaders=content-type;host;x-amz-date;x-amz-security-token;x-amz-user-agent, Signature=5fde16e5bb940935318ef207b04d2ff1cada7d63db672b32df4b28fa8941a7fb</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Amz-Security-Token" elementType="Header">
                  <stringProp name="Header.name">X-Amz-Security-Token</stringProp>
                  <stringProp name="Header.value">IQoJb3JpZ2luX2VjEBAaCXVzLWVhc3QtMSJGMEQCIHa+L91dXZpQQ+00qokgTgvaPlrat5xnX/3dg1jFOeBoAiAHkHvJ1sYiE11HxHVo2HbtIscnmNpX3FdM+pKmqjvmACrNBAiJ//////////8BEAMaDDYwNzQyOTEyNDczMiIMDJaY1Tbcnr3KAnP8KqEEwH3UsaVu5BQZEOkhqNIen5rsxaLaNq08SaakAoAOJxWQ+46sJwGzZDQUPchRYGcw55Dgv1g6Mr+2x/PIlx9JCrrcLruFP9rQbcsPubm9aQZeyWL6m8bMlU4WV3BIAiJ2d4pDeM7pNB2UQ3Vh8xbdzk01IiNpfg3HT7OT1PF/NmIwOrDF1whGJHVWFnvcHGUlAGNK8brwCK9BGhRKxlQeP9s/FgdX+mQxuUGEmAzocjTBBvM50hcWXpCneMK1SgnvbUzY3hXtFhmDg++BtsxukhTS9r6s94JaZWu8Of+JGg8/oTYPyLtYZFPbmxRJJXB3Q9jrAcldZX88aH1Ji5EXcqWKnNn4Q+v91JnbGZL9UmYJpora7TYDKvsQEKfXeYo2cEnzwCGDVUXWRKlpR1kx/BiwPUbMXTXucRcEX9Y1KAr19P67DlcxTMOA5QNKzDsgeyFgCsCZe/nT2Ea1kP5MdvD8mAPGaxbXeIoIBs/hsxsVDI5Kr1RUA4CpS6FlkB50kLzw5nMjDH7eRyK8rW3yndHxS8Xgx0UBsbNZ52vUhMwuf3X0+GinfST59yDQz51xutP/YaOyW3uSeDgKJQ4v8SCkMImEKZyYZCLHX/DGlO/sE3xMYViZEUpqAGdCUjqUr0hI4BnKOt3EZ5dGWTMb9RNrAN3JoJNY7KdHUtTCkMCG5QHsRgFa+5x3egSRAsmxpuDr6KxC68KtHOh5VMF0q/MwkYmSmAY6hgLkQhbjzY1rQ8Yic64xfSS2+rT59O9HaL+9YFajdY83APNUH7w2DK2PxlekNBtNOTJdAsBLtmKgko4uMj64jHIC11JWFA9FFsBYr5p4NGshsruRPlrx+Y63qG+z/N+cybV14F0E4yZD7soXdFZyw/FAepKTdvH9svmXlB4FEVhZmacM8gkzRyCWkU5WpHrU9CWIAIZt7G6T9Zs5ACht8pzqGuy9pzKqN8Aqp7oZGBKe+IH73qecXOVcuwSGSyrReC+AajiQ8J7RBMs+IXfajvc73KUB16DXMpOfBjpHzewu/2WNEHUjC8lzKPgC03TfU5N/KC827/G0G/BUZmnQ/FlnBX242HeS</stringProp>
                </elementProp>
                <elementProp name="x-amz-date" elementType="Header">
                  <stringProp name="Header.name">x-amz-date</stringProp>
                  <stringProp name="Header.value">20220823T074344Z</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query GetUser($id: ID!) {\n  getUser(id: $id) {\n    id\n    owner\n    firstName\n    lastName\n    userName\n    isPreSignup\n    emailVisiblity\n    secondaryEmail\n    secondaryEmailVisiblity\n    profileLinkName\n    usertourChatboxOnOff\n    usertourFeedSearchBox\n    usertourFeedCategory\n    usertourPostLike\n    usertourPostCategory\n    usertourPostTextArea\n    usertourProgressBar\n    usertourCommentLike\n    usertourAudience\n    usertourAddFriend\n    usertourFollowing\n    gender\n    dobYeayVisiblity\n    dobMonthVisiblity\n    dobDayVisiblity\n    country\n    state\n    isAccountVerified\n    hasAcceptedCockie\n    isMasterAccount\n    isActive\n    defaultFeed\n    choiceMeta\n    postCategoryID\n    authProvider\n    whoCanAccessWall\n    whoCanAccessPhotos\n    whoCanSendMessage\n    whoCanSeeProfile\n    isChattBoxActive\n    lastLogOutTime\n    lastLoginDate\n    lastLoginDevice\n    lastLoginTime\n    loginStatus\n    displyHomestate\n    displyLiveIn\n    homestate\n    homestateCity\n    homestateCountry\n    intro\n    isFoundingMember\n    phoneHome\n    phoneHomeVisibilty\n    phoneOffice\n    phoneOfficeVisibilty\n    phoneHomeCountryCode\n    phoneOfficeCountryCode\n    userStoryAbout\n    userStoryAboutVisibilty\n    userStoryEarlyLife\n    userStoryEarlyLifeVisibilty\n    userStoryFamily\n    userStoryFamilyVisibilty\n    userStoryCareer\n    userStoryCareerVisibilty\n    userStoryBackground\n    userStoryBackgroundVisibilty\n    userStoryChildHood\n    userStoryChildHoodVisibilty\n    userStoryPersonalLife\n    userStoryPersonalVisibilty\n    websiteUrl\n    websiteUrlVisibilty\n    facebookUrl\n    facebookUrlVisibilty\n    twitterUrl\n    twitterUrlVisibilty\n    linkedInUrl\n    linkedInUrlVisibilty\n    instagramUrl\n    instagramUrlVisibilty\n    skypeUrl\n    skypeUrlVisibilty\n    pinterestUrl\n    pinterestUrlVisibilty\n    youtubeUrl\n    youtubeUrlVisibilty\n    forceSecurityCheckUp\n    emailNotification\n    pushNotification\n    forceTFA\n    activeFeedFilterType\n    headline\n    isExisting\n    isTFAActive\n    isVerified\n    createdAt\n    updatedAt\n    totalLikes\n    totalFollowers\n    totalStars\n    totalFollowing\n    totalFriends\n    totalPhotos\n    coverPhotoActive\n    profilePhotoActive\n    totalGoldStars\n    totalSilverStars\n    isExparienceAdded\n    isEducationAdded\n    isFriendInvitationDone\n    recentCategories\n    topCommentor {\n      items {\n        userID\n      }\n    }\n    userGroups(limit: 4, sortDirection: DESC) {\n      nextToken\n      items {\n        CategoryInfo {\n          groupName\n        }\n        SubCategoryInfo {\n          name\n        }\n        aboutGroup\n        createdAt\n        createdByUserID\n        groupMembers(filter: {userID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}}) {\n          items {\n            userID\n          }\n          nextToken\n        }\n        groupName\n        id\n        pictureMetaID\n        policy\n        postCategory\n        postGroup\n        postSubCategory\n        privacy\n        status\n        totalMembers\n        totalPosts\n        updatedAt\n      }\n    }\n    countryName {\n      countryName\n    }\n    stateName {\n      stateName\n    }\n    homestateCountryName {\n      countryName\n    }\n    homestateName {\n      stateName\n    }\n    posts {\n      nextToken\n    }\n    pictureMeta {\n      items {\n        imagekey\n        imageSize\n        id\n        orderIndex\n        album\n      }\n    }\n    userEducation {\n      nextToken\n    }\n    userProfessionalExperience {\n      nextToken\n    }\n    userHonorsAwards {\n      nextToken\n    }\n    userCertificate {\n      nextToken\n    }\n    blockUser {\n      items {\n        id\n        ownerID\n        userID\n        blockType\n        createdAt\n        updatedAt\n      }\n    }\n    contributorSettingData {\n      items {\n        id\n        userID\n        categoryID\n        isGroupCat\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n    userFilter {\n      nextToken\n    }\n  }\n}\n&quot;,&quot;variables&quot;:{&quot;id&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;mutation MyMutation {\n  updateUser(input: {id: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, recentCategories: \&quot;[{\\\&quot;cat_id\\\&quot;:\\\&quot;982509f9-2509-484c-8668-cbac682bcf6f\\\&quot;,\\\&quot;subcat_id\\\&quot;:\\\&quot;a74f522d-c957-4644-998e-ad5eb13f2b84\\\&quot;,\\\&quot;cat_name\\\&quot;:\\\&quot;Advice\\\&quot;,\\\&quot;subcat_name\\\&quot;:\\\&quot;Family\\\&quot;}]\&quot;}) {\n    recentCategories\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;mutation MyMutation {\n  likerslaPostMutation(Mode: \&quot;CREATE\&quot;, isWallPost: false, userGroupID: \&quot;null\&quot;, postContent: \&quot;Hi I am Paul\&quot;, userID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, groupId: \&quot;982509f9-2509-484c-8668-cbac682bcf6f\&quot;, isGroupPost: false, isPinPost: false, isSharePost: false, isVideoPost: 0, linkpostDescription: \&quot;\&quot;, linkpostTitle: \&quot;\&quot;, linkpostURL: \&quot;\&quot;, meamID: \&quot;5604a0d9-044c-47da-b9a6-05bdea981925\&quot;, memeInputAddClassName: \&quot;gradient_8_add\&quot;, wallPostUserID: \&quot;\&quot;, visiblity: \&quot;Public\&quot;, turnOffNotification: false, postUsingDevice: \&quot;web\&quot;, postContentType: \&quot;MemePost\&quot;, memePreviewClassName: \&quot;gradient_8_preview\&quot;, memelistClassName: \&quot;gradient_8\&quot;, postCategoryID: \&quot;a74f522d-c957-4644-998e-ad5eb13f2b84\&quot;, videoUploadStatus: 3)\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://pwnvm5kfj5.execute-api.us-east-1.amazonaws.com/prodlive/insertpostdata" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;queryString&quot;:{&quot;total_like&quot;:0,&quot;user_id&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;,&quot;post_id&quot;:&quot;524e34d0-22b7-11ed-a7d5-0f140239a169&quot;,&quot;permission&quot;:&quot;Public&quot;,&quot;post_type&quot;:&quot;MemePost&quot;,&quot;is_shared&quot;:0,&quot;is_wall&quot;:0,&quot;cat_id&quot;:&quot;982509f9-2509-484c-8668-cbac682bcf6f&quot;,&quot;subcat_id&quot;:&quot;a74f522d-c957-4644-998e-ad5eb13f2b84&quot;,&quot;is_group&quot;:0,&quot;created_at&quot;:&quot;2022-08-23T07:43:47.419Z&quot;,&quot;group_id&quot;:&quot;&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">prodlive/insertpostdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">AWS4-HMAC-SHA256 Credential=ASIAY23MY4J6LURUZLIA/20220823/us-east-1/execute-api/aws4_request, SignedHeaders=content-type;host;x-amz-date;x-amz-security-token, Signature=3758f46ae22cedb784516a56db22dcf1eb99d21a7b92388f674137d459480efa</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Amz-Security-Token" elementType="Header">
                  <stringProp name="Header.name">X-Amz-Security-Token</stringProp>
                  <stringProp name="Header.value">IQoJb3JpZ2luX2VjEBAaCXVzLWVhc3QtMSJGMEQCIHa+L91dXZpQQ+00qokgTgvaPlrat5xnX/3dg1jFOeBoAiAHkHvJ1sYiE11HxHVo2HbtIscnmNpX3FdM+pKmqjvmACrNBAiJ//////////8BEAMaDDYwNzQyOTEyNDczMiIMDJaY1Tbcnr3KAnP8KqEEwH3UsaVu5BQZEOkhqNIen5rsxaLaNq08SaakAoAOJxWQ+46sJwGzZDQUPchRYGcw55Dgv1g6Mr+2x/PIlx9JCrrcLruFP9rQbcsPubm9aQZeyWL6m8bMlU4WV3BIAiJ2d4pDeM7pNB2UQ3Vh8xbdzk01IiNpfg3HT7OT1PF/NmIwOrDF1whGJHVWFnvcHGUlAGNK8brwCK9BGhRKxlQeP9s/FgdX+mQxuUGEmAzocjTBBvM50hcWXpCneMK1SgnvbUzY3hXtFhmDg++BtsxukhTS9r6s94JaZWu8Of+JGg8/oTYPyLtYZFPbmxRJJXB3Q9jrAcldZX88aH1Ji5EXcqWKnNn4Q+v91JnbGZL9UmYJpora7TYDKvsQEKfXeYo2cEnzwCGDVUXWRKlpR1kx/BiwPUbMXTXucRcEX9Y1KAr19P67DlcxTMOA5QNKzDsgeyFgCsCZe/nT2Ea1kP5MdvD8mAPGaxbXeIoIBs/hsxsVDI5Kr1RUA4CpS6FlkB50kLzw5nMjDH7eRyK8rW3yndHxS8Xgx0UBsbNZ52vUhMwuf3X0+GinfST59yDQz51xutP/YaOyW3uSeDgKJQ4v8SCkMImEKZyYZCLHX/DGlO/sE3xMYViZEUpqAGdCUjqUr0hI4BnKOt3EZ5dGWTMb9RNrAN3JoJNY7KdHUtTCkMCG5QHsRgFa+5x3egSRAsmxpuDr6KxC68KtHOh5VMF0q/MwkYmSmAY6hgLkQhbjzY1rQ8Yic64xfSS2+rT59O9HaL+9YFajdY83APNUH7w2DK2PxlekNBtNOTJdAsBLtmKgko4uMj64jHIC11JWFA9FFsBYr5p4NGshsruRPlrx+Y63qG+z/N+cybV14F0E4yZD7soXdFZyw/FAepKTdvH9svmXlB4FEVhZmacM8gkzRyCWkU5WpHrU9CWIAIZt7G6T9Zs5ACht8pzqGuy9pzKqN8Aqp7oZGBKe+IH73qecXOVcuwSGSyrReC+AajiQ8J7RBMs+IXfajvc73KUB16DXMpOfBjpHzewu/2WNEHUjC8lzKPgC03TfU5N/KC827/G0G/BUZmnQ/FlnBX242HeS</stringProp>
                </elementProp>
                <elementProp name="x-amz-date" elementType="Header">
                  <stringProp name="Header.name">x-amz-date</stringProp>
                  <stringProp name="Header.value">20220823T074347Z</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  getPost(id: \&quot;524e34d0-22b7-11ed-a7d5-0f140239a169\&quot;) {\n    id\n    createdAt\n    groupId\n    linkpostDescription\n    linkpostTitle\n    linkpostURL\n    meamID\n    isSharePost\n    isGroupPost\n    isWallPost\n    isPinPost\n    videoUploadStatus\n    isVideoPost\n    memeInputAddClassName\n    memePreviewClassName\n    memelistClassName\n    wallPostUserID\n    wallPostUserInfo {\n      firstName\n      lastName\n      userName\n      profilePhotoActive\n      totalGoldStars\n      totalSilverStars\n    }\n    pictureMeta {\n      items {\n        imagekey\n        id\n        type\n        videoKey\n      }\n    }\n    postCategory {\n      name\n      id\n    }\n    tagUsers {\n      items {\n        id\n        postID\n        user {\n          id\n          firstName\n          lastName\n          userName\n          profilePhotoActive\n          totalGoldStars\n          totalSilverStars\n        }\n        userID\n      }\n    }\n    postCategoryGroup {\n      groupName\n      id\n    }\n    postCategoryID\n    postUsingDevice\n    postContent\n    postContentType\n    userID\n    user {\n      firstName\n      lastName\n      profilePhotoActive\n      totalGoldStars\n      totalSilverStars\n      userName\n    }\n    sharePostMeta {\n      createdAt\n      id\n      oldPostID\n      sharedByUserID\n      oldPost {\n        visiblity\n        userID\n        createdAt\n        linkpostDescription\n        linkpostTitle\n        linkpostURL\n        isVideoPost\n        videoUploadStatus\n        userID\n        meamID\n        memeInputAddClassName\n        memePreviewClassName\n        memelistClassName\n        postContent\n        postContentType\n        postUsingDevice\n        tagUsers {\n          items {\n            id\n            postID\n            user {\n              id\n              firstName\n              lastName\n              userName\n            }\n            userID\n          }\n        }\n        user {\n          firstName\n          lastName\n          userName\n          profilePhotoActive\n          totalGoldStars\n          totalSilverStars\n        }\n        pictureMeta {\n          items {\n            imagekey\n            id\n            type\n            videoKey\n          }\n        }\n        postCategory {\n          name\n          id\n        }\n        postCategoryGroup {\n          groupName\n          id\n        }\n      }\n    }\n    userGroupInfo {\n      groupName\n      createdByUserID\n      id\n      policy\n      postCategory\n      postSubCategory\n      privacy\n      status\n    }\n    visiblity\n    postLikes {\n      items {\n        likeByUserID\n        postID\n        likeUser {\n          isActive\n          firstName\n          lastName\n          id\n          userName\n          profilePhotoActive\n          totalGoldStars\n          totalSilverStars\n          totalLikes\n          totalStars\n          totalFollowers\n          friends {\n            items {\n              isFollower\n            }\n          }\n        }\n      }\n    }\n    totalLikes\n    totalComments\n    totalShares\n    turnOffNotification\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  likerSlaGetPostData(userID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, userGroupID: \&quot;\&quot;, profileUserID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, offset: \&quot;5\&quot;, isPublic: false, categoryID: \&quot;\&quot;, groupPrivacy: \&quot;\&quot;)\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">AWS4-HMAC-SHA256 Credential=ASIAY23MY4J6LURUZLIA/20220823/us-east-1/appsync/aws4_request, SignedHeaders=content-type;host;x-amz-date;x-amz-security-token;x-amz-user-agent, Signature=30a86d13f3b3f11c155b99b9d955a360138b1173a419a5f66561e178fdcb7693</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Amz-Security-Token" elementType="Header">
                  <stringProp name="Header.name">X-Amz-Security-Token</stringProp>
                  <stringProp name="Header.value">IQoJb3JpZ2luX2VjEBAaCXVzLWVhc3QtMSJGMEQCIHa+L91dXZpQQ+00qokgTgvaPlrat5xnX/3dg1jFOeBoAiAHkHvJ1sYiE11HxHVo2HbtIscnmNpX3FdM+pKmqjvmACrNBAiJ//////////8BEAMaDDYwNzQyOTEyNDczMiIMDJaY1Tbcnr3KAnP8KqEEwH3UsaVu5BQZEOkhqNIen5rsxaLaNq08SaakAoAOJxWQ+46sJwGzZDQUPchRYGcw55Dgv1g6Mr+2x/PIlx9JCrrcLruFP9rQbcsPubm9aQZeyWL6m8bMlU4WV3BIAiJ2d4pDeM7pNB2UQ3Vh8xbdzk01IiNpfg3HT7OT1PF/NmIwOrDF1whGJHVWFnvcHGUlAGNK8brwCK9BGhRKxlQeP9s/FgdX+mQxuUGEmAzocjTBBvM50hcWXpCneMK1SgnvbUzY3hXtFhmDg++BtsxukhTS9r6s94JaZWu8Of+JGg8/oTYPyLtYZFPbmxRJJXB3Q9jrAcldZX88aH1Ji5EXcqWKnNn4Q+v91JnbGZL9UmYJpora7TYDKvsQEKfXeYo2cEnzwCGDVUXWRKlpR1kx/BiwPUbMXTXucRcEX9Y1KAr19P67DlcxTMOA5QNKzDsgeyFgCsCZe/nT2Ea1kP5MdvD8mAPGaxbXeIoIBs/hsxsVDI5Kr1RUA4CpS6FlkB50kLzw5nMjDH7eRyK8rW3yndHxS8Xgx0UBsbNZ52vUhMwuf3X0+GinfST59yDQz51xutP/YaOyW3uSeDgKJQ4v8SCkMImEKZyYZCLHX/DGlO/sE3xMYViZEUpqAGdCUjqUr0hI4BnKOt3EZ5dGWTMb9RNrAN3JoJNY7KdHUtTCkMCG5QHsRgFa+5x3egSRAsmxpuDr6KxC68KtHOh5VMF0q/MwkYmSmAY6hgLkQhbjzY1rQ8Yic64xfSS2+rT59O9HaL+9YFajdY83APNUH7w2DK2PxlekNBtNOTJdAsBLtmKgko4uMj64jHIC11JWFA9FFsBYr5p4NGshsruRPlrx+Y63qG+z/N+cybV14F0E4yZD7soXdFZyw/FAepKTdvH9svmXlB4FEVhZmacM8gkzRyCWkU5WpHrU9CWIAIZt7G6T9Zs5ACht8pzqGuy9pzKqN8Aqp7oZGBKe+IH73qecXOVcuwSGSyrReC+AajiQ8J7RBMs+IXfajvc73KUB16DXMpOfBjpHzewu/2WNEHUjC8lzKPgC03TfU5N/KC827/G0G/BUZmnQ/FlnBX242HeS</stringProp>
                </elementProp>
                <elementProp name="x-amz-date" elementType="Header">
                  <stringProp name="Header.name">x-amz-date</stringProp>
                  <stringProp name="Header.value">20220823T074351Z</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query myQuery {\n  byuserIDUserhistory(userID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, sortDirection: DESC) {\n    items {\n      id\n      isUser\n      searchedIteam\n      searchedIteamOrder\n      searchedUserID\n      updatedAt\n      userID\n      user {\n        items {\n          firstName\n          id\n          userName\n          totalGoldStars\n          totalFriends\n          totalFollowing\n          totalCoomentLikes\n          totalComments\n          totalFollowers\n          totalLikes\n          totalPhotos\n          totalSilverStars\n          totalStars\n          profilePhotoActive\n          lastName\n        }\n      }\n      searcheduser {\n        items {\n          firstName\n          id\n          userName\n          totalGoldStars\n          totalFriends\n          totalFollowing\n          totalCoomentLikes\n          totalComments\n          totalFollowers\n          totalLikes\n          totalPhotos\n          totalSilverStars\n          totalStars\n          profilePhotoActive\n          lastName\n        }\n      }\n    }\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query searchUsers($filter: SearchableUserFilterInput, $limit: Int, $nextToken: String) {\n  searchUsers(filter: $filter, limit: $limit, nextToken: $nextToken) {\n    items {\n      id\n      owner\n      firstName\n      lastName\n      userName\n      profileLinkName\n      usertourChatboxOnOff\n      usertourFeedSearchBox\n      usertourFeedCategory\n      usertourPostLike\n      usertourPostCategory\n      usertourPostTextArea\n      usertourProgressBar\n      usertourCommentLike\n      usertourAudience\n      gender\n      isBlockByAdmin\n      totalGoldStars\n      totalSilverStars\n      country\n      state\n      isAccountVerified\n      isActive\n      defaultFeed\n      choiceMeta\n      postCategoryID\n      authProvider\n      whoCanAccessWall\n      whoCanAccessPhotos\n      whoCanSendMessage\n      whoCanSeeProfile\n      isChattBoxActive\n      displyHomestate\n      displyLiveIn\n      homestate\n      homestateCity\n      homestateCountry\n      intro\n      isFoundingMember\n      profilePhotoActive\n      totalGoldStars\n      totalSilverStars\n      userStoryAbout\n      userStoryAboutVisibilty\n      userStoryEarlyLife\n      userStoryEarlyLifeVisibilty\n      userStoryFamily\n      userStoryFamilyVisibilty\n      userStoryCareer\n      userStoryCareerVisibilty\n      userStoryBackground\n      userStoryBackgroundVisibilty\n      userStoryChildHood\n      userStoryChildHoodVisibilty\n      userStoryPersonalLife\n      userStoryPersonalVisibilty\n      websiteUrl\n      websiteUrlVisibilty\n      facebookUrl\n      facebookUrlVisibilty\n      twitterUrl\n      twitterUrlVisibilty\n      linkedInUrl\n      linkedInUrlVisibilty\n      instagramUrl\n      instagramUrlVisibilty\n      skypeUrl\n      skypeUrlVisibilty\n      pinterestUrl\n      pinterestUrlVisibilty\n      youtubeUrl\n      youtubeUrlVisibilty\n      forceSecurityCheckUp\n      emailNotification\n      pushNotification\n      forceTFA\n      headline\n      isExisting\n      isTFAActive\n      isVerified\n      createdAt\n      updatedAt\n      totalLikes\n      totalFollowers\n      totalStars\n      posts {\n        items {\n          id\n          userID\n          postCategoryID\n          groupId\n          visiblity\n          postContent\n          createdAt\n          updatedAt\n          isSharePost\n          sharePostMetaID\n          isWallPost\n          wallPostUserID\n          isGroupPost\n          userGroupID\n          postUsingDevice\n          linkpostURL\n          linkpostDescription\n          linkpostTitle\n          isPinPost\n          isSchedulepost\n          isBlocked\n          meamID\n        }\n        nextToken\n      }\n      friends {\n        items {\n          id\n          userID\n          friendUserID\n          isFollower\n          isActiveFriend\n          isPendingFriend\n        }\n        nextToken\n      }\n      userGroups {\n        items {\n          id\n          groupName\n          createdByUserID\n          postCategory\n          postGroup\n          privacy\n          policy\n          aboutGroup\n          pictureMetaID\n          status\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      pictureMeta {\n        items {\n          id\n          userID\n          postID\n          postCommentID\n          userGroupID\n          imagekey\n          videoKey\n          album\n          orderIndex\n          width\n          height\n          imageSize\n          type\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userEducation {\n        items {\n          id\n          userID\n          instID\n          insType\n          eduName\n          degree\n          fieldOfStudy\n          gpa\n          fromYear\n          fromMonth\n          toYear\n          toMonth\n          summary\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userProfessionalExperience {\n        items {\n          id\n          userID\n          instID\n          designation\n          fromYear\n          fromMonth\n          toYear\n          toMonth\n          isWorking\n          summery\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userHonorsAwards {\n        items {\n          id\n          userID\n          instID\n          year\n          month\n          summary\n          awardName\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userCertificate {\n        items {\n          id\n          userID\n          instID\n          certificateTitle\n          certificteNo\n          fromDdate\n          toDate\n          expireDate\n          certificateUrl\n          s3Key\n          visiblity\n          isExpire\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      blockByMe(ownerID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n        items {\n          id\n          ownerID\n        }\n      }\n      blockMe(userID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n        items {\n          id\n          userID\n        }\n      }\n      topCommentor {\n        items {\n          userID\n        }\n      }\n    }\n    nextToken\n  }\n}\n&quot;,&quot;variables&quot;:{&quot;filter&quot;:{&quot;or&quot;:[{&quot;firstName&quot;:{&quot;matchPhrasePrefix&quot;:&quot;Eri&quot;}},{&quot;lastName&quot;:{&quot;matchPhrasePrefix&quot;:&quot;Eri&quot;}},{&quot;email&quot;:{&quot;matchPhrasePrefix&quot;:&quot;Eri&quot;}}],&quot;and&quot;:{&quot;isActive&quot;:{&quot;eq&quot;:true}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query searchUsers($filter: SearchableUserFilterInput, $limit: Int, $nextToken: String) {\n  searchUsers(filter: $filter, limit: $limit, nextToken: $nextToken) {\n    items {\n      id\n      owner\n      firstName\n      lastName\n      userName\n      profileLinkName\n      usertourChatboxOnOff\n      usertourFeedSearchBox\n      usertourFeedCategory\n      usertourPostLike\n      usertourPostCategory\n      usertourPostTextArea\n      usertourProgressBar\n      usertourCommentLike\n      usertourAudience\n      gender\n      isBlockByAdmin\n      totalGoldStars\n      totalSilverStars\n      country\n      state\n      isAccountVerified\n      isActive\n      defaultFeed\n      choiceMeta\n      postCategoryID\n      authProvider\n      whoCanAccessWall\n      whoCanAccessPhotos\n      whoCanSendMessage\n      whoCanSeeProfile\n      isChattBoxActive\n      displyHomestate\n      displyLiveIn\n      homestate\n      homestateCity\n      homestateCountry\n      intro\n      isFoundingMember\n      profilePhotoActive\n      totalGoldStars\n      totalSilverStars\n      userStoryAbout\n      userStoryAboutVisibilty\n      userStoryEarlyLife\n      userStoryEarlyLifeVisibilty\n      userStoryFamily\n      userStoryFamilyVisibilty\n      userStoryCareer\n      userStoryCareerVisibilty\n      userStoryBackground\n      userStoryBackgroundVisibilty\n      userStoryChildHood\n      userStoryChildHoodVisibilty\n      userStoryPersonalLife\n      userStoryPersonalVisibilty\n      websiteUrl\n      websiteUrlVisibilty\n      facebookUrl\n      facebookUrlVisibilty\n      twitterUrl\n      twitterUrlVisibilty\n      linkedInUrl\n      linkedInUrlVisibilty\n      instagramUrl\n      instagramUrlVisibilty\n      skypeUrl\n      skypeUrlVisibilty\n      pinterestUrl\n      pinterestUrlVisibilty\n      youtubeUrl\n      youtubeUrlVisibilty\n      forceSecurityCheckUp\n      emailNotification\n      pushNotification\n      forceTFA\n      headline\n      isExisting\n      isTFAActive\n      isVerified\n      createdAt\n      updatedAt\n      totalLikes\n      totalFollowers\n      totalStars\n      posts {\n        items {\n          id\n          userID\n          postCategoryID\n          groupId\n          visiblity\n          postContent\n          createdAt\n          updatedAt\n          isSharePost\n          sharePostMetaID\n          isWallPost\n          wallPostUserID\n          isGroupPost\n          userGroupID\n          postUsingDevice\n          linkpostURL\n          linkpostDescription\n          linkpostTitle\n          isPinPost\n          isSchedulepost\n          isBlocked\n          meamID\n        }\n        nextToken\n      }\n      friends {\n        items {\n          id\n          userID\n          friendUserID\n          isFollower\n          isActiveFriend\n          isPendingFriend\n        }\n        nextToken\n      }\n      userGroups {\n        items {\n          id\n          groupName\n          createdByUserID\n          postCategory\n          postGroup\n          privacy\n          policy\n          aboutGroup\n          pictureMetaID\n          status\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      pictureMeta {\n        items {\n          id\n          userID\n          postID\n          postCommentID\n          userGroupID\n          imagekey\n          videoKey\n          album\n          orderIndex\n          width\n          height\n          imageSize\n          type\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userEducation {\n        items {\n          id\n          userID\n          instID\n          insType\n          eduName\n          degree\n          fieldOfStudy\n          gpa\n          fromYear\n          fromMonth\n          toYear\n          toMonth\n          summary\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userProfessionalExperience {\n        items {\n          id\n          userID\n          instID\n          designation\n          fromYear\n          fromMonth\n          toYear\n          toMonth\n          isWorking\n          summery\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userHonorsAwards {\n        items {\n          id\n          userID\n          instID\n          year\n          month\n          summary\n          awardName\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userCertificate {\n        items {\n          id\n          userID\n          instID\n          certificateTitle\n          certificteNo\n          fromDdate\n          toDate\n          expireDate\n          certificateUrl\n          s3Key\n          visiblity\n          isExpire\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      blockByMe(ownerID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n        items {\n          id\n          ownerID\n        }\n      }\n      blockMe(userID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n        items {\n          id\n          userID\n        }\n      }\n      topCommentor {\n        items {\n          userID\n        }\n      }\n    }\n    nextToken\n  }\n}\n&quot;,&quot;variables&quot;:{&quot;filter&quot;:{&quot;or&quot;:[{&quot;firstName&quot;:{&quot;matchPhrasePrefix&quot;:&quot;Eri&quot;}},{&quot;lastName&quot;:{&quot;matchPhrasePrefix&quot;:&quot;Eri&quot;}},{&quot;email&quot;:{&quot;matchPhrasePrefix&quot;:&quot;Eri&quot;}}],&quot;and&quot;:{&quot;isActive&quot;:{&quot;eq&quot;:true}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query searchUsers($filter: SearchableUserFilterInput, $limit: Int, $nextToken: String) {\n  searchUsers(filter: $filter, limit: $limit, nextToken: $nextToken) {\n    items {\n      id\n      owner\n      firstName\n      lastName\n      userName\n      profileLinkName\n      usertourChatboxOnOff\n      usertourFeedSearchBox\n      usertourFeedCategory\n      usertourPostLike\n      usertourPostCategory\n      usertourPostTextArea\n      usertourProgressBar\n      usertourCommentLike\n      usertourAudience\n      gender\n      isBlockByAdmin\n      totalGoldStars\n      totalSilverStars\n      country\n      state\n      isAccountVerified\n      isActive\n      defaultFeed\n      choiceMeta\n      postCategoryID\n      authProvider\n      whoCanAccessWall\n      whoCanAccessPhotos\n      whoCanSendMessage\n      whoCanSeeProfile\n      isChattBoxActive\n      displyHomestate\n      displyLiveIn\n      homestate\n      homestateCity\n      homestateCountry\n      intro\n      isFoundingMember\n      profilePhotoActive\n      totalGoldStars\n      totalSilverStars\n      userStoryAbout\n      userStoryAboutVisibilty\n      userStoryEarlyLife\n      userStoryEarlyLifeVisibilty\n      userStoryFamily\n      userStoryFamilyVisibilty\n      userStoryCareer\n      userStoryCareerVisibilty\n      userStoryBackground\n      userStoryBackgroundVisibilty\n      userStoryChildHood\n      userStoryChildHoodVisibilty\n      userStoryPersonalLife\n      userStoryPersonalVisibilty\n      websiteUrl\n      websiteUrlVisibilty\n      facebookUrl\n      facebookUrlVisibilty\n      twitterUrl\n      twitterUrlVisibilty\n      linkedInUrl\n      linkedInUrlVisibilty\n      instagramUrl\n      instagramUrlVisibilty\n      skypeUrl\n      skypeUrlVisibilty\n      pinterestUrl\n      pinterestUrlVisibilty\n      youtubeUrl\n      youtubeUrlVisibilty\n      forceSecurityCheckUp\n      emailNotification\n      pushNotification\n      forceTFA\n      headline\n      isExisting\n      isTFAActive\n      isVerified\n      createdAt\n      updatedAt\n      totalLikes\n      totalFollowers\n      totalStars\n      posts {\n        items {\n          id\n          userID\n          postCategoryID\n          groupId\n          visiblity\n          postContent\n          createdAt\n          updatedAt\n          isSharePost\n          sharePostMetaID\n          isWallPost\n          wallPostUserID\n          isGroupPost\n          userGroupID\n          postUsingDevice\n          linkpostURL\n          linkpostDescription\n          linkpostTitle\n          isPinPost\n          isSchedulepost\n          isBlocked\n          meamID\n        }\n        nextToken\n      }\n      friends {\n        items {\n          id\n          userID\n          friendUserID\n          isFollower\n          isActiveFriend\n          isPendingFriend\n        }\n        nextToken\n      }\n      userGroups {\n        items {\n          id\n          groupName\n          createdByUserID\n          postCategory\n          postGroup\n          privacy\n          policy\n          aboutGroup\n          pictureMetaID\n          status\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      pictureMeta {\n        items {\n          id\n          userID\n          postID\n          postCommentID\n          userGroupID\n          imagekey\n          videoKey\n          album\n          orderIndex\n          width\n          height\n          imageSize\n          type\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userEducation {\n        items {\n          id\n          userID\n          instID\n          insType\n          eduName\n          degree\n          fieldOfStudy\n          gpa\n          fromYear\n          fromMonth\n          toYear\n          toMonth\n          summary\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userProfessionalExperience {\n        items {\n          id\n          userID\n          instID\n          designation\n          fromYear\n          fromMonth\n          toYear\n          toMonth\n          isWorking\n          summery\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userHonorsAwards {\n        items {\n          id\n          userID\n          instID\n          year\n          month\n          summary\n          awardName\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userCertificate {\n        items {\n          id\n          userID\n          instID\n          certificateTitle\n          certificteNo\n          fromDdate\n          toDate\n          expireDate\n          certificateUrl\n          s3Key\n          visiblity\n          isExpire\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      blockByMe(ownerID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n        items {\n          id\n          ownerID\n        }\n      }\n      blockMe(userID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n        items {\n          id\n          userID\n        }\n      }\n      topCommentor {\n        items {\n          userID\n        }\n      }\n    }\n    nextToken\n  }\n}\n&quot;,&quot;variables&quot;:{&quot;filter&quot;:{&quot;or&quot;:[{&quot;firstName&quot;:{&quot;matchPhrasePrefix&quot;:&quot;Eric&quot;}},{&quot;lastName&quot;:{&quot;matchPhrasePrefix&quot;:&quot;Eric&quot;}},{&quot;email&quot;:{&quot;matchPhrasePrefix&quot;:&quot;Eric&quot;}}],&quot;and&quot;:{&quot;isActive&quot;:{&quot;eq&quot;:true}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query searchUsers($filter: SearchableUserFilterInput, $limit: Int, $nextToken: String) {\n  searchUsers(filter: $filter, limit: $limit, nextToken: $nextToken) {\n    items {\n      id\n      owner\n      firstName\n      lastName\n      userName\n      profileLinkName\n      usertourChatboxOnOff\n      usertourFeedSearchBox\n      usertourFeedCategory\n      usertourPostLike\n      usertourPostCategory\n      usertourPostTextArea\n      usertourProgressBar\n      usertourCommentLike\n      usertourAudience\n      gender\n      isBlockByAdmin\n      totalGoldStars\n      totalSilverStars\n      country\n      state\n      isAccountVerified\n      isActive\n      defaultFeed\n      choiceMeta\n      postCategoryID\n      authProvider\n      whoCanAccessWall\n      whoCanAccessPhotos\n      whoCanSendMessage\n      whoCanSeeProfile\n      isChattBoxActive\n      displyHomestate\n      displyLiveIn\n      homestate\n      homestateCity\n      homestateCountry\n      intro\n      isFoundingMember\n      profilePhotoActive\n      totalGoldStars\n      totalSilverStars\n      userStoryAbout\n      userStoryAboutVisibilty\n      userStoryEarlyLife\n      userStoryEarlyLifeVisibilty\n      userStoryFamily\n      userStoryFamilyVisibilty\n      userStoryCareer\n      userStoryCareerVisibilty\n      userStoryBackground\n      userStoryBackgroundVisibilty\n      userStoryChildHood\n      userStoryChildHoodVisibilty\n      userStoryPersonalLife\n      userStoryPersonalVisibilty\n      websiteUrl\n      websiteUrlVisibilty\n      facebookUrl\n      facebookUrlVisibilty\n      twitterUrl\n      twitterUrlVisibilty\n      linkedInUrl\n      linkedInUrlVisibilty\n      instagramUrl\n      instagramUrlVisibilty\n      skypeUrl\n      skypeUrlVisibilty\n      pinterestUrl\n      pinterestUrlVisibilty\n      youtubeUrl\n      youtubeUrlVisibilty\n      forceSecurityCheckUp\n      emailNotification\n      pushNotification\n      forceTFA\n      headline\n      isExisting\n      isTFAActive\n      isVerified\n      createdAt\n      updatedAt\n      totalLikes\n      totalFollowers\n      totalStars\n      posts {\n        items {\n          id\n          userID\n          postCategoryID\n          groupId\n          visiblity\n          postContent\n          createdAt\n          updatedAt\n          isSharePost\n          sharePostMetaID\n          isWallPost\n          wallPostUserID\n          isGroupPost\n          userGroupID\n          postUsingDevice\n          linkpostURL\n          linkpostDescription\n          linkpostTitle\n          isPinPost\n          isSchedulepost\n          isBlocked\n          meamID\n        }\n        nextToken\n      }\n      friends {\n        items {\n          id\n          userID\n          friendUserID\n          isFollower\n          isActiveFriend\n          isPendingFriend\n        }\n        nextToken\n      }\n      userGroups {\n        items {\n          id\n          groupName\n          createdByUserID\n          postCategory\n          postGroup\n          privacy\n          policy\n          aboutGroup\n          pictureMetaID\n          status\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      pictureMeta {\n        items {\n          id\n          userID\n          postID\n          postCommentID\n          userGroupID\n          imagekey\n          videoKey\n          album\n          orderIndex\n          width\n          height\n          imageSize\n          type\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userEducation {\n        items {\n          id\n          userID\n          instID\n          insType\n          eduName\n          degree\n          fieldOfStudy\n          gpa\n          fromYear\n          fromMonth\n          toYear\n          toMonth\n          summary\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userProfessionalExperience {\n        items {\n          id\n          userID\n          instID\n          designation\n          fromYear\n          fromMonth\n          toYear\n          toMonth\n          isWorking\n          summery\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userHonorsAwards {\n        items {\n          id\n          userID\n          instID\n          year\n          month\n          summary\n          awardName\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userCertificate {\n        items {\n          id\n          userID\n          instID\n          certificateTitle\n          certificteNo\n          fromDdate\n          toDate\n          expireDate\n          certificateUrl\n          s3Key\n          visiblity\n          isExpire\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      blockByMe(ownerID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n        items {\n          id\n          ownerID\n        }\n      }\n      blockMe(userID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n        items {\n          id\n          userID\n        }\n      }\n      topCommentor {\n        items {\n          userID\n        }\n      }\n    }\n    nextToken\n  }\n}\n&quot;,&quot;variables&quot;:{&quot;filter&quot;:{&quot;or&quot;:[{&quot;firstName&quot;:{&quot;matchPhrasePrefix&quot;:&quot;Eric&quot;}},{&quot;lastName&quot;:{&quot;matchPhrasePrefix&quot;:&quot;Eric&quot;}},{&quot;email&quot;:{&quot;matchPhrasePrefix&quot;:&quot;Eric&quot;}}],&quot;and&quot;:{&quot;isActive&quot;:{&quot;eq&quot;:true}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query searchUsers($filter: SearchableUserFilterInput, $limit: Int, $nextToken: String) {\n  searchUsers(filter: $filter, limit: $limit, nextToken: $nextToken) {\n    items {\n      id\n      owner\n      firstName\n      lastName\n      userName\n      profileLinkName\n      usertourChatboxOnOff\n      usertourFeedSearchBox\n      usertourFeedCategory\n      usertourPostLike\n      usertourPostCategory\n      usertourPostTextArea\n      usertourProgressBar\n      usertourCommentLike\n      usertourAudience\n      gender\n      isBlockByAdmin\n      totalGoldStars\n      totalSilverStars\n      country\n      state\n      isAccountVerified\n      isActive\n      defaultFeed\n      choiceMeta\n      postCategoryID\n      authProvider\n      whoCanAccessWall\n      whoCanAccessPhotos\n      whoCanSendMessage\n      whoCanSeeProfile\n      isChattBoxActive\n      displyHomestate\n      displyLiveIn\n      homestate\n      homestateCity\n      homestateCountry\n      intro\n      isFoundingMember\n      profilePhotoActive\n      totalGoldStars\n      totalSilverStars\n      userStoryAbout\n      userStoryAboutVisibilty\n      userStoryEarlyLife\n      userStoryEarlyLifeVisibilty\n      userStoryFamily\n      userStoryFamilyVisibilty\n      userStoryCareer\n      userStoryCareerVisibilty\n      userStoryBackground\n      userStoryBackgroundVisibilty\n      userStoryChildHood\n      userStoryChildHoodVisibilty\n      userStoryPersonalLife\n      userStoryPersonalVisibilty\n      websiteUrl\n      websiteUrlVisibilty\n      facebookUrl\n      facebookUrlVisibilty\n      twitterUrl\n      twitterUrlVisibilty\n      linkedInUrl\n      linkedInUrlVisibilty\n      instagramUrl\n      instagramUrlVisibilty\n      skypeUrl\n      skypeUrlVisibilty\n      pinterestUrl\n      pinterestUrlVisibilty\n      youtubeUrl\n      youtubeUrlVisibilty\n      forceSecurityCheckUp\n      emailNotification\n      pushNotification\n      forceTFA\n      headline\n      isExisting\n      isTFAActive\n      isVerified\n      createdAt\n      updatedAt\n      totalLikes\n      totalFollowers\n      totalStars\n      posts {\n        items {\n          id\n          userID\n          postCategoryID\n          groupId\n          visiblity\n          postContent\n          createdAt\n          updatedAt\n          isSharePost\n          sharePostMetaID\n          isWallPost\n          wallPostUserID\n          isGroupPost\n          userGroupID\n          postUsingDevice\n          linkpostURL\n          linkpostDescription\n          linkpostTitle\n          isPinPost\n          isSchedulepost\n          isBlocked\n          meamID\n        }\n        nextToken\n      }\n      friends {\n        items {\n          id\n          userID\n          friendUserID\n          isFollower\n          isActiveFriend\n          isPendingFriend\n        }\n        nextToken\n      }\n      userGroups {\n        items {\n          id\n          groupName\n          createdByUserID\n          postCategory\n          postGroup\n          privacy\n          policy\n          aboutGroup\n          pictureMetaID\n          status\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      pictureMeta {\n        items {\n          id\n          userID\n          postID\n          postCommentID\n          userGroupID\n          imagekey\n          videoKey\n          album\n          orderIndex\n          width\n          height\n          imageSize\n          type\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userEducation {\n        items {\n          id\n          userID\n          instID\n          insType\n          eduName\n          degree\n          fieldOfStudy\n          gpa\n          fromYear\n          fromMonth\n          toYear\n          toMonth\n          summary\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userProfessionalExperience {\n        items {\n          id\n          userID\n          instID\n          designation\n          fromYear\n          fromMonth\n          toYear\n          toMonth\n          isWorking\n          summery\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userHonorsAwards {\n        items {\n          id\n          userID\n          instID\n          year\n          month\n          summary\n          awardName\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userCertificate {\n        items {\n          id\n          userID\n          instID\n          certificateTitle\n          certificteNo\n          fromDdate\n          toDate\n          expireDate\n          certificateUrl\n          s3Key\n          visiblity\n          isExpire\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      blockByMe(ownerID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n        items {\n          id\n          ownerID\n        }\n      }\n      blockMe(userID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n        items {\n          id\n          userID\n        }\n      }\n      topCommentor {\n        items {\n          userID\n        }\n      }\n    }\n    nextToken\n  }\n}\n&quot;,&quot;variables&quot;:{&quot;filter&quot;:{&quot;firstName&quot;:{&quot;matchPhrasePrefix&quot;:&quot;Eric&quot;},&quot;and&quot;:{&quot;isActive&quot;:{&quot;eq&quot;:true}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query searchUsers($filter: SearchableUserFilterInput, $limit: Int, $nextToken: String) {\n  searchUsers(filter: $filter, limit: $limit, nextToken: $nextToken) {\n    items {\n      id\n      owner\n      firstName\n      lastName\n      userName\n      profileLinkName\n      usertourChatboxOnOff\n      usertourFeedSearchBox\n      usertourFeedCategory\n      usertourPostLike\n      usertourPostCategory\n      usertourPostTextArea\n      usertourProgressBar\n      usertourCommentLike\n      usertourAudience\n      gender\n      isBlockByAdmin\n      totalGoldStars\n      totalSilverStars\n      country\n      state\n      isAccountVerified\n      isActive\n      defaultFeed\n      choiceMeta\n      postCategoryID\n      authProvider\n      whoCanAccessWall\n      whoCanAccessPhotos\n      whoCanSendMessage\n      whoCanSeeProfile\n      isChattBoxActive\n      displyHomestate\n      displyLiveIn\n      homestate\n      homestateCity\n      homestateCountry\n      intro\n      isFoundingMember\n      profilePhotoActive\n      totalGoldStars\n      totalSilverStars\n      userStoryAbout\n      userStoryAboutVisibilty\n      userStoryEarlyLife\n      userStoryEarlyLifeVisibilty\n      userStoryFamily\n      userStoryFamilyVisibilty\n      userStoryCareer\n      userStoryCareerVisibilty\n      userStoryBackground\n      userStoryBackgroundVisibilty\n      userStoryChildHood\n      userStoryChildHoodVisibilty\n      userStoryPersonalLife\n      userStoryPersonalVisibilty\n      websiteUrl\n      websiteUrlVisibilty\n      facebookUrl\n      facebookUrlVisibilty\n      twitterUrl\n      twitterUrlVisibilty\n      linkedInUrl\n      linkedInUrlVisibilty\n      instagramUrl\n      instagramUrlVisibilty\n      skypeUrl\n      skypeUrlVisibilty\n      pinterestUrl\n      pinterestUrlVisibilty\n      youtubeUrl\n      youtubeUrlVisibilty\n      forceSecurityCheckUp\n      emailNotification\n      pushNotification\n      forceTFA\n      headline\n      isExisting\n      isTFAActive\n      isVerified\n      createdAt\n      updatedAt\n      totalLikes\n      totalFollowers\n      totalStars\n      posts {\n        items {\n          id\n          userID\n          postCategoryID\n          groupId\n          visiblity\n          postContent\n          createdAt\n          updatedAt\n          isSharePost\n          sharePostMetaID\n          isWallPost\n          wallPostUserID\n          isGroupPost\n          userGroupID\n          postUsingDevice\n          linkpostURL\n          linkpostDescription\n          linkpostTitle\n          isPinPost\n          isSchedulepost\n          isBlocked\n          meamID\n        }\n        nextToken\n      }\n      friends {\n        items {\n          id\n          userID\n          friendUserID\n          isFollower\n          isActiveFriend\n          isPendingFriend\n        }\n        nextToken\n      }\n      userGroups {\n        items {\n          id\n          groupName\n          createdByUserID\n          postCategory\n          postGroup\n          privacy\n          policy\n          aboutGroup\n          pictureMetaID\n          status\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      pictureMeta {\n        items {\n          id\n          userID\n          postID\n          postCommentID\n          userGroupID\n          imagekey\n          videoKey\n          album\n          orderIndex\n          width\n          height\n          imageSize\n          type\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userEducation {\n        items {\n          id\n          userID\n          instID\n          insType\n          eduName\n          degree\n          fieldOfStudy\n          gpa\n          fromYear\n          fromMonth\n          toYear\n          toMonth\n          summary\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userProfessionalExperience {\n        items {\n          id\n          userID\n          instID\n          designation\n          fromYear\n          fromMonth\n          toYear\n          toMonth\n          isWorking\n          summery\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userHonorsAwards {\n        items {\n          id\n          userID\n          instID\n          year\n          month\n          summary\n          awardName\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userCertificate {\n        items {\n          id\n          userID\n          instID\n          certificateTitle\n          certificteNo\n          fromDdate\n          toDate\n          expireDate\n          certificateUrl\n          s3Key\n          visiblity\n          isExpire\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      blockByMe(ownerID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n        items {\n          id\n          ownerID\n        }\n      }\n      blockMe(userID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n        items {\n          id\n          userID\n        }\n      }\n      topCommentor {\n        items {\n          userID\n        }\n      }\n    }\n    nextToken\n  }\n}\n&quot;,&quot;variables&quot;:{&quot;filter&quot;:{&quot;firstName&quot;:{&quot;matchPhrasePrefix&quot;:&quot;Eric&quot;},&quot;and&quot;:{&quot;isActive&quot;:{&quot;eq&quot;:true}}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query searchUsers($filter: SearchableUserFilterInput, $limit: Int, $nextToken: String) {\n  searchUsers(filter: $filter, limit: $limit, nextToken: $nextToken) {\n    items {\n      id\n      owner\n      firstName\n      lastName\n      userName\n      profileLinkName\n      usertourChatboxOnOff\n      usertourFeedSearchBox\n      usertourFeedCategory\n      usertourPostLike\n      usertourPostCategory\n      usertourPostTextArea\n      usertourProgressBar\n      usertourCommentLike\n      usertourAudience\n      gender\n      isBlockByAdmin\n      totalGoldStars\n      totalSilverStars\n      country\n      state\n      isAccountVerified\n      isActive\n      defaultFeed\n      choiceMeta\n      postCategoryID\n      authProvider\n      whoCanAccessWall\n      whoCanAccessPhotos\n      whoCanSendMessage\n      whoCanSeeProfile\n      isChattBoxActive\n      displyHomestate\n      displyLiveIn\n      homestate\n      homestateCity\n      homestateCountry\n      intro\n      isFoundingMember\n      profilePhotoActive\n      totalGoldStars\n      totalSilverStars\n      userStoryAbout\n      userStoryAboutVisibilty\n      userStoryEarlyLife\n      userStoryEarlyLifeVisibilty\n      userStoryFamily\n      userStoryFamilyVisibilty\n      userStoryCareer\n      userStoryCareerVisibilty\n      userStoryBackground\n      userStoryBackgroundVisibilty\n      userStoryChildHood\n      userStoryChildHoodVisibilty\n      userStoryPersonalLife\n      userStoryPersonalVisibilty\n      websiteUrl\n      websiteUrlVisibilty\n      facebookUrl\n      facebookUrlVisibilty\n      twitterUrl\n      twitterUrlVisibilty\n      linkedInUrl\n      linkedInUrlVisibilty\n      instagramUrl\n      instagramUrlVisibilty\n      skypeUrl\n      skypeUrlVisibilty\n      pinterestUrl\n      pinterestUrlVisibilty\n      youtubeUrl\n      youtubeUrlVisibilty\n      forceSecurityCheckUp\n      emailNotification\n      pushNotification\n      forceTFA\n      headline\n      isExisting\n      isTFAActive\n      isVerified\n      createdAt\n      updatedAt\n      totalLikes\n      totalFollowers\n      totalStars\n      posts {\n        items {\n          id\n          userID\n          postCategoryID\n          groupId\n          visiblity\n          postContent\n          createdAt\n          updatedAt\n          isSharePost\n          sharePostMetaID\n          isWallPost\n          wallPostUserID\n          isGroupPost\n          userGroupID\n          postUsingDevice\n          linkpostURL\n          linkpostDescription\n          linkpostTitle\n          isPinPost\n          isSchedulepost\n          isBlocked\n          meamID\n        }\n        nextToken\n      }\n      friends {\n        items {\n          id\n          userID\n          friendUserID\n          isFollower\n          isActiveFriend\n          isPendingFriend\n        }\n        nextToken\n      }\n      userGroups {\n        items {\n          id\n          groupName\n          createdByUserID\n          postCategory\n          postGroup\n          privacy\n          policy\n          aboutGroup\n          pictureMetaID\n          status\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      pictureMeta {\n        items {\n          id\n          userID\n          postID\n          postCommentID\n          userGroupID\n          imagekey\n          videoKey\n          album\n          orderIndex\n          width\n          height\n          imageSize\n          type\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userEducation {\n        items {\n          id\n          userID\n          instID\n          insType\n          eduName\n          degree\n          fieldOfStudy\n          gpa\n          fromYear\n          fromMonth\n          toYear\n          toMonth\n          summary\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userProfessionalExperience {\n        items {\n          id\n          userID\n          instID\n          designation\n          fromYear\n          fromMonth\n          toYear\n          toMonth\n          isWorking\n          summery\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userHonorsAwards {\n        items {\n          id\n          userID\n          instID\n          year\n          month\n          summary\n          awardName\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userCertificate {\n        items {\n          id\n          userID\n          instID\n          certificateTitle\n          certificteNo\n          fromDdate\n          toDate\n          expireDate\n          certificateUrl\n          s3Key\n          visiblity\n          isExpire\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      blockByMe(ownerID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n        items {\n          id\n          ownerID\n        }\n      }\n      blockMe(userID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n        items {\n          id\n          userID\n        }\n      }\n      topCommentor {\n        items {\n          userID\n        }\n      }\n    }\n    nextToken\n  }\n}\n&quot;,&quot;variables&quot;:{&quot;filter&quot;:{&quot;and&quot;:[{&quot;firstName&quot;:{&quot;matchPhrasePrefix&quot;:&quot;Eric&quot;},&quot;lastName&quot;:{&quot;matchPhrasePrefix&quot;:&quot;S&quot;},&quot;isActive&quot;:{&quot;eq&quot;:true},&quot;id&quot;:{&quot;ne&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;}}]}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query searchUsers($filter: SearchableUserFilterInput, $limit: Int, $nextToken: String) {\n  searchUsers(filter: $filter, limit: $limit, nextToken: $nextToken) {\n    items {\n      id\n      owner\n      firstName\n      lastName\n      userName\n      profileLinkName\n      usertourChatboxOnOff\n      usertourFeedSearchBox\n      usertourFeedCategory\n      usertourPostLike\n      usertourPostCategory\n      usertourPostTextArea\n      usertourProgressBar\n      usertourCommentLike\n      usertourAudience\n      gender\n      isBlockByAdmin\n      totalGoldStars\n      totalSilverStars\n      country\n      state\n      isAccountVerified\n      isActive\n      defaultFeed\n      choiceMeta\n      postCategoryID\n      authProvider\n      whoCanAccessWall\n      whoCanAccessPhotos\n      whoCanSendMessage\n      whoCanSeeProfile\n      isChattBoxActive\n      displyHomestate\n      displyLiveIn\n      homestate\n      homestateCity\n      homestateCountry\n      intro\n      isFoundingMember\n      profilePhotoActive\n      totalGoldStars\n      totalSilverStars\n      userStoryAbout\n      userStoryAboutVisibilty\n      userStoryEarlyLife\n      userStoryEarlyLifeVisibilty\n      userStoryFamily\n      userStoryFamilyVisibilty\n      userStoryCareer\n      userStoryCareerVisibilty\n      userStoryBackground\n      userStoryBackgroundVisibilty\n      userStoryChildHood\n      userStoryChildHoodVisibilty\n      userStoryPersonalLife\n      userStoryPersonalVisibilty\n      websiteUrl\n      websiteUrlVisibilty\n      facebookUrl\n      facebookUrlVisibilty\n      twitterUrl\n      twitterUrlVisibilty\n      linkedInUrl\n      linkedInUrlVisibilty\n      instagramUrl\n      instagramUrlVisibilty\n      skypeUrl\n      skypeUrlVisibilty\n      pinterestUrl\n      pinterestUrlVisibilty\n      youtubeUrl\n      youtubeUrlVisibilty\n      forceSecurityCheckUp\n      emailNotification\n      pushNotification\n      forceTFA\n      headline\n      isExisting\n      isTFAActive\n      isVerified\n      createdAt\n      updatedAt\n      totalLikes\n      totalFollowers\n      totalStars\n      posts {\n        items {\n          id\n          userID\n          postCategoryID\n          groupId\n          visiblity\n          postContent\n          createdAt\n          updatedAt\n          isSharePost\n          sharePostMetaID\n          isWallPost\n          wallPostUserID\n          isGroupPost\n          userGroupID\n          postUsingDevice\n          linkpostURL\n          linkpostDescription\n          linkpostTitle\n          isPinPost\n          isSchedulepost\n          isBlocked\n          meamID\n        }\n        nextToken\n      }\n      friends {\n        items {\n          id\n          userID\n          friendUserID\n          isFollower\n          isActiveFriend\n          isPendingFriend\n        }\n        nextToken\n      }\n      userGroups {\n        items {\n          id\n          groupName\n          createdByUserID\n          postCategory\n          postGroup\n          privacy\n          policy\n          aboutGroup\n          pictureMetaID\n          status\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      pictureMeta {\n        items {\n          id\n          userID\n          postID\n          postCommentID\n          userGroupID\n          imagekey\n          videoKey\n          album\n          orderIndex\n          width\n          height\n          imageSize\n          type\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userEducation {\n        items {\n          id\n          userID\n          instID\n          insType\n          eduName\n          degree\n          fieldOfStudy\n          gpa\n          fromYear\n          fromMonth\n          toYear\n          toMonth\n          summary\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userProfessionalExperience {\n        items {\n          id\n          userID\n          instID\n          designation\n          fromYear\n          fromMonth\n          toYear\n          toMonth\n          isWorking\n          summery\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userHonorsAwards {\n        items {\n          id\n          userID\n          instID\n          year\n          month\n          summary\n          awardName\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userCertificate {\n        items {\n          id\n          userID\n          instID\n          certificateTitle\n          certificteNo\n          fromDdate\n          toDate\n          expireDate\n          certificateUrl\n          s3Key\n          visiblity\n          isExpire\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      blockByMe(ownerID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n        items {\n          id\n          ownerID\n        }\n      }\n      blockMe(userID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n        items {\n          id\n          userID\n        }\n      }\n      topCommentor {\n        items {\n          userID\n        }\n      }\n    }\n    nextToken\n  }\n}\n&quot;,&quot;variables&quot;:{&quot;filter&quot;:{&quot;and&quot;:[{&quot;firstName&quot;:{&quot;matchPhrasePrefix&quot;:&quot;Eric&quot;},&quot;lastName&quot;:{&quot;matchPhrasePrefix&quot;:&quot;S&quot;},&quot;isActive&quot;:{&quot;eq&quot;:true},&quot;id&quot;:{&quot;ne&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;}}]}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query searchUsers($filter: SearchableUserFilterInput, $limit: Int, $nextToken: String) {\n  searchUsers(filter: $filter, limit: $limit, nextToken: $nextToken) {\n    items {\n      id\n      owner\n      firstName\n      lastName\n      userName\n      profileLinkName\n      usertourChatboxOnOff\n      usertourFeedSearchBox\n      usertourFeedCategory\n      usertourPostLike\n      usertourPostCategory\n      usertourPostTextArea\n      usertourProgressBar\n      usertourCommentLike\n      usertourAudience\n      gender\n      isBlockByAdmin\n      totalGoldStars\n      totalSilverStars\n      country\n      state\n      isAccountVerified\n      isActive\n      defaultFeed\n      choiceMeta\n      postCategoryID\n      authProvider\n      whoCanAccessWall\n      whoCanAccessPhotos\n      whoCanSendMessage\n      whoCanSeeProfile\n      isChattBoxActive\n      displyHomestate\n      displyLiveIn\n      homestate\n      homestateCity\n      homestateCountry\n      intro\n      isFoundingMember\n      profilePhotoActive\n      totalGoldStars\n      totalSilverStars\n      userStoryAbout\n      userStoryAboutVisibilty\n      userStoryEarlyLife\n      userStoryEarlyLifeVisibilty\n      userStoryFamily\n      userStoryFamilyVisibilty\n      userStoryCareer\n      userStoryCareerVisibilty\n      userStoryBackground\n      userStoryBackgroundVisibilty\n      userStoryChildHood\n      userStoryChildHoodVisibilty\n      userStoryPersonalLife\n      userStoryPersonalVisibilty\n      websiteUrl\n      websiteUrlVisibilty\n      facebookUrl\n      facebookUrlVisibilty\n      twitterUrl\n      twitterUrlVisibilty\n      linkedInUrl\n      linkedInUrlVisibilty\n      instagramUrl\n      instagramUrlVisibilty\n      skypeUrl\n      skypeUrlVisibilty\n      pinterestUrl\n      pinterestUrlVisibilty\n      youtubeUrl\n      youtubeUrlVisibilty\n      forceSecurityCheckUp\n      emailNotification\n      pushNotification\n      forceTFA\n      headline\n      isExisting\n      isTFAActive\n      isVerified\n      createdAt\n      updatedAt\n      totalLikes\n      totalFollowers\n      totalStars\n      posts {\n        items {\n          id\n          userID\n          postCategoryID\n          groupId\n          visiblity\n          postContent\n          createdAt\n          updatedAt\n          isSharePost\n          sharePostMetaID\n          isWallPost\n          wallPostUserID\n          isGroupPost\n          userGroupID\n          postUsingDevice\n          linkpostURL\n          linkpostDescription\n          linkpostTitle\n          isPinPost\n          isSchedulepost\n          isBlocked\n          meamID\n        }\n        nextToken\n      }\n      friends {\n        items {\n          id\n          userID\n          friendUserID\n          isFollower\n          isActiveFriend\n          isPendingFriend\n        }\n        nextToken\n      }\n      userGroups {\n        items {\n          id\n          groupName\n          createdByUserID\n          postCategory\n          postGroup\n          privacy\n          policy\n          aboutGroup\n          pictureMetaID\n          status\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      pictureMeta {\n        items {\n          id\n          userID\n          postID\n          postCommentID\n          userGroupID\n          imagekey\n          videoKey\n          album\n          orderIndex\n          width\n          height\n          imageSize\n          type\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userEducation {\n        items {\n          id\n          userID\n          instID\n          insType\n          eduName\n          degree\n          fieldOfStudy\n          gpa\n          fromYear\n          fromMonth\n          toYear\n          toMonth\n          summary\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userProfessionalExperience {\n        items {\n          id\n          userID\n          instID\n          designation\n          fromYear\n          fromMonth\n          toYear\n          toMonth\n          isWorking\n          summery\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userHonorsAwards {\n        items {\n          id\n          userID\n          instID\n          year\n          month\n          summary\n          awardName\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userCertificate {\n        items {\n          id\n          userID\n          instID\n          certificateTitle\n          certificteNo\n          fromDdate\n          toDate\n          expireDate\n          certificateUrl\n          s3Key\n          visiblity\n          isExpire\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      blockByMe(ownerID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n        items {\n          id\n          ownerID\n        }\n      }\n      blockMe(userID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n        items {\n          id\n          userID\n        }\n      }\n      topCommentor {\n        items {\n          userID\n        }\n      }\n    }\n    nextToken\n  }\n}\n&quot;,&quot;variables&quot;:{&quot;filter&quot;:{&quot;and&quot;:[{&quot;firstName&quot;:{&quot;matchPhrasePrefix&quot;:&quot;Eric&quot;},&quot;lastName&quot;:{&quot;matchPhrasePrefix&quot;:&quot;S&quot;},&quot;isActive&quot;:{&quot;eq&quot;:true},&quot;id&quot;:{&quot;ne&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;}}]}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  likerslaGetChatUserList(loginUserID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, searchKey: \&quot;\&quot;, limit: \&quot;20\&quot;)\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query searchUsers($filter: SearchableUserFilterInput, $limit: Int, $nextToken: String) {\n  searchUsers(filter: $filter, limit: $limit, nextToken: $nextToken) {\n    items {\n      id\n      owner\n      firstName\n      lastName\n      userName\n      profileLinkName\n      usertourChatboxOnOff\n      usertourFeedSearchBox\n      usertourFeedCategory\n      usertourPostLike\n      usertourPostCategory\n      usertourPostTextArea\n      usertourProgressBar\n      usertourCommentLike\n      usertourAudience\n      gender\n      isBlockByAdmin\n      totalGoldStars\n      totalSilverStars\n      country\n      state\n      isAccountVerified\n      isActive\n      defaultFeed\n      choiceMeta\n      postCategoryID\n      authProvider\n      whoCanAccessWall\n      whoCanAccessPhotos\n      whoCanSendMessage\n      whoCanSeeProfile\n      isChattBoxActive\n      displyHomestate\n      displyLiveIn\n      homestate\n      homestateCity\n      homestateCountry\n      intro\n      isFoundingMember\n      profilePhotoActive\n      totalGoldStars\n      totalSilverStars\n      userStoryAbout\n      userStoryAboutVisibilty\n      userStoryEarlyLife\n      userStoryEarlyLifeVisibilty\n      userStoryFamily\n      userStoryFamilyVisibilty\n      userStoryCareer\n      userStoryCareerVisibilty\n      userStoryBackground\n      userStoryBackgroundVisibilty\n      userStoryChildHood\n      userStoryChildHoodVisibilty\n      userStoryPersonalLife\n      userStoryPersonalVisibilty\n      websiteUrl\n      websiteUrlVisibilty\n      facebookUrl\n      facebookUrlVisibilty\n      twitterUrl\n      twitterUrlVisibilty\n      linkedInUrl\n      linkedInUrlVisibilty\n      instagramUrl\n      instagramUrlVisibilty\n      skypeUrl\n      skypeUrlVisibilty\n      pinterestUrl\n      pinterestUrlVisibilty\n      youtubeUrl\n      youtubeUrlVisibilty\n      forceSecurityCheckUp\n      emailNotification\n      pushNotification\n      forceTFA\n      headline\n      isExisting\n      isTFAActive\n      isVerified\n      createdAt\n      updatedAt\n      totalLikes\n      totalFollowers\n      totalStars\n      posts {\n        items {\n          id\n          userID\n          postCategoryID\n          groupId\n          visiblity\n          postContent\n          createdAt\n          updatedAt\n          isSharePost\n          sharePostMetaID\n          isWallPost\n          wallPostUserID\n          isGroupPost\n          userGroupID\n          postUsingDevice\n          linkpostURL\n          linkpostDescription\n          linkpostTitle\n          isPinPost\n          isSchedulepost\n          isBlocked\n          meamID\n        }\n        nextToken\n      }\n      friends {\n        items {\n          id\n          userID\n          friendUserID\n          isFollower\n          isActiveFriend\n          isPendingFriend\n        }\n        nextToken\n      }\n      userGroups {\n        items {\n          id\n          groupName\n          createdByUserID\n          postCategory\n          postGroup\n          privacy\n          policy\n          aboutGroup\n          pictureMetaID\n          status\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      pictureMeta {\n        items {\n          id\n          userID\n          postID\n          postCommentID\n          userGroupID\n          imagekey\n          videoKey\n          album\n          orderIndex\n          width\n          height\n          imageSize\n          type\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userEducation {\n        items {\n          id\n          userID\n          instID\n          insType\n          eduName\n          degree\n          fieldOfStudy\n          gpa\n          fromYear\n          fromMonth\n          toYear\n          toMonth\n          summary\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userProfessionalExperience {\n        items {\n          id\n          userID\n          instID\n          designation\n          fromYear\n          fromMonth\n          toYear\n          toMonth\n          isWorking\n          summery\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userHonorsAwards {\n        items {\n          id\n          userID\n          instID\n          year\n          month\n          summary\n          awardName\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userCertificate {\n        items {\n          id\n          userID\n          instID\n          certificateTitle\n          certificteNo\n          fromDdate\n          toDate\n          expireDate\n          certificateUrl\n          s3Key\n          visiblity\n          isExpire\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      blockByMe(ownerID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n        items {\n          id\n          ownerID\n        }\n      }\n      blockMe(userID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n        items {\n          id\n          userID\n        }\n      }\n      topCommentor {\n        items {\n          userID\n        }\n      }\n    }\n    nextToken\n  }\n}\n&quot;,&quot;variables&quot;:{&quot;filter&quot;:{&quot;and&quot;:[{&quot;firstName&quot;:{&quot;matchPhrasePrefix&quot;:&quot;Eric&quot;},&quot;lastName&quot;:{&quot;matchPhrasePrefix&quot;:&quot;Sh&quot;},&quot;isActive&quot;:{&quot;eq&quot;:true},&quot;id&quot;:{&quot;ne&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;}}]}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query searchUsers($filter: SearchableUserFilterInput, $limit: Int, $nextToken: String) {\n  searchUsers(filter: $filter, limit: $limit, nextToken: $nextToken) {\n    items {\n      id\n      owner\n      firstName\n      lastName\n      userName\n      profileLinkName\n      usertourChatboxOnOff\n      usertourFeedSearchBox\n      usertourFeedCategory\n      usertourPostLike\n      usertourPostCategory\n      usertourPostTextArea\n      usertourProgressBar\n      usertourCommentLike\n      usertourAudience\n      gender\n      isBlockByAdmin\n      totalGoldStars\n      totalSilverStars\n      country\n      state\n      isAccountVerified\n      isActive\n      defaultFeed\n      choiceMeta\n      postCategoryID\n      authProvider\n      whoCanAccessWall\n      whoCanAccessPhotos\n      whoCanSendMessage\n      whoCanSeeProfile\n      isChattBoxActive\n      displyHomestate\n      displyLiveIn\n      homestate\n      homestateCity\n      homestateCountry\n      intro\n      isFoundingMember\n      profilePhotoActive\n      totalGoldStars\n      totalSilverStars\n      userStoryAbout\n      userStoryAboutVisibilty\n      userStoryEarlyLife\n      userStoryEarlyLifeVisibilty\n      userStoryFamily\n      userStoryFamilyVisibilty\n      userStoryCareer\n      userStoryCareerVisibilty\n      userStoryBackground\n      userStoryBackgroundVisibilty\n      userStoryChildHood\n      userStoryChildHoodVisibilty\n      userStoryPersonalLife\n      userStoryPersonalVisibilty\n      websiteUrl\n      websiteUrlVisibilty\n      facebookUrl\n      facebookUrlVisibilty\n      twitterUrl\n      twitterUrlVisibilty\n      linkedInUrl\n      linkedInUrlVisibilty\n      instagramUrl\n      instagramUrlVisibilty\n      skypeUrl\n      skypeUrlVisibilty\n      pinterestUrl\n      pinterestUrlVisibilty\n      youtubeUrl\n      youtubeUrlVisibilty\n      forceSecurityCheckUp\n      emailNotification\n      pushNotification\n      forceTFA\n      headline\n      isExisting\n      isTFAActive\n      isVerified\n      createdAt\n      updatedAt\n      totalLikes\n      totalFollowers\n      totalStars\n      posts {\n        items {\n          id\n          userID\n          postCategoryID\n          groupId\n          visiblity\n          postContent\n          createdAt\n          updatedAt\n          isSharePost\n          sharePostMetaID\n          isWallPost\n          wallPostUserID\n          isGroupPost\n          userGroupID\n          postUsingDevice\n          linkpostURL\n          linkpostDescription\n          linkpostTitle\n          isPinPost\n          isSchedulepost\n          isBlocked\n          meamID\n        }\n        nextToken\n      }\n      friends {\n        items {\n          id\n          userID\n          friendUserID\n          isFollower\n          isActiveFriend\n          isPendingFriend\n        }\n        nextToken\n      }\n      userGroups {\n        items {\n          id\n          groupName\n          createdByUserID\n          postCategory\n          postGroup\n          privacy\n          policy\n          aboutGroup\n          pictureMetaID\n          status\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      pictureMeta {\n        items {\n          id\n          userID\n          postID\n          postCommentID\n          userGroupID\n          imagekey\n          videoKey\n          album\n          orderIndex\n          width\n          height\n          imageSize\n          type\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userEducation {\n        items {\n          id\n          userID\n          instID\n          insType\n          eduName\n          degree\n          fieldOfStudy\n          gpa\n          fromYear\n          fromMonth\n          toYear\n          toMonth\n          summary\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userProfessionalExperience {\n        items {\n          id\n          userID\n          instID\n          designation\n          fromYear\n          fromMonth\n          toYear\n          toMonth\n          isWorking\n          summery\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userHonorsAwards {\n        items {\n          id\n          userID\n          instID\n          year\n          month\n          summary\n          awardName\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userCertificate {\n        items {\n          id\n          userID\n          instID\n          certificateTitle\n          certificteNo\n          fromDdate\n          toDate\n          expireDate\n          certificateUrl\n          s3Key\n          visiblity\n          isExpire\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      blockByMe(ownerID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n        items {\n          id\n          ownerID\n        }\n      }\n      blockMe(userID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n        items {\n          id\n          userID\n        }\n      }\n      topCommentor {\n        items {\n          userID\n        }\n      }\n    }\n    nextToken\n  }\n}\n&quot;,&quot;variables&quot;:{&quot;filter&quot;:{&quot;and&quot;:[{&quot;firstName&quot;:{&quot;matchPhrasePrefix&quot;:&quot;Eric&quot;},&quot;lastName&quot;:{&quot;matchPhrasePrefix&quot;:&quot;Sh&quot;},&quot;isActive&quot;:{&quot;eq&quot;:true},&quot;id&quot;:{&quot;ne&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;}}]}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query searchUsers($filter: SearchableUserFilterInput, $limit: Int, $nextToken: String) {\n  searchUsers(filter: $filter, limit: $limit, nextToken: $nextToken) {\n    items {\n      id\n      owner\n      firstName\n      lastName\n      userName\n      profileLinkName\n      usertourChatboxOnOff\n      usertourFeedSearchBox\n      usertourFeedCategory\n      usertourPostLike\n      usertourPostCategory\n      usertourPostTextArea\n      usertourProgressBar\n      usertourCommentLike\n      usertourAudience\n      gender\n      isBlockByAdmin\n      totalGoldStars\n      totalSilverStars\n      country\n      state\n      isAccountVerified\n      isActive\n      defaultFeed\n      choiceMeta\n      postCategoryID\n      authProvider\n      whoCanAccessWall\n      whoCanAccessPhotos\n      whoCanSendMessage\n      whoCanSeeProfile\n      isChattBoxActive\n      displyHomestate\n      displyLiveIn\n      homestate\n      homestateCity\n      homestateCountry\n      intro\n      isFoundingMember\n      profilePhotoActive\n      totalGoldStars\n      totalSilverStars\n      userStoryAbout\n      userStoryAboutVisibilty\n      userStoryEarlyLife\n      userStoryEarlyLifeVisibilty\n      userStoryFamily\n      userStoryFamilyVisibilty\n      userStoryCareer\n      userStoryCareerVisibilty\n      userStoryBackground\n      userStoryBackgroundVisibilty\n      userStoryChildHood\n      userStoryChildHoodVisibilty\n      userStoryPersonalLife\n      userStoryPersonalVisibilty\n      websiteUrl\n      websiteUrlVisibilty\n      facebookUrl\n      facebookUrlVisibilty\n      twitterUrl\n      twitterUrlVisibilty\n      linkedInUrl\n      linkedInUrlVisibilty\n      instagramUrl\n      instagramUrlVisibilty\n      skypeUrl\n      skypeUrlVisibilty\n      pinterestUrl\n      pinterestUrlVisibilty\n      youtubeUrl\n      youtubeUrlVisibilty\n      forceSecurityCheckUp\n      emailNotification\n      pushNotification\n      forceTFA\n      headline\n      isExisting\n      isTFAActive\n      isVerified\n      createdAt\n      updatedAt\n      totalLikes\n      totalFollowers\n      totalStars\n      posts {\n        items {\n          id\n          userID\n          postCategoryID\n          groupId\n          visiblity\n          postContent\n          createdAt\n          updatedAt\n          isSharePost\n          sharePostMetaID\n          isWallPost\n          wallPostUserID\n          isGroupPost\n          userGroupID\n          postUsingDevice\n          linkpostURL\n          linkpostDescription\n          linkpostTitle\n          isPinPost\n          isSchedulepost\n          isBlocked\n          meamID\n        }\n        nextToken\n      }\n      friends {\n        items {\n          id\n          userID\n          friendUserID\n          isFollower\n          isActiveFriend\n          isPendingFriend\n        }\n        nextToken\n      }\n      userGroups {\n        items {\n          id\n          groupName\n          createdByUserID\n          postCategory\n          postGroup\n          privacy\n          policy\n          aboutGroup\n          pictureMetaID\n          status\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      pictureMeta {\n        items {\n          id\n          userID\n          postID\n          postCommentID\n          userGroupID\n          imagekey\n          videoKey\n          album\n          orderIndex\n          width\n          height\n          imageSize\n          type\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userEducation {\n        items {\n          id\n          userID\n          instID\n          insType\n          eduName\n          degree\n          fieldOfStudy\n          gpa\n          fromYear\n          fromMonth\n          toYear\n          toMonth\n          summary\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userProfessionalExperience {\n        items {\n          id\n          userID\n          instID\n          designation\n          fromYear\n          fromMonth\n          toYear\n          toMonth\n          isWorking\n          summery\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userHonorsAwards {\n        items {\n          id\n          userID\n          instID\n          year\n          month\n          summary\n          awardName\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userCertificate {\n        items {\n          id\n          userID\n          instID\n          certificateTitle\n          certificteNo\n          fromDdate\n          toDate\n          expireDate\n          certificateUrl\n          s3Key\n          visiblity\n          isExpire\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      blockByMe(ownerID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n        items {\n          id\n          ownerID\n        }\n      }\n      blockMe(userID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n        items {\n          id\n          userID\n        }\n      }\n      topCommentor {\n        items {\n          userID\n        }\n      }\n    }\n    nextToken\n  }\n}\n&quot;,&quot;variables&quot;:{&quot;filter&quot;:{&quot;and&quot;:[{&quot;firstName&quot;:{&quot;matchPhrasePrefix&quot;:&quot;Eric&quot;},&quot;lastName&quot;:{&quot;matchPhrasePrefix&quot;:&quot;Sha&quot;},&quot;isActive&quot;:{&quot;eq&quot;:true},&quot;id&quot;:{&quot;ne&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;}}]}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query searchUsers($filter: SearchableUserFilterInput, $limit: Int, $nextToken: String) {\n  searchUsers(filter: $filter, limit: $limit, nextToken: $nextToken) {\n    items {\n      id\n      owner\n      firstName\n      lastName\n      userName\n      profileLinkName\n      usertourChatboxOnOff\n      usertourFeedSearchBox\n      usertourFeedCategory\n      usertourPostLike\n      usertourPostCategory\n      usertourPostTextArea\n      usertourProgressBar\n      usertourCommentLike\n      usertourAudience\n      gender\n      isBlockByAdmin\n      totalGoldStars\n      totalSilverStars\n      country\n      state\n      isAccountVerified\n      isActive\n      defaultFeed\n      choiceMeta\n      postCategoryID\n      authProvider\n      whoCanAccessWall\n      whoCanAccessPhotos\n      whoCanSendMessage\n      whoCanSeeProfile\n      isChattBoxActive\n      displyHomestate\n      displyLiveIn\n      homestate\n      homestateCity\n      homestateCountry\n      intro\n      isFoundingMember\n      profilePhotoActive\n      totalGoldStars\n      totalSilverStars\n      userStoryAbout\n      userStoryAboutVisibilty\n      userStoryEarlyLife\n      userStoryEarlyLifeVisibilty\n      userStoryFamily\n      userStoryFamilyVisibilty\n      userStoryCareer\n      userStoryCareerVisibilty\n      userStoryBackground\n      userStoryBackgroundVisibilty\n      userStoryChildHood\n      userStoryChildHoodVisibilty\n      userStoryPersonalLife\n      userStoryPersonalVisibilty\n      websiteUrl\n      websiteUrlVisibilty\n      facebookUrl\n      facebookUrlVisibilty\n      twitterUrl\n      twitterUrlVisibilty\n      linkedInUrl\n      linkedInUrlVisibilty\n      instagramUrl\n      instagramUrlVisibilty\n      skypeUrl\n      skypeUrlVisibilty\n      pinterestUrl\n      pinterestUrlVisibilty\n      youtubeUrl\n      youtubeUrlVisibilty\n      forceSecurityCheckUp\n      emailNotification\n      pushNotification\n      forceTFA\n      headline\n      isExisting\n      isTFAActive\n      isVerified\n      createdAt\n      updatedAt\n      totalLikes\n      totalFollowers\n      totalStars\n      posts {\n        items {\n          id\n          userID\n          postCategoryID\n          groupId\n          visiblity\n          postContent\n          createdAt\n          updatedAt\n          isSharePost\n          sharePostMetaID\n          isWallPost\n          wallPostUserID\n          isGroupPost\n          userGroupID\n          postUsingDevice\n          linkpostURL\n          linkpostDescription\n          linkpostTitle\n          isPinPost\n          isSchedulepost\n          isBlocked\n          meamID\n        }\n        nextToken\n      }\n      friends {\n        items {\n          id\n          userID\n          friendUserID\n          isFollower\n          isActiveFriend\n          isPendingFriend\n        }\n        nextToken\n      }\n      userGroups {\n        items {\n          id\n          groupName\n          createdByUserID\n          postCategory\n          postGroup\n          privacy\n          policy\n          aboutGroup\n          pictureMetaID\n          status\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      pictureMeta {\n        items {\n          id\n          userID\n          postID\n          postCommentID\n          userGroupID\n          imagekey\n          videoKey\n          album\n          orderIndex\n          width\n          height\n          imageSize\n          type\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userEducation {\n        items {\n          id\n          userID\n          instID\n          insType\n          eduName\n          degree\n          fieldOfStudy\n          gpa\n          fromYear\n          fromMonth\n          toYear\n          toMonth\n          summary\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userProfessionalExperience {\n        items {\n          id\n          userID\n          instID\n          designation\n          fromYear\n          fromMonth\n          toYear\n          toMonth\n          isWorking\n          summery\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userHonorsAwards {\n        items {\n          id\n          userID\n          instID\n          year\n          month\n          summary\n          awardName\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userCertificate {\n        items {\n          id\n          userID\n          instID\n          certificateTitle\n          certificteNo\n          fromDdate\n          toDate\n          expireDate\n          certificateUrl\n          s3Key\n          visiblity\n          isExpire\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      blockByMe(ownerID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n        items {\n          id\n          ownerID\n        }\n      }\n      blockMe(userID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n        items {\n          id\n          userID\n        }\n      }\n      topCommentor {\n        items {\n          userID\n        }\n      }\n    }\n    nextToken\n  }\n}\n&quot;,&quot;variables&quot;:{&quot;filter&quot;:{&quot;and&quot;:[{&quot;firstName&quot;:{&quot;matchPhrasePrefix&quot;:&quot;Eric&quot;},&quot;lastName&quot;:{&quot;matchPhrasePrefix&quot;:&quot;Sha&quot;},&quot;isActive&quot;:{&quot;eq&quot;:true},&quot;id&quot;:{&quot;ne&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;}}]}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;mutation LikerSLAInsertLoginInfo($loginUserID: String!, $mode: String, $device: String) {\n  LikerSLAInsertLoginInfo(loginUserID: $loginUserID, mode: $mode, device: $device)\n}\n&quot;,&quot;variables&quot;:{&quot;loginUserID&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;,&quot;mode&quot;:&quot;login&quot;,&quot;device&quot;:&quot;web&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query searchUsers($filter: SearchableUserFilterInput, $limit: Int, $nextToken: String) {\n  searchUsers(filter: $filter, limit: $limit, nextToken: $nextToken) {\n    items {\n      id\n      owner\n      firstName\n      lastName\n      userName\n      profileLinkName\n      usertourChatboxOnOff\n      usertourFeedSearchBox\n      usertourFeedCategory\n      usertourPostLike\n      usertourPostCategory\n      usertourPostTextArea\n      usertourProgressBar\n      usertourCommentLike\n      usertourAudience\n      gender\n      isBlockByAdmin\n      totalGoldStars\n      totalSilverStars\n      country\n      state\n      isAccountVerified\n      isActive\n      defaultFeed\n      choiceMeta\n      postCategoryID\n      authProvider\n      whoCanAccessWall\n      whoCanAccessPhotos\n      whoCanSendMessage\n      whoCanSeeProfile\n      isChattBoxActive\n      displyHomestate\n      displyLiveIn\n      homestate\n      homestateCity\n      homestateCountry\n      intro\n      isFoundingMember\n      profilePhotoActive\n      totalGoldStars\n      totalSilverStars\n      userStoryAbout\n      userStoryAboutVisibilty\n      userStoryEarlyLife\n      userStoryEarlyLifeVisibilty\n      userStoryFamily\n      userStoryFamilyVisibilty\n      userStoryCareer\n      userStoryCareerVisibilty\n      userStoryBackground\n      userStoryBackgroundVisibilty\n      userStoryChildHood\n      userStoryChildHoodVisibilty\n      userStoryPersonalLife\n      userStoryPersonalVisibilty\n      websiteUrl\n      websiteUrlVisibilty\n      facebookUrl\n      facebookUrlVisibilty\n      twitterUrl\n      twitterUrlVisibilty\n      linkedInUrl\n      linkedInUrlVisibilty\n      instagramUrl\n      instagramUrlVisibilty\n      skypeUrl\n      skypeUrlVisibilty\n      pinterestUrl\n      pinterestUrlVisibilty\n      youtubeUrl\n      youtubeUrlVisibilty\n      forceSecurityCheckUp\n      emailNotification\n      pushNotification\n      forceTFA\n      headline\n      isExisting\n      isTFAActive\n      isVerified\n      createdAt\n      updatedAt\n      totalLikes\n      totalFollowers\n      totalStars\n      posts {\n        items {\n          id\n          userID\n          postCategoryID\n          groupId\n          visiblity\n          postContent\n          createdAt\n          updatedAt\n          isSharePost\n          sharePostMetaID\n          isWallPost\n          wallPostUserID\n          isGroupPost\n          userGroupID\n          postUsingDevice\n          linkpostURL\n          linkpostDescription\n          linkpostTitle\n          isPinPost\n          isSchedulepost\n          isBlocked\n          meamID\n        }\n        nextToken\n      }\n      friends {\n        items {\n          id\n          userID\n          friendUserID\n          isFollower\n          isActiveFriend\n          isPendingFriend\n        }\n        nextToken\n      }\n      userGroups {\n        items {\n          id\n          groupName\n          createdByUserID\n          postCategory\n          postGroup\n          privacy\n          policy\n          aboutGroup\n          pictureMetaID\n          status\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      pictureMeta {\n        items {\n          id\n          userID\n          postID\n          postCommentID\n          userGroupID\n          imagekey\n          videoKey\n          album\n          orderIndex\n          width\n          height\n          imageSize\n          type\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userEducation {\n        items {\n          id\n          userID\n          instID\n          insType\n          eduName\n          degree\n          fieldOfStudy\n          gpa\n          fromYear\n          fromMonth\n          toYear\n          toMonth\n          summary\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userProfessionalExperience {\n        items {\n          id\n          userID\n          instID\n          designation\n          fromYear\n          fromMonth\n          toYear\n          toMonth\n          isWorking\n          summery\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userHonorsAwards {\n        items {\n          id\n          userID\n          instID\n          year\n          month\n          summary\n          awardName\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userCertificate {\n        items {\n          id\n          userID\n          instID\n          certificateTitle\n          certificteNo\n          fromDdate\n          toDate\n          expireDate\n          certificateUrl\n          s3Key\n          visiblity\n          isExpire\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      blockByMe(ownerID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n        items {\n          id\n          ownerID\n        }\n      }\n      blockMe(userID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n        items {\n          id\n          userID\n        }\n      }\n      topCommentor {\n        items {\n          userID\n        }\n      }\n    }\n    nextToken\n  }\n}\n&quot;,&quot;variables&quot;:{&quot;filter&quot;:{&quot;and&quot;:[{&quot;firstName&quot;:{&quot;matchPhrasePrefix&quot;:&quot;Eric&quot;},&quot;lastName&quot;:{&quot;matchPhrasePrefix&quot;:&quot;Shar&quot;},&quot;isActive&quot;:{&quot;eq&quot;:true},&quot;id&quot;:{&quot;ne&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;}}]}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query searchUsers($filter: SearchableUserFilterInput, $limit: Int, $nextToken: String) {\n  searchUsers(filter: $filter, limit: $limit, nextToken: $nextToken) {\n    items {\n      id\n      owner\n      firstName\n      lastName\n      userName\n      profileLinkName\n      usertourChatboxOnOff\n      usertourFeedSearchBox\n      usertourFeedCategory\n      usertourPostLike\n      usertourPostCategory\n      usertourPostTextArea\n      usertourProgressBar\n      usertourCommentLike\n      usertourAudience\n      gender\n      isBlockByAdmin\n      totalGoldStars\n      totalSilverStars\n      country\n      state\n      isAccountVerified\n      isActive\n      defaultFeed\n      choiceMeta\n      postCategoryID\n      authProvider\n      whoCanAccessWall\n      whoCanAccessPhotos\n      whoCanSendMessage\n      whoCanSeeProfile\n      isChattBoxActive\n      displyHomestate\n      displyLiveIn\n      homestate\n      homestateCity\n      homestateCountry\n      intro\n      isFoundingMember\n      profilePhotoActive\n      totalGoldStars\n      totalSilverStars\n      userStoryAbout\n      userStoryAboutVisibilty\n      userStoryEarlyLife\n      userStoryEarlyLifeVisibilty\n      userStoryFamily\n      userStoryFamilyVisibilty\n      userStoryCareer\n      userStoryCareerVisibilty\n      userStoryBackground\n      userStoryBackgroundVisibilty\n      userStoryChildHood\n      userStoryChildHoodVisibilty\n      userStoryPersonalLife\n      userStoryPersonalVisibilty\n      websiteUrl\n      websiteUrlVisibilty\n      facebookUrl\n      facebookUrlVisibilty\n      twitterUrl\n      twitterUrlVisibilty\n      linkedInUrl\n      linkedInUrlVisibilty\n      instagramUrl\n      instagramUrlVisibilty\n      skypeUrl\n      skypeUrlVisibilty\n      pinterestUrl\n      pinterestUrlVisibilty\n      youtubeUrl\n      youtubeUrlVisibilty\n      forceSecurityCheckUp\n      emailNotification\n      pushNotification\n      forceTFA\n      headline\n      isExisting\n      isTFAActive\n      isVerified\n      createdAt\n      updatedAt\n      totalLikes\n      totalFollowers\n      totalStars\n      posts {\n        items {\n          id\n          userID\n          postCategoryID\n          groupId\n          visiblity\n          postContent\n          createdAt\n          updatedAt\n          isSharePost\n          sharePostMetaID\n          isWallPost\n          wallPostUserID\n          isGroupPost\n          userGroupID\n          postUsingDevice\n          linkpostURL\n          linkpostDescription\n          linkpostTitle\n          isPinPost\n          isSchedulepost\n          isBlocked\n          meamID\n        }\n        nextToken\n      }\n      friends {\n        items {\n          id\n          userID\n          friendUserID\n          isFollower\n          isActiveFriend\n          isPendingFriend\n        }\n        nextToken\n      }\n      userGroups {\n        items {\n          id\n          groupName\n          createdByUserID\n          postCategory\n          postGroup\n          privacy\n          policy\n          aboutGroup\n          pictureMetaID\n          status\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      pictureMeta {\n        items {\n          id\n          userID\n          postID\n          postCommentID\n          userGroupID\n          imagekey\n          videoKey\n          album\n          orderIndex\n          width\n          height\n          imageSize\n          type\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userEducation {\n        items {\n          id\n          userID\n          instID\n          insType\n          eduName\n          degree\n          fieldOfStudy\n          gpa\n          fromYear\n          fromMonth\n          toYear\n          toMonth\n          summary\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userProfessionalExperience {\n        items {\n          id\n          userID\n          instID\n          designation\n          fromYear\n          fromMonth\n          toYear\n          toMonth\n          isWorking\n          summery\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userHonorsAwards {\n        items {\n          id\n          userID\n          instID\n          year\n          month\n          summary\n          awardName\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userCertificate {\n        items {\n          id\n          userID\n          instID\n          certificateTitle\n          certificteNo\n          fromDdate\n          toDate\n          expireDate\n          certificateUrl\n          s3Key\n          visiblity\n          isExpire\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      blockByMe(ownerID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n        items {\n          id\n          ownerID\n        }\n      }\n      blockMe(userID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n        items {\n          id\n          userID\n        }\n      }\n      topCommentor {\n        items {\n          userID\n        }\n      }\n    }\n    nextToken\n  }\n}\n&quot;,&quot;variables&quot;:{&quot;filter&quot;:{&quot;and&quot;:[{&quot;firstName&quot;:{&quot;matchPhrasePrefix&quot;:&quot;Eric&quot;},&quot;lastName&quot;:{&quot;matchPhrasePrefix&quot;:&quot;Shar&quot;},&quot;isActive&quot;:{&quot;eq&quot;:true},&quot;id&quot;:{&quot;ne&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;}}]}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query searchUsers($filter: SearchableUserFilterInput, $limit: Int, $nextToken: String) {\n  searchUsers(filter: $filter, limit: $limit, nextToken: $nextToken) {\n    items {\n      id\n      owner\n      firstName\n      lastName\n      userName\n      profileLinkName\n      usertourChatboxOnOff\n      usertourFeedSearchBox\n      usertourFeedCategory\n      usertourPostLike\n      usertourPostCategory\n      usertourPostTextArea\n      usertourProgressBar\n      usertourCommentLike\n      usertourAudience\n      gender\n      isBlockByAdmin\n      totalGoldStars\n      totalSilverStars\n      country\n      state\n      isAccountVerified\n      isActive\n      defaultFeed\n      choiceMeta\n      postCategoryID\n      authProvider\n      whoCanAccessWall\n      whoCanAccessPhotos\n      whoCanSendMessage\n      whoCanSeeProfile\n      isChattBoxActive\n      displyHomestate\n      displyLiveIn\n      homestate\n      homestateCity\n      homestateCountry\n      intro\n      isFoundingMember\n      profilePhotoActive\n      totalGoldStars\n      totalSilverStars\n      userStoryAbout\n      userStoryAboutVisibilty\n      userStoryEarlyLife\n      userStoryEarlyLifeVisibilty\n      userStoryFamily\n      userStoryFamilyVisibilty\n      userStoryCareer\n      userStoryCareerVisibilty\n      userStoryBackground\n      userStoryBackgroundVisibilty\n      userStoryChildHood\n      userStoryChildHoodVisibilty\n      userStoryPersonalLife\n      userStoryPersonalVisibilty\n      websiteUrl\n      websiteUrlVisibilty\n      facebookUrl\n      facebookUrlVisibilty\n      twitterUrl\n      twitterUrlVisibilty\n      linkedInUrl\n      linkedInUrlVisibilty\n      instagramUrl\n      instagramUrlVisibilty\n      skypeUrl\n      skypeUrlVisibilty\n      pinterestUrl\n      pinterestUrlVisibilty\n      youtubeUrl\n      youtubeUrlVisibilty\n      forceSecurityCheckUp\n      emailNotification\n      pushNotification\n      forceTFA\n      headline\n      isExisting\n      isTFAActive\n      isVerified\n      createdAt\n      updatedAt\n      totalLikes\n      totalFollowers\n      totalStars\n      posts {\n        items {\n          id\n          userID\n          postCategoryID\n          groupId\n          visiblity\n          postContent\n          createdAt\n          updatedAt\n          isSharePost\n          sharePostMetaID\n          isWallPost\n          wallPostUserID\n          isGroupPost\n          userGroupID\n          postUsingDevice\n          linkpostURL\n          linkpostDescription\n          linkpostTitle\n          isPinPost\n          isSchedulepost\n          isBlocked\n          meamID\n        }\n        nextToken\n      }\n      friends {\n        items {\n          id\n          userID\n          friendUserID\n          isFollower\n          isActiveFriend\n          isPendingFriend\n        }\n        nextToken\n      }\n      userGroups {\n        items {\n          id\n          groupName\n          createdByUserID\n          postCategory\n          postGroup\n          privacy\n          policy\n          aboutGroup\n          pictureMetaID\n          status\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      pictureMeta {\n        items {\n          id\n          userID\n          postID\n          postCommentID\n          userGroupID\n          imagekey\n          videoKey\n          album\n          orderIndex\n          width\n          height\n          imageSize\n          type\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userEducation {\n        items {\n          id\n          userID\n          instID\n          insType\n          eduName\n          degree\n          fieldOfStudy\n          gpa\n          fromYear\n          fromMonth\n          toYear\n          toMonth\n          summary\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userProfessionalExperience {\n        items {\n          id\n          userID\n          instID\n          designation\n          fromYear\n          fromMonth\n          toYear\n          toMonth\n          isWorking\n          summery\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userHonorsAwards {\n        items {\n          id\n          userID\n          instID\n          year\n          month\n          summary\n          awardName\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userCertificate {\n        items {\n          id\n          userID\n          instID\n          certificateTitle\n          certificteNo\n          fromDdate\n          toDate\n          expireDate\n          certificateUrl\n          s3Key\n          visiblity\n          isExpire\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      blockByMe(ownerID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n        items {\n          id\n          ownerID\n        }\n      }\n      blockMe(userID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n        items {\n          id\n          userID\n        }\n      }\n      topCommentor {\n        items {\n          userID\n        }\n      }\n    }\n    nextToken\n  }\n}\n&quot;,&quot;variables&quot;:{&quot;filter&quot;:{&quot;and&quot;:[{&quot;firstName&quot;:{&quot;matchPhrasePrefix&quot;:&quot;Eric&quot;},&quot;lastName&quot;:{&quot;matchPhrasePrefix&quot;:&quot;Sharl&quot;},&quot;isActive&quot;:{&quot;eq&quot;:true},&quot;id&quot;:{&quot;ne&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;}}]}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query searchUsers($filter: SearchableUserFilterInput, $limit: Int, $nextToken: String) {\n  searchUsers(filter: $filter, limit: $limit, nextToken: $nextToken) {\n    items {\n      id\n      owner\n      firstName\n      lastName\n      userName\n      profileLinkName\n      usertourChatboxOnOff\n      usertourFeedSearchBox\n      usertourFeedCategory\n      usertourPostLike\n      usertourPostCategory\n      usertourPostTextArea\n      usertourProgressBar\n      usertourCommentLike\n      usertourAudience\n      gender\n      isBlockByAdmin\n      totalGoldStars\n      totalSilverStars\n      country\n      state\n      isAccountVerified\n      isActive\n      defaultFeed\n      choiceMeta\n      postCategoryID\n      authProvider\n      whoCanAccessWall\n      whoCanAccessPhotos\n      whoCanSendMessage\n      whoCanSeeProfile\n      isChattBoxActive\n      displyHomestate\n      displyLiveIn\n      homestate\n      homestateCity\n      homestateCountry\n      intro\n      isFoundingMember\n      profilePhotoActive\n      totalGoldStars\n      totalSilverStars\n      userStoryAbout\n      userStoryAboutVisibilty\n      userStoryEarlyLife\n      userStoryEarlyLifeVisibilty\n      userStoryFamily\n      userStoryFamilyVisibilty\n      userStoryCareer\n      userStoryCareerVisibilty\n      userStoryBackground\n      userStoryBackgroundVisibilty\n      userStoryChildHood\n      userStoryChildHoodVisibilty\n      userStoryPersonalLife\n      userStoryPersonalVisibilty\n      websiteUrl\n      websiteUrlVisibilty\n      facebookUrl\n      facebookUrlVisibilty\n      twitterUrl\n      twitterUrlVisibilty\n      linkedInUrl\n      linkedInUrlVisibilty\n      instagramUrl\n      instagramUrlVisibilty\n      skypeUrl\n      skypeUrlVisibilty\n      pinterestUrl\n      pinterestUrlVisibilty\n      youtubeUrl\n      youtubeUrlVisibilty\n      forceSecurityCheckUp\n      emailNotification\n      pushNotification\n      forceTFA\n      headline\n      isExisting\n      isTFAActive\n      isVerified\n      createdAt\n      updatedAt\n      totalLikes\n      totalFollowers\n      totalStars\n      posts {\n        items {\n          id\n          userID\n          postCategoryID\n          groupId\n          visiblity\n          postContent\n          createdAt\n          updatedAt\n          isSharePost\n          sharePostMetaID\n          isWallPost\n          wallPostUserID\n          isGroupPost\n          userGroupID\n          postUsingDevice\n          linkpostURL\n          linkpostDescription\n          linkpostTitle\n          isPinPost\n          isSchedulepost\n          isBlocked\n          meamID\n        }\n        nextToken\n      }\n      friends {\n        items {\n          id\n          userID\n          friendUserID\n          isFollower\n          isActiveFriend\n          isPendingFriend\n        }\n        nextToken\n      }\n      userGroups {\n        items {\n          id\n          groupName\n          createdByUserID\n          postCategory\n          postGroup\n          privacy\n          policy\n          aboutGroup\n          pictureMetaID\n          status\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      pictureMeta {\n        items {\n          id\n          userID\n          postID\n          postCommentID\n          userGroupID\n          imagekey\n          videoKey\n          album\n          orderIndex\n          width\n          height\n          imageSize\n          type\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userEducation {\n        items {\n          id\n          userID\n          instID\n          insType\n          eduName\n          degree\n          fieldOfStudy\n          gpa\n          fromYear\n          fromMonth\n          toYear\n          toMonth\n          summary\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userProfessionalExperience {\n        items {\n          id\n          userID\n          instID\n          designation\n          fromYear\n          fromMonth\n          toYear\n          toMonth\n          isWorking\n          summery\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userHonorsAwards {\n        items {\n          id\n          userID\n          instID\n          year\n          month\n          summary\n          awardName\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userCertificate {\n        items {\n          id\n          userID\n          instID\n          certificateTitle\n          certificteNo\n          fromDdate\n          toDate\n          expireDate\n          certificateUrl\n          s3Key\n          visiblity\n          isExpire\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      blockByMe(ownerID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n        items {\n          id\n          ownerID\n        }\n      }\n      blockMe(userID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n        items {\n          id\n          userID\n        }\n      }\n      topCommentor {\n        items {\n          userID\n        }\n      }\n    }\n    nextToken\n  }\n}\n&quot;,&quot;variables&quot;:{&quot;filter&quot;:{&quot;and&quot;:[{&quot;firstName&quot;:{&quot;matchPhrasePrefix&quot;:&quot;Eric&quot;},&quot;lastName&quot;:{&quot;matchPhrasePrefix&quot;:&quot;Sharl&quot;},&quot;isActive&quot;:{&quot;eq&quot;:true},&quot;id&quot;:{&quot;ne&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;}}]}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query searchUsers($filter: SearchableUserFilterInput, $limit: Int, $nextToken: String) {\n  searchUsers(filter: $filter, limit: $limit, nextToken: $nextToken) {\n    items {\n      id\n      owner\n      firstName\n      lastName\n      userName\n      profileLinkName\n      usertourChatboxOnOff\n      usertourFeedSearchBox\n      usertourFeedCategory\n      usertourPostLike\n      usertourPostCategory\n      usertourPostTextArea\n      usertourProgressBar\n      usertourCommentLike\n      usertourAudience\n      gender\n      isBlockByAdmin\n      totalGoldStars\n      totalSilverStars\n      country\n      state\n      isAccountVerified\n      isActive\n      defaultFeed\n      choiceMeta\n      postCategoryID\n      authProvider\n      whoCanAccessWall\n      whoCanAccessPhotos\n      whoCanSendMessage\n      whoCanSeeProfile\n      isChattBoxActive\n      displyHomestate\n      displyLiveIn\n      homestate\n      homestateCity\n      homestateCountry\n      intro\n      isFoundingMember\n      profilePhotoActive\n      totalGoldStars\n      totalSilverStars\n      userStoryAbout\n      userStoryAboutVisibilty\n      userStoryEarlyLife\n      userStoryEarlyLifeVisibilty\n      userStoryFamily\n      userStoryFamilyVisibilty\n      userStoryCareer\n      userStoryCareerVisibilty\n      userStoryBackground\n      userStoryBackgroundVisibilty\n      userStoryChildHood\n      userStoryChildHoodVisibilty\n      userStoryPersonalLife\n      userStoryPersonalVisibilty\n      websiteUrl\n      websiteUrlVisibilty\n      facebookUrl\n      facebookUrlVisibilty\n      twitterUrl\n      twitterUrlVisibilty\n      linkedInUrl\n      linkedInUrlVisibilty\n      instagramUrl\n      instagramUrlVisibilty\n      skypeUrl\n      skypeUrlVisibilty\n      pinterestUrl\n      pinterestUrlVisibilty\n      youtubeUrl\n      youtubeUrlVisibilty\n      forceSecurityCheckUp\n      emailNotification\n      pushNotification\n      forceTFA\n      headline\n      isExisting\n      isTFAActive\n      isVerified\n      createdAt\n      updatedAt\n      totalLikes\n      totalFollowers\n      totalStars\n      posts {\n        items {\n          id\n          userID\n          postCategoryID\n          groupId\n          visiblity\n          postContent\n          createdAt\n          updatedAt\n          isSharePost\n          sharePostMetaID\n          isWallPost\n          wallPostUserID\n          isGroupPost\n          userGroupID\n          postUsingDevice\n          linkpostURL\n          linkpostDescription\n          linkpostTitle\n          isPinPost\n          isSchedulepost\n          isBlocked\n          meamID\n        }\n        nextToken\n      }\n      friends {\n        items {\n          id\n          userID\n          friendUserID\n          isFollower\n          isActiveFriend\n          isPendingFriend\n        }\n        nextToken\n      }\n      userGroups {\n        items {\n          id\n          groupName\n          createdByUserID\n          postCategory\n          postGroup\n          privacy\n          policy\n          aboutGroup\n          pictureMetaID\n          status\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      pictureMeta {\n        items {\n          id\n          userID\n          postID\n          postCommentID\n          userGroupID\n          imagekey\n          videoKey\n          album\n          orderIndex\n          width\n          height\n          imageSize\n          type\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userEducation {\n        items {\n          id\n          userID\n          instID\n          insType\n          eduName\n          degree\n          fieldOfStudy\n          gpa\n          fromYear\n          fromMonth\n          toYear\n          toMonth\n          summary\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userProfessionalExperience {\n        items {\n          id\n          userID\n          instID\n          designation\n          fromYear\n          fromMonth\n          toYear\n          toMonth\n          isWorking\n          summery\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userHonorsAwards {\n        items {\n          id\n          userID\n          instID\n          year\n          month\n          summary\n          awardName\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userCertificate {\n        items {\n          id\n          userID\n          instID\n          certificateTitle\n          certificteNo\n          fromDdate\n          toDate\n          expireDate\n          certificateUrl\n          s3Key\n          visiblity\n          isExpire\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      blockByMe(ownerID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n        items {\n          id\n          ownerID\n        }\n      }\n      blockMe(userID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n        items {\n          id\n          userID\n        }\n      }\n      topCommentor {\n        items {\n          userID\n        }\n      }\n    }\n    nextToken\n  }\n}\n&quot;,&quot;variables&quot;:{&quot;filter&quot;:{&quot;and&quot;:[{&quot;firstName&quot;:{&quot;matchPhrasePrefix&quot;:&quot;Eric&quot;},&quot;lastName&quot;:{&quot;matchPhrasePrefix&quot;:&quot;Sharly&quot;},&quot;isActive&quot;:{&quot;eq&quot;:true},&quot;id&quot;:{&quot;ne&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;}}]}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query searchUsers($filter: SearchableUserFilterInput, $limit: Int, $nextToken: String) {\n  searchUsers(filter: $filter, limit: $limit, nextToken: $nextToken) {\n    items {\n      id\n      owner\n      firstName\n      lastName\n      userName\n      profileLinkName\n      usertourChatboxOnOff\n      usertourFeedSearchBox\n      usertourFeedCategory\n      usertourPostLike\n      usertourPostCategory\n      usertourPostTextArea\n      usertourProgressBar\n      usertourCommentLike\n      usertourAudience\n      gender\n      isBlockByAdmin\n      totalGoldStars\n      totalSilverStars\n      country\n      state\n      isAccountVerified\n      isActive\n      defaultFeed\n      choiceMeta\n      postCategoryID\n      authProvider\n      whoCanAccessWall\n      whoCanAccessPhotos\n      whoCanSendMessage\n      whoCanSeeProfile\n      isChattBoxActive\n      displyHomestate\n      displyLiveIn\n      homestate\n      homestateCity\n      homestateCountry\n      intro\n      isFoundingMember\n      profilePhotoActive\n      totalGoldStars\n      totalSilverStars\n      userStoryAbout\n      userStoryAboutVisibilty\n      userStoryEarlyLife\n      userStoryEarlyLifeVisibilty\n      userStoryFamily\n      userStoryFamilyVisibilty\n      userStoryCareer\n      userStoryCareerVisibilty\n      userStoryBackground\n      userStoryBackgroundVisibilty\n      userStoryChildHood\n      userStoryChildHoodVisibilty\n      userStoryPersonalLife\n      userStoryPersonalVisibilty\n      websiteUrl\n      websiteUrlVisibilty\n      facebookUrl\n      facebookUrlVisibilty\n      twitterUrl\n      twitterUrlVisibilty\n      linkedInUrl\n      linkedInUrlVisibilty\n      instagramUrl\n      instagramUrlVisibilty\n      skypeUrl\n      skypeUrlVisibilty\n      pinterestUrl\n      pinterestUrlVisibilty\n      youtubeUrl\n      youtubeUrlVisibilty\n      forceSecurityCheckUp\n      emailNotification\n      pushNotification\n      forceTFA\n      headline\n      isExisting\n      isTFAActive\n      isVerified\n      createdAt\n      updatedAt\n      totalLikes\n      totalFollowers\n      totalStars\n      posts {\n        items {\n          id\n          userID\n          postCategoryID\n          groupId\n          visiblity\n          postContent\n          createdAt\n          updatedAt\n          isSharePost\n          sharePostMetaID\n          isWallPost\n          wallPostUserID\n          isGroupPost\n          userGroupID\n          postUsingDevice\n          linkpostURL\n          linkpostDescription\n          linkpostTitle\n          isPinPost\n          isSchedulepost\n          isBlocked\n          meamID\n        }\n        nextToken\n      }\n      friends {\n        items {\n          id\n          userID\n          friendUserID\n          isFollower\n          isActiveFriend\n          isPendingFriend\n        }\n        nextToken\n      }\n      userGroups {\n        items {\n          id\n          groupName\n          createdByUserID\n          postCategory\n          postGroup\n          privacy\n          policy\n          aboutGroup\n          pictureMetaID\n          status\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      pictureMeta {\n        items {\n          id\n          userID\n          postID\n          postCommentID\n          userGroupID\n          imagekey\n          videoKey\n          album\n          orderIndex\n          width\n          height\n          imageSize\n          type\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userEducation {\n        items {\n          id\n          userID\n          instID\n          insType\n          eduName\n          degree\n          fieldOfStudy\n          gpa\n          fromYear\n          fromMonth\n          toYear\n          toMonth\n          summary\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userProfessionalExperience {\n        items {\n          id\n          userID\n          instID\n          designation\n          fromYear\n          fromMonth\n          toYear\n          toMonth\n          isWorking\n          summery\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userHonorsAwards {\n        items {\n          id\n          userID\n          instID\n          year\n          month\n          summary\n          awardName\n          visiblity\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      userCertificate {\n        items {\n          id\n          userID\n          instID\n          certificateTitle\n          certificteNo\n          fromDdate\n          toDate\n          expireDate\n          certificateUrl\n          s3Key\n          visiblity\n          isExpire\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      blockByMe(ownerID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n        items {\n          id\n          ownerID\n        }\n      }\n      blockMe(userID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n        items {\n          id\n          userID\n        }\n      }\n      topCommentor {\n        items {\n          userID\n        }\n      }\n    }\n    nextToken\n  }\n}\n&quot;,&quot;variables&quot;:{&quot;filter&quot;:{&quot;and&quot;:[{&quot;firstName&quot;:{&quot;matchPhrasePrefix&quot;:&quot;Eric&quot;},&quot;lastName&quot;:{&quot;matchPhrasePrefix&quot;:&quot;Sharly&quot;},&quot;isActive&quot;:{&quot;eq&quot;:true},&quot;id&quot;:{&quot;ne&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;}}]}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;mutation CreateUserSearchHistories($input: CreateUserSearchHistoriesInput!, $condition: ModelUserSearchHistoriesConditionInput) {\n  createUserSearchHistories(input: $input, condition: $condition) {\n    id\n    userID\n    searchedIteam\n    searchedUserID\n    isUser\n    searchedIteamOrder\n    createdAt\n    updatedAt\n    searcheduser {\n      nextToken\n    }\n    user {\n      nextToken\n    }\n  }\n}\n&quot;,&quot;variables&quot;:{&quot;input&quot;:{&quot;isUser&quot;:false,&quot;searchedUserID&quot;:null,&quot;searchedIteam&quot;:&quot;Eric Sharly&quot;,&quot;searchedIteamOrder&quot;:null,&quot;userID&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://q7y8ibn334.execute-api.us-east-1.amazonaws.com/prodlive/getfilter" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;queryString&quot;:{&quot;userID&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;,&quot;filter_type&quot;:7}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">prodlive/getfilter</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">AWS4-HMAC-SHA256 Credential=ASIAY23MY4J6LURUZLIA/20220823/us-east-1/execute-api/aws4_request, SignedHeaders=content-type;host;x-amz-date;x-amz-security-token, Signature=644c8063dce6cc5a6fe8f1107a7bbb3de12693bd2fde44b66f7533d5eb42651b</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Amz-Security-Token" elementType="Header">
                  <stringProp name="Header.name">X-Amz-Security-Token</stringProp>
                  <stringProp name="Header.value">IQoJb3JpZ2luX2VjEBAaCXVzLWVhc3QtMSJGMEQCIHa+L91dXZpQQ+00qokgTgvaPlrat5xnX/3dg1jFOeBoAiAHkHvJ1sYiE11HxHVo2HbtIscnmNpX3FdM+pKmqjvmACrNBAiJ//////////8BEAMaDDYwNzQyOTEyNDczMiIMDJaY1Tbcnr3KAnP8KqEEwH3UsaVu5BQZEOkhqNIen5rsxaLaNq08SaakAoAOJxWQ+46sJwGzZDQUPchRYGcw55Dgv1g6Mr+2x/PIlx9JCrrcLruFP9rQbcsPubm9aQZeyWL6m8bMlU4WV3BIAiJ2d4pDeM7pNB2UQ3Vh8xbdzk01IiNpfg3HT7OT1PF/NmIwOrDF1whGJHVWFnvcHGUlAGNK8brwCK9BGhRKxlQeP9s/FgdX+mQxuUGEmAzocjTBBvM50hcWXpCneMK1SgnvbUzY3hXtFhmDg++BtsxukhTS9r6s94JaZWu8Of+JGg8/oTYPyLtYZFPbmxRJJXB3Q9jrAcldZX88aH1Ji5EXcqWKnNn4Q+v91JnbGZL9UmYJpora7TYDKvsQEKfXeYo2cEnzwCGDVUXWRKlpR1kx/BiwPUbMXTXucRcEX9Y1KAr19P67DlcxTMOA5QNKzDsgeyFgCsCZe/nT2Ea1kP5MdvD8mAPGaxbXeIoIBs/hsxsVDI5Kr1RUA4CpS6FlkB50kLzw5nMjDH7eRyK8rW3yndHxS8Xgx0UBsbNZ52vUhMwuf3X0+GinfST59yDQz51xutP/YaOyW3uSeDgKJQ4v8SCkMImEKZyYZCLHX/DGlO/sE3xMYViZEUpqAGdCUjqUr0hI4BnKOt3EZ5dGWTMb9RNrAN3JoJNY7KdHUtTCkMCG5QHsRgFa+5x3egSRAsmxpuDr6KxC68KtHOh5VMF0q/MwkYmSmAY6hgLkQhbjzY1rQ8Yic64xfSS2+rT59O9HaL+9YFajdY83APNUH7w2DK2PxlekNBtNOTJdAsBLtmKgko4uMj64jHIC11JWFA9FFsBYr5p4NGshsruRPlrx+Y63qG+z/N+cybV14F0E4yZD7soXdFZyw/FAepKTdvH9svmXlB4FEVhZmacM8gkzRyCWkU5WpHrU9CWIAIZt7G6T9Zs5ACht8pzqGuy9pzKqN8Aqp7oZGBKe+IH73qecXOVcuwSGSyrReC+AajiQ8J7RBMs+IXfajvc73KUB16DXMpOfBjpHzewu/2WNEHUjC8lzKPgC03TfU5N/KC827/G0G/BUZmnQ/FlnBX242HeS</stringProp>
                </elementProp>
                <elementProp name="x-amz-date" elementType="Header">
                  <stringProp name="Header.name">x-amz-date</stringProp>
                  <stringProp name="Header.value">20220823T074421Z</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://q7y8ibn334.execute-api.us-east-1.amazonaws.com/prodlive/getfilter" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;queryString&quot;:{&quot;userID&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;,&quot;filter_type&quot;:null}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">prodlive/getfilter</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">AWS4-HMAC-SHA256 Credential=ASIAY23MY4J6LURUZLIA/20220823/us-east-1/execute-api/aws4_request, SignedHeaders=content-type;host;x-amz-date;x-amz-security-token, Signature=433b01ce4e4309bb743dfa3ef39379edd61acc26e7749db510e11293be6e93f2</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Amz-Security-Token" elementType="Header">
                  <stringProp name="Header.name">X-Amz-Security-Token</stringProp>
                  <stringProp name="Header.value">IQoJb3JpZ2luX2VjEBAaCXVzLWVhc3QtMSJGMEQCIHa+L91dXZpQQ+00qokgTgvaPlrat5xnX/3dg1jFOeBoAiAHkHvJ1sYiE11HxHVo2HbtIscnmNpX3FdM+pKmqjvmACrNBAiJ//////////8BEAMaDDYwNzQyOTEyNDczMiIMDJaY1Tbcnr3KAnP8KqEEwH3UsaVu5BQZEOkhqNIen5rsxaLaNq08SaakAoAOJxWQ+46sJwGzZDQUPchRYGcw55Dgv1g6Mr+2x/PIlx9JCrrcLruFP9rQbcsPubm9aQZeyWL6m8bMlU4WV3BIAiJ2d4pDeM7pNB2UQ3Vh8xbdzk01IiNpfg3HT7OT1PF/NmIwOrDF1whGJHVWFnvcHGUlAGNK8brwCK9BGhRKxlQeP9s/FgdX+mQxuUGEmAzocjTBBvM50hcWXpCneMK1SgnvbUzY3hXtFhmDg++BtsxukhTS9r6s94JaZWu8Of+JGg8/oTYPyLtYZFPbmxRJJXB3Q9jrAcldZX88aH1Ji5EXcqWKnNn4Q+v91JnbGZL9UmYJpora7TYDKvsQEKfXeYo2cEnzwCGDVUXWRKlpR1kx/BiwPUbMXTXucRcEX9Y1KAr19P67DlcxTMOA5QNKzDsgeyFgCsCZe/nT2Ea1kP5MdvD8mAPGaxbXeIoIBs/hsxsVDI5Kr1RUA4CpS6FlkB50kLzw5nMjDH7eRyK8rW3yndHxS8Xgx0UBsbNZ52vUhMwuf3X0+GinfST59yDQz51xutP/YaOyW3uSeDgKJQ4v8SCkMImEKZyYZCLHX/DGlO/sE3xMYViZEUpqAGdCUjqUr0hI4BnKOt3EZ5dGWTMb9RNrAN3JoJNY7KdHUtTCkMCG5QHsRgFa+5x3egSRAsmxpuDr6KxC68KtHOh5VMF0q/MwkYmSmAY6hgLkQhbjzY1rQ8Yic64xfSS2+rT59O9HaL+9YFajdY83APNUH7w2DK2PxlekNBtNOTJdAsBLtmKgko4uMj64jHIC11JWFA9FFsBYr5p4NGshsruRPlrx+Y63qG+z/N+cybV14F0E4yZD7soXdFZyw/FAepKTdvH9svmXlB4FEVhZmacM8gkzRyCWkU5WpHrU9CWIAIZt7G6T9Zs5ACht8pzqGuy9pzKqN8Aqp7oZGBKe+IH73qecXOVcuwSGSyrReC+AajiQ8J7RBMs+IXfajvc73KUB16DXMpOfBjpHzewu/2WNEHUjC8lzKPgC03TfU5N/KC827/G0G/BUZmnQ/FlnBX242HeS</stringProp>
                </elementProp>
                <elementProp name="x-amz-date" elementType="Header">
                  <stringProp name="Header.name">x-amz-date</stringProp>
                  <stringProp name="Header.value">20220823T074421Z</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  likerSlaGetStarContributorToFollow(loginUserID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;)\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query ListGroups($filter: ModelGroupFilterInput, $limit: Int, $nextToken: String) {\n  listGroups(filter: $filter, limit: $limit, nextToken: $nextToken) {\n    items {\n      id\n      preID\n      groupName\n      postCategories {\n        items {\n          id\n          name\n          groupID\n        }\n      }\n      createdAt\n      updatedAt\n    }\n    nextToken\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://q7y8ibn334.execute-api.us-east-1.amazonaws.com/prodlive/getfilter" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;queryString&quot;:{&quot;userID&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;,&quot;filter_type&quot;:null}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">prodlive/getfilter</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">AWS4-HMAC-SHA256 Credential=ASIAY23MY4J6LURUZLIA/20220823/us-east-1/execute-api/aws4_request, SignedHeaders=content-type;host;x-amz-date;x-amz-security-token, Signature=e4b685e02d07c2bfd165733c76c94576e3776d5650d48922f937f7fe3f368ba7</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Amz-Security-Token" elementType="Header">
                  <stringProp name="Header.name">X-Amz-Security-Token</stringProp>
                  <stringProp name="Header.value">IQoJb3JpZ2luX2VjEBAaCXVzLWVhc3QtMSJGMEQCIHa+L91dXZpQQ+00qokgTgvaPlrat5xnX/3dg1jFOeBoAiAHkHvJ1sYiE11HxHVo2HbtIscnmNpX3FdM+pKmqjvmACrNBAiJ//////////8BEAMaDDYwNzQyOTEyNDczMiIMDJaY1Tbcnr3KAnP8KqEEwH3UsaVu5BQZEOkhqNIen5rsxaLaNq08SaakAoAOJxWQ+46sJwGzZDQUPchRYGcw55Dgv1g6Mr+2x/PIlx9JCrrcLruFP9rQbcsPubm9aQZeyWL6m8bMlU4WV3BIAiJ2d4pDeM7pNB2UQ3Vh8xbdzk01IiNpfg3HT7OT1PF/NmIwOrDF1whGJHVWFnvcHGUlAGNK8brwCK9BGhRKxlQeP9s/FgdX+mQxuUGEmAzocjTBBvM50hcWXpCneMK1SgnvbUzY3hXtFhmDg++BtsxukhTS9r6s94JaZWu8Of+JGg8/oTYPyLtYZFPbmxRJJXB3Q9jrAcldZX88aH1Ji5EXcqWKnNn4Q+v91JnbGZL9UmYJpora7TYDKvsQEKfXeYo2cEnzwCGDVUXWRKlpR1kx/BiwPUbMXTXucRcEX9Y1KAr19P67DlcxTMOA5QNKzDsgeyFgCsCZe/nT2Ea1kP5MdvD8mAPGaxbXeIoIBs/hsxsVDI5Kr1RUA4CpS6FlkB50kLzw5nMjDH7eRyK8rW3yndHxS8Xgx0UBsbNZ52vUhMwuf3X0+GinfST59yDQz51xutP/YaOyW3uSeDgKJQ4v8SCkMImEKZyYZCLHX/DGlO/sE3xMYViZEUpqAGdCUjqUr0hI4BnKOt3EZ5dGWTMb9RNrAN3JoJNY7KdHUtTCkMCG5QHsRgFa+5x3egSRAsmxpuDr6KxC68KtHOh5VMF0q/MwkYmSmAY6hgLkQhbjzY1rQ8Yic64xfSS2+rT59O9HaL+9YFajdY83APNUH7w2DK2PxlekNBtNOTJdAsBLtmKgko4uMj64jHIC11JWFA9FFsBYr5p4NGshsruRPlrx+Y63qG+z/N+cybV14F0E4yZD7soXdFZyw/FAepKTdvH9svmXlB4FEVhZmacM8gkzRyCWkU5WpHrU9CWIAIZt7G6T9Zs5ACht8pzqGuy9pzKqN8Aqp7oZGBKe+IH73qecXOVcuwSGSyrReC+AajiQ8J7RBMs+IXfajvc73KUB16DXMpOfBjpHzewu/2WNEHUjC8lzKPgC03TfU5N/KC827/G0G/BUZmnQ/FlnBX242HeS</stringProp>
                </elementProp>
                <elementProp name="x-amz-date" elementType="Header">
                  <stringProp name="Header.name">x-amz-date</stringProp>
                  <stringProp name="Header.value">20220823T074422Z</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  likerslaGetFriendFeed(is_public: \&quot;false\&quot;, limit: \&quot;5\&quot;, offset: \&quot;0\&quot;, userID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, filter: \&quot;1\&quot;, feed: \&quot;friends\&quot;, cat_id: \&quot;\&quot;)\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">AWS4-HMAC-SHA256 Credential=ASIAY23MY4J6LURUZLIA/20220823/us-east-1/appsync/aws4_request, SignedHeaders=content-type;host;x-amz-date;x-amz-security-token;x-amz-user-agent, Signature=47c01f97bbede2816ada5e03de83e2f4bbb6735b524e7bc8eab9cabfc9ef756f</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Amz-Security-Token" elementType="Header">
                  <stringProp name="Header.name">X-Amz-Security-Token</stringProp>
                  <stringProp name="Header.value">IQoJb3JpZ2luX2VjEBAaCXVzLWVhc3QtMSJGMEQCIHa+L91dXZpQQ+00qokgTgvaPlrat5xnX/3dg1jFOeBoAiAHkHvJ1sYiE11HxHVo2HbtIscnmNpX3FdM+pKmqjvmACrNBAiJ//////////8BEAMaDDYwNzQyOTEyNDczMiIMDJaY1Tbcnr3KAnP8KqEEwH3UsaVu5BQZEOkhqNIen5rsxaLaNq08SaakAoAOJxWQ+46sJwGzZDQUPchRYGcw55Dgv1g6Mr+2x/PIlx9JCrrcLruFP9rQbcsPubm9aQZeyWL6m8bMlU4WV3BIAiJ2d4pDeM7pNB2UQ3Vh8xbdzk01IiNpfg3HT7OT1PF/NmIwOrDF1whGJHVWFnvcHGUlAGNK8brwCK9BGhRKxlQeP9s/FgdX+mQxuUGEmAzocjTBBvM50hcWXpCneMK1SgnvbUzY3hXtFhmDg++BtsxukhTS9r6s94JaZWu8Of+JGg8/oTYPyLtYZFPbmxRJJXB3Q9jrAcldZX88aH1Ji5EXcqWKnNn4Q+v91JnbGZL9UmYJpora7TYDKvsQEKfXeYo2cEnzwCGDVUXWRKlpR1kx/BiwPUbMXTXucRcEX9Y1KAr19P67DlcxTMOA5QNKzDsgeyFgCsCZe/nT2Ea1kP5MdvD8mAPGaxbXeIoIBs/hsxsVDI5Kr1RUA4CpS6FlkB50kLzw5nMjDH7eRyK8rW3yndHxS8Xgx0UBsbNZ52vUhMwuf3X0+GinfST59yDQz51xutP/YaOyW3uSeDgKJQ4v8SCkMImEKZyYZCLHX/DGlO/sE3xMYViZEUpqAGdCUjqUr0hI4BnKOt3EZ5dGWTMb9RNrAN3JoJNY7KdHUtTCkMCG5QHsRgFa+5x3egSRAsmxpuDr6KxC68KtHOh5VMF0q/MwkYmSmAY6hgLkQhbjzY1rQ8Yic64xfSS2+rT59O9HaL+9YFajdY83APNUH7w2DK2PxlekNBtNOTJdAsBLtmKgko4uMj64jHIC11JWFA9FFsBYr5p4NGshsruRPlrx+Y63qG+z/N+cybV14F0E4yZD7soXdFZyw/FAepKTdvH9svmXlB4FEVhZmacM8gkzRyCWkU5WpHrU9CWIAIZt7G6T9Zs5ACht8pzqGuy9pzKqN8Aqp7oZGBKe+IH73qecXOVcuwSGSyrReC+AajiQ8J7RBMs+IXfajvc73KUB16DXMpOfBjpHzewu/2WNEHUjC8lzKPgC03TfU5N/KC827/G0G/BUZmnQ/FlnBX242HeS</stringProp>
                </elementProp>
                <elementProp name="x-amz-date" elementType="Header">
                  <stringProp name="Header.name">x-amz-date</stringProp>
                  <stringProp name="Header.value">20220823T074423Z</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://q7y8ibn334.execute-api.us-east-1.amazonaws.com/prodlive/getfilter" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;queryString&quot;:{&quot;userID&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;,&quot;filter_type&quot;:null}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">prodlive/getfilter</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">AWS4-HMAC-SHA256 Credential=ASIAY23MY4J6LURUZLIA/20220823/us-east-1/execute-api/aws4_request, SignedHeaders=content-type;host;x-amz-date;x-amz-security-token, Signature=f450d773893adc7c34248378a3a263f999c300781d78e9bde2b951693afd1764</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Amz-Security-Token" elementType="Header">
                  <stringProp name="Header.name">X-Amz-Security-Token</stringProp>
                  <stringProp name="Header.value">IQoJb3JpZ2luX2VjEBAaCXVzLWVhc3QtMSJGMEQCIHa+L91dXZpQQ+00qokgTgvaPlrat5xnX/3dg1jFOeBoAiAHkHvJ1sYiE11HxHVo2HbtIscnmNpX3FdM+pKmqjvmACrNBAiJ//////////8BEAMaDDYwNzQyOTEyNDczMiIMDJaY1Tbcnr3KAnP8KqEEwH3UsaVu5BQZEOkhqNIen5rsxaLaNq08SaakAoAOJxWQ+46sJwGzZDQUPchRYGcw55Dgv1g6Mr+2x/PIlx9JCrrcLruFP9rQbcsPubm9aQZeyWL6m8bMlU4WV3BIAiJ2d4pDeM7pNB2UQ3Vh8xbdzk01IiNpfg3HT7OT1PF/NmIwOrDF1whGJHVWFnvcHGUlAGNK8brwCK9BGhRKxlQeP9s/FgdX+mQxuUGEmAzocjTBBvM50hcWXpCneMK1SgnvbUzY3hXtFhmDg++BtsxukhTS9r6s94JaZWu8Of+JGg8/oTYPyLtYZFPbmxRJJXB3Q9jrAcldZX88aH1Ji5EXcqWKnNn4Q+v91JnbGZL9UmYJpora7TYDKvsQEKfXeYo2cEnzwCGDVUXWRKlpR1kx/BiwPUbMXTXucRcEX9Y1KAr19P67DlcxTMOA5QNKzDsgeyFgCsCZe/nT2Ea1kP5MdvD8mAPGaxbXeIoIBs/hsxsVDI5Kr1RUA4CpS6FlkB50kLzw5nMjDH7eRyK8rW3yndHxS8Xgx0UBsbNZ52vUhMwuf3X0+GinfST59yDQz51xutP/YaOyW3uSeDgKJQ4v8SCkMImEKZyYZCLHX/DGlO/sE3xMYViZEUpqAGdCUjqUr0hI4BnKOt3EZ5dGWTMb9RNrAN3JoJNY7KdHUtTCkMCG5QHsRgFa+5x3egSRAsmxpuDr6KxC68KtHOh5VMF0q/MwkYmSmAY6hgLkQhbjzY1rQ8Yic64xfSS2+rT59O9HaL+9YFajdY83APNUH7w2DK2PxlekNBtNOTJdAsBLtmKgko4uMj64jHIC11JWFA9FFsBYr5p4NGshsruRPlrx+Y63qG+z/N+cybV14F0E4yZD7soXdFZyw/FAepKTdvH9svmXlB4FEVhZmacM8gkzRyCWkU5WpHrU9CWIAIZt7G6T9Zs5ACht8pzqGuy9pzKqN8Aqp7oZGBKe+IH73qecXOVcuwSGSyrReC+AajiQ8J7RBMs+IXfajvc73KUB16DXMpOfBjpHzewu/2WNEHUjC8lzKPgC03TfU5N/KC827/G0G/BUZmnQ/FlnBX242HeS</stringProp>
                </elementProp>
                <elementProp name="x-amz-date" elementType="Header">
                  <stringProp name="Header.name">x-amz-date</stringProp>
                  <stringProp name="Header.value">20220823T074425Z</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://q7y8ibn334.execute-api.us-east-1.amazonaws.com/prodlive/getfilter" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;queryString&quot;:{&quot;userID&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;,&quot;filter_type&quot;:null}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">prodlive/getfilter</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">AWS4-HMAC-SHA256 Credential=ASIAY23MY4J6LURUZLIA/20220823/us-east-1/execute-api/aws4_request, SignedHeaders=content-type;host;x-amz-date;x-amz-security-token, Signature=f450d773893adc7c34248378a3a263f999c300781d78e9bde2b951693afd1764</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Amz-Security-Token" elementType="Header">
                  <stringProp name="Header.name">X-Amz-Security-Token</stringProp>
                  <stringProp name="Header.value">IQoJb3JpZ2luX2VjEBAaCXVzLWVhc3QtMSJGMEQCIHa+L91dXZpQQ+00qokgTgvaPlrat5xnX/3dg1jFOeBoAiAHkHvJ1sYiE11HxHVo2HbtIscnmNpX3FdM+pKmqjvmACrNBAiJ//////////8BEAMaDDYwNzQyOTEyNDczMiIMDJaY1Tbcnr3KAnP8KqEEwH3UsaVu5BQZEOkhqNIen5rsxaLaNq08SaakAoAOJxWQ+46sJwGzZDQUPchRYGcw55Dgv1g6Mr+2x/PIlx9JCrrcLruFP9rQbcsPubm9aQZeyWL6m8bMlU4WV3BIAiJ2d4pDeM7pNB2UQ3Vh8xbdzk01IiNpfg3HT7OT1PF/NmIwOrDF1whGJHVWFnvcHGUlAGNK8brwCK9BGhRKxlQeP9s/FgdX+mQxuUGEmAzocjTBBvM50hcWXpCneMK1SgnvbUzY3hXtFhmDg++BtsxukhTS9r6s94JaZWu8Of+JGg8/oTYPyLtYZFPbmxRJJXB3Q9jrAcldZX88aH1Ji5EXcqWKnNn4Q+v91JnbGZL9UmYJpora7TYDKvsQEKfXeYo2cEnzwCGDVUXWRKlpR1kx/BiwPUbMXTXucRcEX9Y1KAr19P67DlcxTMOA5QNKzDsgeyFgCsCZe/nT2Ea1kP5MdvD8mAPGaxbXeIoIBs/hsxsVDI5Kr1RUA4CpS6FlkB50kLzw5nMjDH7eRyK8rW3yndHxS8Xgx0UBsbNZ52vUhMwuf3X0+GinfST59yDQz51xutP/YaOyW3uSeDgKJQ4v8SCkMImEKZyYZCLHX/DGlO/sE3xMYViZEUpqAGdCUjqUr0hI4BnKOt3EZ5dGWTMb9RNrAN3JoJNY7KdHUtTCkMCG5QHsRgFa+5x3egSRAsmxpuDr6KxC68KtHOh5VMF0q/MwkYmSmAY6hgLkQhbjzY1rQ8Yic64xfSS2+rT59O9HaL+9YFajdY83APNUH7w2DK2PxlekNBtNOTJdAsBLtmKgko4uMj64jHIC11JWFA9FFsBYr5p4NGshsruRPlrx+Y63qG+z/N+cybV14F0E4yZD7soXdFZyw/FAepKTdvH9svmXlB4FEVhZmacM8gkzRyCWkU5WpHrU9CWIAIZt7G6T9Zs5ACht8pzqGuy9pzKqN8Aqp7oZGBKe+IH73qecXOVcuwSGSyrReC+AajiQ8J7RBMs+IXfajvc73KUB16DXMpOfBjpHzewu/2WNEHUjC8lzKPgC03TfU5N/KC827/G0G/BUZmnQ/FlnBX242HeS</stringProp>
                </elementProp>
                <elementProp name="x-amz-date" elementType="Header">
                  <stringProp name="Header.name">x-amz-date</stringProp>
                  <stringProp name="Header.value">20220823T074425Z</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery2 {\n  likerslaGetPendingFreiendList(loginUserID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, userID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, limit: \&quot;10\&quot;)\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  searchUserChatRooms(filter: {and: [{compositKey: {matchPhrase: \&quot;#856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}}, {lastMessage: {exists: true}}]}, sort: {direction: desc, field: lastMessageAt}) {\n    nextToken\n    items {\n      id\n      lastMessage\n      lastMessageAt\n      isDetailsSeen\n      isNotificationSeen\n      lastSender\n      ownerInfo {\n        id\n        firstName\n        lastName\n        userName\n        isActive\n        totalFollowers\n        totalStars\n        totalLikes\n        profilePhotoActive\n        totalGoldStars\n        totalSilverStars\n        whoCanSendMessage\n        lastLogOutTime\n        lastLoginDate\n        lastLoginDevice\n        lastLoginTime\n        loginStatus\n        isChattBoxActive\n      }\n      receiverInfo {\n        id\n        firstName\n        lastName\n        userName\n        isActive\n        totalFollowers\n        totalStars\n        totalLikes\n        profilePhotoActive\n        totalGoldStars\n        totalSilverStars\n        whoCanSendMessage\n        lastLogOutTime\n        lastLoginDate\n        lastLoginDevice\n        lastLoginTime\n        loginStatus\n        isChattBoxActive\n      }\n    }\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;mutation UpdateFriendNotification($loginUserID: String!) {\n  LikerSLAUpdateFrienNoticfication(loginUserID: $loginUserID)\n}\n&quot;,&quot;variables&quot;:{&quot;loginUserID&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;mutation MyMutation {\n  likerslaFriendUnfriend(friendUserID: \&quot;8df53756-a689-495e-b54f-0c63f440229d\&quot;, id: \&quot;748c8880-22b7-11ed-94c2-2104c6c39650\&quot;, mode: \&quot;ACCEPT\&quot;, userID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;)\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;mutation MyMutation {\n  likerslaFollowUnfollow(followUserID: \&quot;8df53756-a689-495e-b54f-0c63f440229d\&quot;, id: \&quot;123\&quot;, mode: \&quot;FOLLOW\&quot;, userID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;)\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;{\n  notificationByUser(sortDirection: DESC, ownerID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, limit: 50) {\n    items {\n      id\n      cantPostDuration\n      ownerID\n      actionCreator\n      postID\n      categoryID\n      commentID\n      comment {\n        id\n        totalLikes\n        totalRiply\n        commentUserInfo {\n          id\n          userName\n          firstName\n          lastName\n        }\n      }\n      createdAt\n      groupID\n      userGroup {\n        groupName\n        meAsGroupMember(userID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}, filter: {status: {eq: \&quot;Invited\&quot;}}) {\n          items {\n            id\n            status\n          }\n        }\n      }\n      isDetailsSeen\n      isSeen\n      notificationType\n      replyID\n      rankPercent\n      wholeNetwork\n      starBadge\n      UserInfo {\n        id\n        firstName\n        lastName\n        userName\n        profilePhotoActive\n        totalGoldStars\n        myFollowingStatus(userID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n          items {\n            followingUserID\n            id\n            userID\n          }\n        }\n        totalSilverStars\n      }\n      group {\n        groupName\n      }\n      post {\n        totalLikes\n        totalComments\n        totalShares\n        sharePostMeta {\n          id\n          oldPostID\n          sharedByUserID\n          createdAt\n          updatedAt\n          owner\n        }\n        user {\n          id\n          firstName\n          lastName\n          userName\n        }\n      }\n    }\n    nextToken\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;mutation MyMutation {\n  LikerSLAUpdateNoticfication(loginUserID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;)\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://q7y8ibn334.execute-api.us-east-1.amazonaws.com/prodlive/getfilter" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;queryString&quot;:{&quot;userID&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;,&quot;filter_type&quot;:null}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">prodlive/getfilter</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">AWS4-HMAC-SHA256 Credential=ASIAY23MY4J6LURUZLIA/20220823/us-east-1/execute-api/aws4_request, SignedHeaders=content-type;host;x-amz-date;x-amz-security-token, Signature=aa3c4d7248fdc57507149a4ea75287992a14cc5a4f6abe19572869d9a113337d</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Amz-Security-Token" elementType="Header">
                  <stringProp name="Header.name">X-Amz-Security-Token</stringProp>
                  <stringProp name="Header.value">IQoJb3JpZ2luX2VjEBAaCXVzLWVhc3QtMSJGMEQCIHa+L91dXZpQQ+00qokgTgvaPlrat5xnX/3dg1jFOeBoAiAHkHvJ1sYiE11HxHVo2HbtIscnmNpX3FdM+pKmqjvmACrNBAiJ//////////8BEAMaDDYwNzQyOTEyNDczMiIMDJaY1Tbcnr3KAnP8KqEEwH3UsaVu5BQZEOkhqNIen5rsxaLaNq08SaakAoAOJxWQ+46sJwGzZDQUPchRYGcw55Dgv1g6Mr+2x/PIlx9JCrrcLruFP9rQbcsPubm9aQZeyWL6m8bMlU4WV3BIAiJ2d4pDeM7pNB2UQ3Vh8xbdzk01IiNpfg3HT7OT1PF/NmIwOrDF1whGJHVWFnvcHGUlAGNK8brwCK9BGhRKxlQeP9s/FgdX+mQxuUGEmAzocjTBBvM50hcWXpCneMK1SgnvbUzY3hXtFhmDg++BtsxukhTS9r6s94JaZWu8Of+JGg8/oTYPyLtYZFPbmxRJJXB3Q9jrAcldZX88aH1Ji5EXcqWKnNn4Q+v91JnbGZL9UmYJpora7TYDKvsQEKfXeYo2cEnzwCGDVUXWRKlpR1kx/BiwPUbMXTXucRcEX9Y1KAr19P67DlcxTMOA5QNKzDsgeyFgCsCZe/nT2Ea1kP5MdvD8mAPGaxbXeIoIBs/hsxsVDI5Kr1RUA4CpS6FlkB50kLzw5nMjDH7eRyK8rW3yndHxS8Xgx0UBsbNZ52vUhMwuf3X0+GinfST59yDQz51xutP/YaOyW3uSeDgKJQ4v8SCkMImEKZyYZCLHX/DGlO/sE3xMYViZEUpqAGdCUjqUr0hI4BnKOt3EZ5dGWTMb9RNrAN3JoJNY7KdHUtTCkMCG5QHsRgFa+5x3egSRAsmxpuDr6KxC68KtHOh5VMF0q/MwkYmSmAY6hgLkQhbjzY1rQ8Yic64xfSS2+rT59O9HaL+9YFajdY83APNUH7w2DK2PxlekNBtNOTJdAsBLtmKgko4uMj64jHIC11JWFA9FFsBYr5p4NGshsruRPlrx+Y63qG+z/N+cybV14F0E4yZD7soXdFZyw/FAepKTdvH9svmXlB4FEVhZmacM8gkzRyCWkU5WpHrU9CWIAIZt7G6T9Zs5ACht8pzqGuy9pzKqN8Aqp7oZGBKe+IH73qecXOVcuwSGSyrReC+AajiQ8J7RBMs+IXfajvc73KUB16DXMpOfBjpHzewu/2WNEHUjC8lzKPgC03TfU5N/KC827/G0G/BUZmnQ/FlnBX242HeS</stringProp>
                </elementProp>
                <elementProp name="x-amz-date" elementType="Header">
                  <stringProp name="Header.name">x-amz-date</stringProp>
                  <stringProp name="Header.value">20220823T074454Z</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;mutation UpdateNotifications($input: UpdateNotificationsInput!, $condition: ModelNotificationsConditionInput) {\n  updateNotifications(input: $input, condition: $condition) {\n    id\n    ownerID\n    actionCreator\n    notificationType\n    notificationDate\n    isSeen\n    isDetailsSeen\n    postID\n    groupID\n    categoryID\n    subCategoryID\n    commentID\n    replyID\n    starBadge\n    rankPercent\n    isActionCompleted\n    wholeNetwork\n    createdAt\n    updatedAt\n    UserInfo {\n      id\n      userName\n      owner\n      firstName\n      lastName\n      totalGoldStars\n      totalSilverStars\n      totalLikes\n      totalFollowers\n      totalFollowing\n      totalFriends\n      totalStars\n      totalComments\n      totalPhotos\n      isPreSignup\n      isTopCommenter\n      topCommentor {\n        items {\n          userID\n        }\n      }\n    }\n    userGroup {\n      id\n      groupName\n      totalMembers\n      totalPosts\n      aboutGroup\n      createdByUserID\n      totalPhotos\n      postCategory\n      postGroup\n      privacy\n      policy\n      postSubCategory\n      pictureMetaID\n      status\n      createdAt\n      memberStatus\n      memberID\n      updatedAt\n    }\n    group {\n      id\n      preID\n      isSelected\n      groupName\n      createdAt\n      updatedAt\n    }\n    category {\n      id\n      groupID\n      name\n      isSelected\n      preCategoryID\n      preSubCatID\n      createdAt\n      updatedAt\n    }\n    subCategory {\n      id\n      groupID\n      name\n      isSelected\n      preCategoryID\n      preSubCatID\n      createdAt\n      updatedAt\n    }\n    post {\n      id\n      userID\n      postCategoryID\n      groupId\n      totalLikes\n      totalComments\n      totalShares\n      visiblity\n      postContentType\n      postContent\n      createdAt\n      updatedAt\n      isSharePost\n      sharePostMetaID\n      isWallPost\n      wallPostUserID\n      isGroupPost\n      shouldHidefollowSugessionView\n      isPostTextExpended\n      userGroupID\n      postUsingDevice\n      linkpostURL\n      linkpostDescription\n      linkpostTitle\n      isPinPost\n      isSchedulepost\n      turnOffNotification\n      isBlocked\n      videoUploadStatus\n      status\n      frameNumber\n      hasMention\n      customPostContent\n      sharedHasMention\n      customSharedPostContent\n      isVideoPost\n      meamID\n      memelistClassName\n      memeInputAddClassName\n      memePreviewClassName\n      likeUserStatus\n      isFollowed\n    }\n    comment {\n      id\n      commentText\n      postID\n      commentUser\n      commentType\n      pictureMetaID\n      totalLikes\n      linkURL\n      linkTitle\n      totalRiply\n      linkDescription\n      createdAt\n      updatedAt\n      createdAtForApp\n      likeUserStatus\n      isExpended\n      hasMention\n      customCommentText\n    }\n  }\n}\n&quot;,&quot;variables&quot;:{&quot;input&quot;:{&quot;id&quot;:&quot;a8bb3427-8e44-464f-95d8-3231b6975f66&quot;,&quot;isDetailsSeen&quot;:true}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  byUserNameUser(userName: \&quot;Ericf99acf2\&quot;) {\n    items {\n      blockMe(userID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n        items {\n          userID\n          ownerID\n          blockType\n        }\n      }\n      blockByMe(ownerID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n        items {\n          userID\n          blockType\n          ownerID\n        }\n      }\n      friends(filter: {friendUserID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}}) {\n        items {\n          id\n          userID\n          isActiveFriend\n          friendUserID\n          compositKey\n          isFollower\n          isPendingFriend\n          isSeenNotification\n        }\n      }\n      topCommentor {\n        items {\n          userID\n        }\n      }\n      myFollowingStatus(userID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n        items {\n          followingUserID\n          id\n          userID\n        }\n      }\n      pictureMeta(sortDirection: ASC) {\n        items {\n          imagekey\n          album\n          orderIndex\n          id\n        }\n      }\n      countryName {\n        countryName\n      }\n      stateName {\n        stateName\n      }\n      homestateCountryName {\n        countryName\n      }\n      homestateName {\n        stateName\n      }\n      userAsFriend(userID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n        items {\n          friendUserID\n          userID\n          userDetails {\n            firstName\n            lastName\n          }\n          id\n          isActiveFriend\n          isPendingFriend\n        }\n      }\n      meAsFriend(friendUserID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n        items {\n          friendUserID\n          userID\n          friendDetails {\n            firstName\n            lastName\n          }\n          id\n          isActiveFriend\n          isPendingFriend\n        }\n      }\n      country\n      id\n      phoneHome\n      phoneHomeCountryCode\n      phoneHomeVisibilty\n      phoneOffice\n      phoneOfficeCountryCode\n      userName\n      owner\n      firstName\n      lastName\n      recentCategories\n      profileLinkName\n      usertourChatboxOnOff\n      usertourFeedSearchBox\n      usertourFeedCategory\n      usertourPostLike\n      usertourPostCategory\n      usertourPostTextArea\n      usertourProgressBar\n      usertourCommentLike\n      usertourAudience\n      usertourAddFriend\n      usertourFollowing\n      totalGoldStars\n      totalSilverStars\n      gender\n      country\n      state\n      isAccountVerified\n      isActive\n      defaultFeed\n      choiceMeta\n      postCategoryID\n      authProvider\n      whoCanAccessWall\n      whoCanAccessPhotos\n      whoCanSendMessage\n      whoCanSeeProfile\n      isChattBoxActive\n      displyHomestate\n      displyLiveIn\n      homestate\n      homestateCity\n      hasAcceptedCockie\n      homestateCountry\n      intro\n      isBlockByAdmin\n      isFoundingMember\n      userStoryAbout\n      userStoryAboutVisibilty\n      userStoryEarlyLife\n      userStoryEarlyLifeVisibilty\n      userStoryFamily\n      userStoryFamilyVisibilty\n      userStoryCareer\n      userStoryCareerVisibilty\n      userStoryBackground\n      userStoryBackgroundVisibilty\n      userStoryChildHood\n      userStoryChildHoodVisibilty\n      userStoryPersonalLife\n      userStoryPersonalVisibilty\n      websiteUrl\n      isLikerSupport\n      isMasterAccount\n      googleUrl\n      googleUrlVisibilty\n      websiteUrlVisibilty\n      facebookUrl\n      facebookUrlVisibilty\n      twitterUrl\n      twitterUrlVisibilty\n      linkedInUrl\n      linkedInUrlVisibilty\n      instagramUrl\n      instagramUrlVisibilty\n      skypeUrl\n      skypeUrlVisibilty\n      pinterestUrl\n      pinterestUrlVisibilty\n      youtubeUrl\n      youtubeUrlVisibilty\n      forceSecurityCheckUp\n      pushNotification\n      forceTFA\n      isCognitoConfirmed\n      activeFeedFilterType\n      headline\n      isExisting\n      isTFAActive\n      isVerified\n      coverPhotoActive\n      profilePhotoActive\n      isExparienceAdded\n      isEducationAdded\n      isFriendInvitationDone\n      totalLikes\n      isBlockByAdmin\n      totalFollowers\n      totalFollowing\n      totalFriends\n      totalStars\n      totalComments\n      totalPhotos\n      isPreSignup\n      isTopCommenter\n      topCommentor {\n        items {\n          userID\n        }\n      }\n      UserSearchHistories {\n        nextToken\n      }\n      userGroups {\n        nextToken\n      }\n      userEducation {\n        nextToken\n      }\n      userProfessionalExperience {\n        nextToken\n      }\n      userCertificate {\n        nextToken\n      }\n      contributorSettingData {\n        nextToken\n      }\n      userHonorsAwards {\n        nextToken\n      }\n      posts {\n        nextToken\n      }\n      userFilter {\n        nextToken\n      }\n    }\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  listMemes {\n    items {\n      id\n      meamID\n      memeInputAddClassName\n      memePreviewClassName\n      memelistClassName\n      serialNumber\n      status\n    }\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query starCategory {\n  likerSlaGetStarCategory(userID: \&quot;8df53756-a689-495e-b54f-0c63f440229d\&quot;)\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  likerSlaGetPostData(userID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, userGroupID: \&quot;\&quot;, profileUserID: \&quot;8df53756-a689-495e-b54f-0c63f440229d\&quot;, offset: \&quot;0\&quot;, isPublic: false, categoryID: \&quot;\&quot;, groupPrivacy: \&quot;\&quot;)\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">AWS4-HMAC-SHA256 Credential=ASIAY23MY4J6LURUZLIA/20220823/us-east-1/appsync/aws4_request, SignedHeaders=content-type;host;x-amz-date;x-amz-security-token;x-amz-user-agent, Signature=cfe579d0513cd172cef345a1f81ec2581c069c0dcc82dcf37686fa899807ae8f</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Amz-Security-Token" elementType="Header">
                  <stringProp name="Header.name">X-Amz-Security-Token</stringProp>
                  <stringProp name="Header.value">IQoJb3JpZ2luX2VjEBAaCXVzLWVhc3QtMSJGMEQCIHa+L91dXZpQQ+00qokgTgvaPlrat5xnX/3dg1jFOeBoAiAHkHvJ1sYiE11HxHVo2HbtIscnmNpX3FdM+pKmqjvmACrNBAiJ//////////8BEAMaDDYwNzQyOTEyNDczMiIMDJaY1Tbcnr3KAnP8KqEEwH3UsaVu5BQZEOkhqNIen5rsxaLaNq08SaakAoAOJxWQ+46sJwGzZDQUPchRYGcw55Dgv1g6Mr+2x/PIlx9JCrrcLruFP9rQbcsPubm9aQZeyWL6m8bMlU4WV3BIAiJ2d4pDeM7pNB2UQ3Vh8xbdzk01IiNpfg3HT7OT1PF/NmIwOrDF1whGJHVWFnvcHGUlAGNK8brwCK9BGhRKxlQeP9s/FgdX+mQxuUGEmAzocjTBBvM50hcWXpCneMK1SgnvbUzY3hXtFhmDg++BtsxukhTS9r6s94JaZWu8Of+JGg8/oTYPyLtYZFPbmxRJJXB3Q9jrAcldZX88aH1Ji5EXcqWKnNn4Q+v91JnbGZL9UmYJpora7TYDKvsQEKfXeYo2cEnzwCGDVUXWRKlpR1kx/BiwPUbMXTXucRcEX9Y1KAr19P67DlcxTMOA5QNKzDsgeyFgCsCZe/nT2Ea1kP5MdvD8mAPGaxbXeIoIBs/hsxsVDI5Kr1RUA4CpS6FlkB50kLzw5nMjDH7eRyK8rW3yndHxS8Xgx0UBsbNZ52vUhMwuf3X0+GinfST59yDQz51xutP/YaOyW3uSeDgKJQ4v8SCkMImEKZyYZCLHX/DGlO/sE3xMYViZEUpqAGdCUjqUr0hI4BnKOt3EZ5dGWTMb9RNrAN3JoJNY7KdHUtTCkMCG5QHsRgFa+5x3egSRAsmxpuDr6KxC68KtHOh5VMF0q/MwkYmSmAY6hgLkQhbjzY1rQ8Yic64xfSS2+rT59O9HaL+9YFajdY83APNUH7w2DK2PxlekNBtNOTJdAsBLtmKgko4uMj64jHIC11JWFA9FFsBYr5p4NGshsruRPlrx+Y63qG+z/N+cybV14F0E4yZD7soXdFZyw/FAepKTdvH9svmXlB4FEVhZmacM8gkzRyCWkU5WpHrU9CWIAIZt7G6T9Zs5ACht8pzqGuy9pzKqN8Aqp7oZGBKe+IH73qecXOVcuwSGSyrReC+AajiQ8J7RBMs+IXfajvc73KUB16DXMpOfBjpHzewu/2WNEHUjC8lzKPgC03TfU5N/KC827/G0G/BUZmnQ/FlnBX242HeS</stringProp>
                </elementProp>
                <elementProp name="x-amz-date" elementType="Header">
                  <stringProp name="Header.name">x-amz-date</stringProp>
                  <stringProp name="Header.value">20220823T074456Z</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery2 {\n  pictureByTime(sortDirection: DESC, userID: \&quot;8df53756-a689-495e-b54f-0c63f440229d\&quot;, filter: {album: {eq: coverPhoto}}) {\n    nextToken\n    items {\n      id\n      createdAt\n      imagekey\n    }\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  likerslaGetFreiendList(userID: \&quot;8df53756-a689-495e-b54f-0c63f440229d\&quot;, loginUserID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, limit: \&quot;10\&quot;)\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  listMemes {\n    items {\n      id\n      meamID\n      memeInputAddClassName\n      memePreviewClassName\n      memelistClassName\n      serialNumber\n      status\n    }\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  likerSlaGetPostData(userID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, userGroupID: \&quot;\&quot;, profileUserID: \&quot;8df53756-a689-495e-b54f-0c63f440229d\&quot;, offset: \&quot;0\&quot;, isPublic: false, categoryID: \&quot;\&quot;, groupPrivacy: \&quot;\&quot;)\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">AWS4-HMAC-SHA256 Credential=ASIAY23MY4J6LURUZLIA/20220823/us-east-1/appsync/aws4_request, SignedHeaders=content-type;host;x-amz-date;x-amz-security-token;x-amz-user-agent, Signature=1023bca4522f244b6766158b0f622983b53c06083c1d64c33af23bf173618996</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Amz-Security-Token" elementType="Header">
                  <stringProp name="Header.name">X-Amz-Security-Token</stringProp>
                  <stringProp name="Header.value">IQoJb3JpZ2luX2VjEBAaCXVzLWVhc3QtMSJGMEQCIHa+L91dXZpQQ+00qokgTgvaPlrat5xnX/3dg1jFOeBoAiAHkHvJ1sYiE11HxHVo2HbtIscnmNpX3FdM+pKmqjvmACrNBAiJ//////////8BEAMaDDYwNzQyOTEyNDczMiIMDJaY1Tbcnr3KAnP8KqEEwH3UsaVu5BQZEOkhqNIen5rsxaLaNq08SaakAoAOJxWQ+46sJwGzZDQUPchRYGcw55Dgv1g6Mr+2x/PIlx9JCrrcLruFP9rQbcsPubm9aQZeyWL6m8bMlU4WV3BIAiJ2d4pDeM7pNB2UQ3Vh8xbdzk01IiNpfg3HT7OT1PF/NmIwOrDF1whGJHVWFnvcHGUlAGNK8brwCK9BGhRKxlQeP9s/FgdX+mQxuUGEmAzocjTBBvM50hcWXpCneMK1SgnvbUzY3hXtFhmDg++BtsxukhTS9r6s94JaZWu8Of+JGg8/oTYPyLtYZFPbmxRJJXB3Q9jrAcldZX88aH1Ji5EXcqWKnNn4Q+v91JnbGZL9UmYJpora7TYDKvsQEKfXeYo2cEnzwCGDVUXWRKlpR1kx/BiwPUbMXTXucRcEX9Y1KAr19P67DlcxTMOA5QNKzDsgeyFgCsCZe/nT2Ea1kP5MdvD8mAPGaxbXeIoIBs/hsxsVDI5Kr1RUA4CpS6FlkB50kLzw5nMjDH7eRyK8rW3yndHxS8Xgx0UBsbNZ52vUhMwuf3X0+GinfST59yDQz51xutP/YaOyW3uSeDgKJQ4v8SCkMImEKZyYZCLHX/DGlO/sE3xMYViZEUpqAGdCUjqUr0hI4BnKOt3EZ5dGWTMb9RNrAN3JoJNY7KdHUtTCkMCG5QHsRgFa+5x3egSRAsmxpuDr6KxC68KtHOh5VMF0q/MwkYmSmAY6hgLkQhbjzY1rQ8Yic64xfSS2+rT59O9HaL+9YFajdY83APNUH7w2DK2PxlekNBtNOTJdAsBLtmKgko4uMj64jHIC11JWFA9FFsBYr5p4NGshsruRPlrx+Y63qG+z/N+cybV14F0E4yZD7soXdFZyw/FAepKTdvH9svmXlB4FEVhZmacM8gkzRyCWkU5WpHrU9CWIAIZt7G6T9Zs5ACht8pzqGuy9pzKqN8Aqp7oZGBKe+IH73qecXOVcuwSGSyrReC+AajiQ8J7RBMs+IXfajvc73KUB16DXMpOfBjpHzewu/2WNEHUjC8lzKPgC03TfU5N/KC827/G0G/BUZmnQ/FlnBX242HeS</stringProp>
                </elementProp>
                <elementProp name="x-amz-date" elementType="Header">
                  <stringProp name="Header.name">x-amz-date</stringProp>
                  <stringProp name="Header.value">20220823T074502Z</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query GetUser($id: ID!) {\n  getUser(id: $id) {\n    id\n    owner\n    firstName\n    lastName\n    userName\n    isPreSignup\n    emailVisiblity\n    secondaryEmail\n    secondaryEmailVisiblity\n    profileLinkName\n    usertourChatboxOnOff\n    usertourFeedSearchBox\n    usertourFeedCategory\n    usertourPostLike\n    usertourPostCategory\n    usertourPostTextArea\n    usertourProgressBar\n    usertourCommentLike\n    usertourAudience\n    usertourAddFriend\n    usertourFollowing\n    gender\n    dobYeayVisiblity\n    dobMonthVisiblity\n    dobDayVisiblity\n    country\n    state\n    isAccountVerified\n    hasAcceptedCockie\n    isMasterAccount\n    isActive\n    defaultFeed\n    choiceMeta\n    postCategoryID\n    authProvider\n    whoCanAccessWall\n    whoCanAccessPhotos\n    whoCanSendMessage\n    whoCanSeeProfile\n    isChattBoxActive\n    lastLogOutTime\n    lastLoginDate\n    lastLoginDevice\n    lastLoginTime\n    loginStatus\n    displyHomestate\n    displyLiveIn\n    homestate\n    homestateCity\n    homestateCountry\n    intro\n    isFoundingMember\n    phoneHome\n    phoneHomeVisibilty\n    phoneOffice\n    phoneOfficeVisibilty\n    phoneHomeCountryCode\n    phoneOfficeCountryCode\n    userStoryAbout\n    userStoryAboutVisibilty\n    userStoryEarlyLife\n    userStoryEarlyLifeVisibilty\n    userStoryFamily\n    userStoryFamilyVisibilty\n    userStoryCareer\n    userStoryCareerVisibilty\n    userStoryBackground\n    userStoryBackgroundVisibilty\n    userStoryChildHood\n    userStoryChildHoodVisibilty\n    userStoryPersonalLife\n    userStoryPersonalVisibilty\n    websiteUrl\n    websiteUrlVisibilty\n    facebookUrl\n    facebookUrlVisibilty\n    twitterUrl\n    twitterUrlVisibilty\n    linkedInUrl\n    linkedInUrlVisibilty\n    instagramUrl\n    instagramUrlVisibilty\n    skypeUrl\n    skypeUrlVisibilty\n    pinterestUrl\n    pinterestUrlVisibilty\n    youtubeUrl\n    youtubeUrlVisibilty\n    forceSecurityCheckUp\n    emailNotification\n    pushNotification\n    forceTFA\n    activeFeedFilterType\n    headline\n    isExisting\n    isTFAActive\n    isVerified\n    createdAt\n    updatedAt\n    totalLikes\n    totalFollowers\n    totalStars\n    totalFollowing\n    totalFriends\n    totalPhotos\n    coverPhotoActive\n    profilePhotoActive\n    totalGoldStars\n    totalSilverStars\n    isExparienceAdded\n    isEducationAdded\n    isFriendInvitationDone\n    recentCategories\n    topCommentor {\n      items {\n        userID\n      }\n    }\n    userGroups(limit: 4, sortDirection: DESC) {\n      nextToken\n      items {\n        CategoryInfo {\n          groupName\n        }\n        SubCategoryInfo {\n          name\n        }\n        aboutGroup\n        createdAt\n        createdByUserID\n        groupMembers(filter: {userID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}}) {\n          items {\n            userID\n          }\n          nextToken\n        }\n        groupName\n        id\n        pictureMetaID\n        policy\n        postCategory\n        postGroup\n        postSubCategory\n        privacy\n        status\n        totalMembers\n        totalPosts\n        updatedAt\n      }\n    }\n    countryName {\n      countryName\n    }\n    stateName {\n      stateName\n    }\n    homestateCountryName {\n      countryName\n    }\n    homestateName {\n      stateName\n    }\n    posts {\n      nextToken\n    }\n    pictureMeta {\n      items {\n        imagekey\n        imageSize\n        id\n        orderIndex\n        album\n      }\n    }\n    userEducation {\n      nextToken\n    }\n    userProfessionalExperience {\n      nextToken\n    }\n    userHonorsAwards {\n      nextToken\n    }\n    userCertificate {\n      nextToken\n    }\n    blockUser {\n      items {\n        id\n        ownerID\n        userID\n        blockType\n        createdAt\n        updatedAt\n      }\n    }\n    contributorSettingData {\n      items {\n        id\n        userID\n        categoryID\n        isGroupCat\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n    userFilter {\n      nextToken\n    }\n  }\n}\n&quot;,&quot;variables&quot;:{&quot;id&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;mutation MyMutation {\n  likerslaPostMutation(Mode: \&quot;CREATE\&quot;, isWallPost: true, userGroupID: \&quot;null\&quot;, postContent: \&quot;Hey Eric\&quot;, userID: \&quot;8df53756-a689-495e-b54f-0c63f440229d\&quot;, groupId: \&quot;26\&quot;, isGroupPost: false, isPinPost: false, isSharePost: false, isVideoPost: 0, linkpostDescription: \&quot;\&quot;, linkpostTitle: \&quot;\&quot;, linkpostURL: \&quot;\&quot;, meamID: \&quot;5604a0d9-044c-47da-b9a6-05bdea981923\&quot;, memeInputAddClassName: \&quot;gradient_6_add\&quot;, wallPostUserID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, visiblity: \&quot;Public\&quot;, turnOffNotification: false, postUsingDevice: \&quot;web\&quot;, postContentType: \&quot;MemePost\&quot;, memePreviewClassName: \&quot;gradient_6_preview\&quot;, memelistClassName: \&quot;gradient_6\&quot;, postCategoryID: \&quot;\&quot;, videoUploadStatus: 3)\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://pwnvm5kfj5.execute-api.us-east-1.amazonaws.com/prodlive/insertpostdata" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;queryString&quot;:{&quot;total_like&quot;:0,&quot;user_id&quot;:&quot;8df53756-a689-495e-b54f-0c63f440229d&quot;,&quot;post_id&quot;:&quot;86bc7290-22b7-11ed-a7d5-0f140239a169&quot;,&quot;permission&quot;:&quot;Public&quot;,&quot;post_type&quot;:&quot;MemePost&quot;,&quot;is_shared&quot;:0,&quot;is_wall&quot;:1,&quot;cat_id&quot;:&quot;26&quot;,&quot;subcat_id&quot;:&quot;&quot;,&quot;is_group&quot;:0,&quot;created_at&quot;:&quot;2022-08-23T07:45:15.382Z&quot;,&quot;group_id&quot;:&quot;&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">prodlive/insertpostdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">AWS4-HMAC-SHA256 Credential=ASIAY23MY4J6LURUZLIA/20220823/us-east-1/execute-api/aws4_request, SignedHeaders=content-type;host;x-amz-date;x-amz-security-token, Signature=ca9ff3d02483b9aa61b7e273688f55d4c168772ea879fe7fbd413678f0e0b734</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Amz-Security-Token" elementType="Header">
                  <stringProp name="Header.name">X-Amz-Security-Token</stringProp>
                  <stringProp name="Header.value">IQoJb3JpZ2luX2VjEBAaCXVzLWVhc3QtMSJGMEQCIHa+L91dXZpQQ+00qokgTgvaPlrat5xnX/3dg1jFOeBoAiAHkHvJ1sYiE11HxHVo2HbtIscnmNpX3FdM+pKmqjvmACrNBAiJ//////////8BEAMaDDYwNzQyOTEyNDczMiIMDJaY1Tbcnr3KAnP8KqEEwH3UsaVu5BQZEOkhqNIen5rsxaLaNq08SaakAoAOJxWQ+46sJwGzZDQUPchRYGcw55Dgv1g6Mr+2x/PIlx9JCrrcLruFP9rQbcsPubm9aQZeyWL6m8bMlU4WV3BIAiJ2d4pDeM7pNB2UQ3Vh8xbdzk01IiNpfg3HT7OT1PF/NmIwOrDF1whGJHVWFnvcHGUlAGNK8brwCK9BGhRKxlQeP9s/FgdX+mQxuUGEmAzocjTBBvM50hcWXpCneMK1SgnvbUzY3hXtFhmDg++BtsxukhTS9r6s94JaZWu8Of+JGg8/oTYPyLtYZFPbmxRJJXB3Q9jrAcldZX88aH1Ji5EXcqWKnNn4Q+v91JnbGZL9UmYJpora7TYDKvsQEKfXeYo2cEnzwCGDVUXWRKlpR1kx/BiwPUbMXTXucRcEX9Y1KAr19P67DlcxTMOA5QNKzDsgeyFgCsCZe/nT2Ea1kP5MdvD8mAPGaxbXeIoIBs/hsxsVDI5Kr1RUA4CpS6FlkB50kLzw5nMjDH7eRyK8rW3yndHxS8Xgx0UBsbNZ52vUhMwuf3X0+GinfST59yDQz51xutP/YaOyW3uSeDgKJQ4v8SCkMImEKZyYZCLHX/DGlO/sE3xMYViZEUpqAGdCUjqUr0hI4BnKOt3EZ5dGWTMb9RNrAN3JoJNY7KdHUtTCkMCG5QHsRgFa+5x3egSRAsmxpuDr6KxC68KtHOh5VMF0q/MwkYmSmAY6hgLkQhbjzY1rQ8Yic64xfSS2+rT59O9HaL+9YFajdY83APNUH7w2DK2PxlekNBtNOTJdAsBLtmKgko4uMj64jHIC11JWFA9FFsBYr5p4NGshsruRPlrx+Y63qG+z/N+cybV14F0E4yZD7soXdFZyw/FAepKTdvH9svmXlB4FEVhZmacM8gkzRyCWkU5WpHrU9CWIAIZt7G6T9Zs5ACht8pzqGuy9pzKqN8Aqp7oZGBKe+IH73qecXOVcuwSGSyrReC+AajiQ8J7RBMs+IXfajvc73KUB16DXMpOfBjpHzewu/2WNEHUjC8lzKPgC03TfU5N/KC827/G0G/BUZmnQ/FlnBX242HeS</stringProp>
                </elementProp>
                <elementProp name="x-amz-date" elementType="Header">
                  <stringProp name="Header.name">x-amz-date</stringProp>
                  <stringProp name="Header.value">20220823T074516Z</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;{\n  notificationByUser(sortDirection: DESC, ownerID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, limit: 50) {\n    items {\n      id\n      cantPostDuration\n      ownerID\n      actionCreator\n      postID\n      categoryID\n      commentID\n      comment {\n        id\n        totalLikes\n        totalRiply\n        commentUserInfo {\n          id\n          userName\n          firstName\n          lastName\n        }\n      }\n      createdAt\n      groupID\n      userGroup {\n        groupName\n        meAsGroupMember(userID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}, filter: {status: {eq: \&quot;Invited\&quot;}}) {\n          items {\n            id\n            status\n          }\n        }\n      }\n      isDetailsSeen\n      isSeen\n      notificationType\n      replyID\n      rankPercent\n      wholeNetwork\n      starBadge\n      UserInfo {\n        id\n        firstName\n        lastName\n        userName\n        profilePhotoActive\n        totalGoldStars\n        myFollowingStatus(userID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n          items {\n            followingUserID\n            id\n            userID\n          }\n        }\n        totalSilverStars\n      }\n      group {\n        groupName\n      }\n      post {\n        totalLikes\n        totalComments\n        totalShares\n        sharePostMeta {\n          id\n          oldPostID\n          sharedByUserID\n          createdAt\n          updatedAt\n          owner\n        }\n        user {\n          id\n          firstName\n          lastName\n          userName\n        }\n      }\n    }\n    nextToken\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;mutation CreateNotifications($input: CreateNotificationsInput!, $condition: ModelNotificationsConditionInput) {\n  createNotifications(input: $input, condition: $condition) {\n    id\n    ownerID\n    actionCreator\n    postID\n    categoryID\n    commentID\n    comment {\n      id\n      totalLikes\n      totalRiply\n      commentUserInfo {\n        id\n        userName\n        firstName\n        lastName\n      }\n    }\n    createdAt\n    groupID\n    userGroup {\n      groupName\n      meAsGroupMember(userID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}, filter: {status: {eq: \&quot;Invited\&quot;}}) {\n        items {\n          id\n          status\n        }\n      }\n    }\n    isDetailsSeen\n    rankPercent\n    starBadge\n    isSeen\n    notificationType\n    replyID\n    UserInfo {\n      id\n      firstName\n      lastName\n      userName\n      profilePhotoActive\n      totalGoldStars\n      myFollowingStatus(userID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n        items {\n          followingUserID\n          id\n          userID\n        }\n      }\n      totalSilverStars\n    }\n    group {\n      groupName\n    }\n    post {\n      totalLikes\n      totalComments\n      totalShares\n      user {\n        id\n        firstName\n        lastName\n        userName\n      }\n    }\n  }\n}\n&quot;,&quot;variables&quot;:{&quot;input&quot;:{&quot;actionCreator&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;,&quot;isDetailsSeen&quot;:false,&quot;isSeen&quot;:false,&quot;notificationType&quot;:&quot;PostOnWall&quot;,&quot;ownerID&quot;:&quot;8df53756-a689-495e-b54f-0c63f440229d&quot;,&quot;postID&quot;:&quot;86bc7290-22b7-11ed-a7d5-0f140239a169&quot;,&quot;notificationDate&quot;:&quot;2022-08-23&quot;}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  getPost(id: \&quot;86bc7290-22b7-11ed-a7d5-0f140239a169\&quot;) {\n    id\n    createdAt\n    groupId\n    linkpostDescription\n    linkpostTitle\n    linkpostURL\n    meamID\n    isSharePost\n    isGroupPost\n    isWallPost\n    isPinPost\n    videoUploadStatus\n    isVideoPost\n    memeInputAddClassName\n    memePreviewClassName\n    memelistClassName\n    wallPostUserID\n    wallPostUserInfo {\n      firstName\n      lastName\n      userName\n      profilePhotoActive\n      totalGoldStars\n      totalSilverStars\n    }\n    pictureMeta {\n      items {\n        imagekey\n        id\n        type\n        videoKey\n      }\n    }\n    postCategory {\n      name\n      id\n    }\n    tagUsers {\n      items {\n        id\n        postID\n        user {\n          id\n          firstName\n          lastName\n          userName\n          profilePhotoActive\n          totalGoldStars\n          totalSilverStars\n        }\n        userID\n      }\n    }\n    postCategoryGroup {\n      groupName\n      id\n    }\n    postCategoryID\n    postUsingDevice\n    postContent\n    postContentType\n    userID\n    user {\n      firstName\n      lastName\n      profilePhotoActive\n      totalGoldStars\n      totalSilverStars\n      userName\n    }\n    sharePostMeta {\n      createdAt\n      id\n      oldPostID\n      sharedByUserID\n      oldPost {\n        visiblity\n        userID\n        createdAt\n        linkpostDescription\n        linkpostTitle\n        linkpostURL\n        isVideoPost\n        videoUploadStatus\n        userID\n        meamID\n        memeInputAddClassName\n        memePreviewClassName\n        memelistClassName\n        postContent\n        postContentType\n        postUsingDevice\n        tagUsers {\n          items {\n            id\n            postID\n            user {\n              id\n              firstName\n              lastName\n              userName\n            }\n            userID\n          }\n        }\n        user {\n          firstName\n          lastName\n          userName\n          profilePhotoActive\n          totalGoldStars\n          totalSilverStars\n        }\n        pictureMeta {\n          items {\n            imagekey\n            id\n            type\n            videoKey\n          }\n        }\n        postCategory {\n          name\n          id\n        }\n        postCategoryGroup {\n          groupName\n          id\n        }\n      }\n    }\n    userGroupInfo {\n      groupName\n      createdByUserID\n      id\n      policy\n      postCategory\n      postSubCategory\n      privacy\n      status\n    }\n    visiblity\n    postLikes {\n      items {\n        likeByUserID\n        postID\n        likeUser {\n          isActive\n          firstName\n          lastName\n          id\n          userName\n          profilePhotoActive\n          totalGoldStars\n          totalSilverStars\n          totalLikes\n          totalStars\n          totalFollowers\n          friends {\n            items {\n              isFollower\n            }\n          }\n        }\n      }\n    }\n    totalLikes\n    totalComments\n    totalShares\n    turnOffNotification\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;mutation MyMutation {\n  LikerSLAUpdateNoticfication(loginUserID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;)\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  byUserIDUserDailyActivity(userID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;) {\n    nextToken\n    items {\n      id\n      isSentEmail\n      createdAt\n      activityDate\n      activityLog\n      userID\n    }\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">AWS4-HMAC-SHA256 Credential=ASIAY23MY4J6LURUZLIA/20220823/us-east-1/appsync/aws4_request, SignedHeaders=content-type;host;x-amz-date;x-amz-security-token;x-amz-user-agent, Signature=b6120ccfba1549a432c9a86c250485dd34ace19a16e6d0f3fbde9439c9f8bb30</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Amz-Security-Token" elementType="Header">
                  <stringProp name="Header.name">X-Amz-Security-Token</stringProp>
                  <stringProp name="Header.value">IQoJb3JpZ2luX2VjEBAaCXVzLWVhc3QtMSJGMEQCIHa+L91dXZpQQ+00qokgTgvaPlrat5xnX/3dg1jFOeBoAiAHkHvJ1sYiE11HxHVo2HbtIscnmNpX3FdM+pKmqjvmACrNBAiJ//////////8BEAMaDDYwNzQyOTEyNDczMiIMDJaY1Tbcnr3KAnP8KqEEwH3UsaVu5BQZEOkhqNIen5rsxaLaNq08SaakAoAOJxWQ+46sJwGzZDQUPchRYGcw55Dgv1g6Mr+2x/PIlx9JCrrcLruFP9rQbcsPubm9aQZeyWL6m8bMlU4WV3BIAiJ2d4pDeM7pNB2UQ3Vh8xbdzk01IiNpfg3HT7OT1PF/NmIwOrDF1whGJHVWFnvcHGUlAGNK8brwCK9BGhRKxlQeP9s/FgdX+mQxuUGEmAzocjTBBvM50hcWXpCneMK1SgnvbUzY3hXtFhmDg++BtsxukhTS9r6s94JaZWu8Of+JGg8/oTYPyLtYZFPbmxRJJXB3Q9jrAcldZX88aH1Ji5EXcqWKnNn4Q+v91JnbGZL9UmYJpora7TYDKvsQEKfXeYo2cEnzwCGDVUXWRKlpR1kx/BiwPUbMXTXucRcEX9Y1KAr19P67DlcxTMOA5QNKzDsgeyFgCsCZe/nT2Ea1kP5MdvD8mAPGaxbXeIoIBs/hsxsVDI5Kr1RUA4CpS6FlkB50kLzw5nMjDH7eRyK8rW3yndHxS8Xgx0UBsbNZ52vUhMwuf3X0+GinfST59yDQz51xutP/YaOyW3uSeDgKJQ4v8SCkMImEKZyYZCLHX/DGlO/sE3xMYViZEUpqAGdCUjqUr0hI4BnKOt3EZ5dGWTMb9RNrAN3JoJNY7KdHUtTCkMCG5QHsRgFa+5x3egSRAsmxpuDr6KxC68KtHOh5VMF0q/MwkYmSmAY6hgLkQhbjzY1rQ8Yic64xfSS2+rT59O9HaL+9YFajdY83APNUH7w2DK2PxlekNBtNOTJdAsBLtmKgko4uMj64jHIC11JWFA9FFsBYr5p4NGshsruRPlrx+Y63qG+z/N+cybV14F0E4yZD7soXdFZyw/FAepKTdvH9svmXlB4FEVhZmacM8gkzRyCWkU5WpHrU9CWIAIZt7G6T9Zs5ACht8pzqGuy9pzKqN8Aqp7oZGBKe+IH73qecXOVcuwSGSyrReC+AajiQ8J7RBMs+IXfajvc73KUB16DXMpOfBjpHzewu/2WNEHUjC8lzKPgC03TfU5N/KC827/G0G/BUZmnQ/FlnBX242HeS</stringProp>
                </elementProp>
                <elementProp name="x-amz-date" elementType="Header">
                  <stringProp name="Header.name">x-amz-date</stringProp>
                  <stringProp name="Header.value">20220823T074518Z</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  likerSlaGetPostData(userID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, userGroupID: \&quot;\&quot;, profileUserID: \&quot;8df53756-a689-495e-b54f-0c63f440229d\&quot;, offset: \&quot;5\&quot;, isPublic: false, categoryID: \&quot;\&quot;, groupPrivacy: \&quot;\&quot;)\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">AWS4-HMAC-SHA256 Credential=ASIAY23MY4J6LURUZLIA/20220823/us-east-1/appsync/aws4_request, SignedHeaders=content-type;host;x-amz-date;x-amz-security-token;x-amz-user-agent, Signature=655c4e898fe366e6be5314e4b1465ac960412cb180e03f6538afd77ef7f50bc0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Amz-Security-Token" elementType="Header">
                  <stringProp name="Header.name">X-Amz-Security-Token</stringProp>
                  <stringProp name="Header.value">IQoJb3JpZ2luX2VjEBAaCXVzLWVhc3QtMSJGMEQCIHa+L91dXZpQQ+00qokgTgvaPlrat5xnX/3dg1jFOeBoAiAHkHvJ1sYiE11HxHVo2HbtIscnmNpX3FdM+pKmqjvmACrNBAiJ//////////8BEAMaDDYwNzQyOTEyNDczMiIMDJaY1Tbcnr3KAnP8KqEEwH3UsaVu5BQZEOkhqNIen5rsxaLaNq08SaakAoAOJxWQ+46sJwGzZDQUPchRYGcw55Dgv1g6Mr+2x/PIlx9JCrrcLruFP9rQbcsPubm9aQZeyWL6m8bMlU4WV3BIAiJ2d4pDeM7pNB2UQ3Vh8xbdzk01IiNpfg3HT7OT1PF/NmIwOrDF1whGJHVWFnvcHGUlAGNK8brwCK9BGhRKxlQeP9s/FgdX+mQxuUGEmAzocjTBBvM50hcWXpCneMK1SgnvbUzY3hXtFhmDg++BtsxukhTS9r6s94JaZWu8Of+JGg8/oTYPyLtYZFPbmxRJJXB3Q9jrAcldZX88aH1Ji5EXcqWKnNn4Q+v91JnbGZL9UmYJpora7TYDKvsQEKfXeYo2cEnzwCGDVUXWRKlpR1kx/BiwPUbMXTXucRcEX9Y1KAr19P67DlcxTMOA5QNKzDsgeyFgCsCZe/nT2Ea1kP5MdvD8mAPGaxbXeIoIBs/hsxsVDI5Kr1RUA4CpS6FlkB50kLzw5nMjDH7eRyK8rW3yndHxS8Xgx0UBsbNZ52vUhMwuf3X0+GinfST59yDQz51xutP/YaOyW3uSeDgKJQ4v8SCkMImEKZyYZCLHX/DGlO/sE3xMYViZEUpqAGdCUjqUr0hI4BnKOt3EZ5dGWTMb9RNrAN3JoJNY7KdHUtTCkMCG5QHsRgFa+5x3egSRAsmxpuDr6KxC68KtHOh5VMF0q/MwkYmSmAY6hgLkQhbjzY1rQ8Yic64xfSS2+rT59O9HaL+9YFajdY83APNUH7w2DK2PxlekNBtNOTJdAsBLtmKgko4uMj64jHIC11JWFA9FFsBYr5p4NGshsruRPlrx+Y63qG+z/N+cybV14F0E4yZD7soXdFZyw/FAepKTdvH9svmXlB4FEVhZmacM8gkzRyCWkU5WpHrU9CWIAIZt7G6T9Zs5ACht8pzqGuy9pzKqN8Aqp7oZGBKe+IH73qecXOVcuwSGSyrReC+AajiQ8J7RBMs+IXfajvc73KUB16DXMpOfBjpHzewu/2WNEHUjC8lzKPgC03TfU5N/KC827/G0G/BUZmnQ/FlnBX242HeS</stringProp>
                </elementProp>
                <elementProp name="x-amz-date" elementType="Header">
                  <stringProp name="Header.name">x-amz-date</stringProp>
                  <stringProp name="Header.value">20220823T074518Z</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://q7y8ibn334.execute-api.us-east-1.amazonaws.com/prodlive/getfilter" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;queryString&quot;:{&quot;userID&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;,&quot;filter_type&quot;:7}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">prodlive/getfilter</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">AWS4-HMAC-SHA256 Credential=ASIAY23MY4J6LURUZLIA/20220823/us-east-1/execute-api/aws4_request, SignedHeaders=content-type;host;x-amz-date;x-amz-security-token, Signature=04cedd52ea4389a6b2069f3945342b0d5ddafdc7f5228ceb7ede8fc45441810f</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Amz-Security-Token" elementType="Header">
                  <stringProp name="Header.name">X-Amz-Security-Token</stringProp>
                  <stringProp name="Header.value">IQoJb3JpZ2luX2VjEBAaCXVzLWVhc3QtMSJGMEQCIHa+L91dXZpQQ+00qokgTgvaPlrat5xnX/3dg1jFOeBoAiAHkHvJ1sYiE11HxHVo2HbtIscnmNpX3FdM+pKmqjvmACrNBAiJ//////////8BEAMaDDYwNzQyOTEyNDczMiIMDJaY1Tbcnr3KAnP8KqEEwH3UsaVu5BQZEOkhqNIen5rsxaLaNq08SaakAoAOJxWQ+46sJwGzZDQUPchRYGcw55Dgv1g6Mr+2x/PIlx9JCrrcLruFP9rQbcsPubm9aQZeyWL6m8bMlU4WV3BIAiJ2d4pDeM7pNB2UQ3Vh8xbdzk01IiNpfg3HT7OT1PF/NmIwOrDF1whGJHVWFnvcHGUlAGNK8brwCK9BGhRKxlQeP9s/FgdX+mQxuUGEmAzocjTBBvM50hcWXpCneMK1SgnvbUzY3hXtFhmDg++BtsxukhTS9r6s94JaZWu8Of+JGg8/oTYPyLtYZFPbmxRJJXB3Q9jrAcldZX88aH1Ji5EXcqWKnNn4Q+v91JnbGZL9UmYJpora7TYDKvsQEKfXeYo2cEnzwCGDVUXWRKlpR1kx/BiwPUbMXTXucRcEX9Y1KAr19P67DlcxTMOA5QNKzDsgeyFgCsCZe/nT2Ea1kP5MdvD8mAPGaxbXeIoIBs/hsxsVDI5Kr1RUA4CpS6FlkB50kLzw5nMjDH7eRyK8rW3yndHxS8Xgx0UBsbNZ52vUhMwuf3X0+GinfST59yDQz51xutP/YaOyW3uSeDgKJQ4v8SCkMImEKZyYZCLHX/DGlO/sE3xMYViZEUpqAGdCUjqUr0hI4BnKOt3EZ5dGWTMb9RNrAN3JoJNY7KdHUtTCkMCG5QHsRgFa+5x3egSRAsmxpuDr6KxC68KtHOh5VMF0q/MwkYmSmAY6hgLkQhbjzY1rQ8Yic64xfSS2+rT59O9HaL+9YFajdY83APNUH7w2DK2PxlekNBtNOTJdAsBLtmKgko4uMj64jHIC11JWFA9FFsBYr5p4NGshsruRPlrx+Y63qG+z/N+cybV14F0E4yZD7soXdFZyw/FAepKTdvH9svmXlB4FEVhZmacM8gkzRyCWkU5WpHrU9CWIAIZt7G6T9Zs5ACht8pzqGuy9pzKqN8Aqp7oZGBKe+IH73qecXOVcuwSGSyrReC+AajiQ8J7RBMs+IXfajvc73KUB16DXMpOfBjpHzewu/2WNEHUjC8lzKPgC03TfU5N/KC827/G0G/BUZmnQ/FlnBX242HeS</stringProp>
                </elementProp>
                <elementProp name="x-amz-date" elementType="Header">
                  <stringProp name="Header.name">x-amz-date</stringProp>
                  <stringProp name="Header.value">20220823T074522Z</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://q7y8ibn334.execute-api.us-east-1.amazonaws.com/prodlive/getfilter" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;queryString&quot;:{&quot;userID&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;,&quot;filter_type&quot;:null}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">prodlive/getfilter</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">AWS4-HMAC-SHA256 Credential=ASIAY23MY4J6LURUZLIA/20220823/us-east-1/execute-api/aws4_request, SignedHeaders=content-type;host;x-amz-date;x-amz-security-token, Signature=9406c64e641df285551b670d8cf109164a90e44ae0922ede94a7be3d306bd8f8</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Amz-Security-Token" elementType="Header">
                  <stringProp name="Header.name">X-Amz-Security-Token</stringProp>
                  <stringProp name="Header.value">IQoJb3JpZ2luX2VjEBAaCXVzLWVhc3QtMSJGMEQCIHa+L91dXZpQQ+00qokgTgvaPlrat5xnX/3dg1jFOeBoAiAHkHvJ1sYiE11HxHVo2HbtIscnmNpX3FdM+pKmqjvmACrNBAiJ//////////8BEAMaDDYwNzQyOTEyNDczMiIMDJaY1Tbcnr3KAnP8KqEEwH3UsaVu5BQZEOkhqNIen5rsxaLaNq08SaakAoAOJxWQ+46sJwGzZDQUPchRYGcw55Dgv1g6Mr+2x/PIlx9JCrrcLruFP9rQbcsPubm9aQZeyWL6m8bMlU4WV3BIAiJ2d4pDeM7pNB2UQ3Vh8xbdzk01IiNpfg3HT7OT1PF/NmIwOrDF1whGJHVWFnvcHGUlAGNK8brwCK9BGhRKxlQeP9s/FgdX+mQxuUGEmAzocjTBBvM50hcWXpCneMK1SgnvbUzY3hXtFhmDg++BtsxukhTS9r6s94JaZWu8Of+JGg8/oTYPyLtYZFPbmxRJJXB3Q9jrAcldZX88aH1Ji5EXcqWKnNn4Q+v91JnbGZL9UmYJpora7TYDKvsQEKfXeYo2cEnzwCGDVUXWRKlpR1kx/BiwPUbMXTXucRcEX9Y1KAr19P67DlcxTMOA5QNKzDsgeyFgCsCZe/nT2Ea1kP5MdvD8mAPGaxbXeIoIBs/hsxsVDI5Kr1RUA4CpS6FlkB50kLzw5nMjDH7eRyK8rW3yndHxS8Xgx0UBsbNZ52vUhMwuf3X0+GinfST59yDQz51xutP/YaOyW3uSeDgKJQ4v8SCkMImEKZyYZCLHX/DGlO/sE3xMYViZEUpqAGdCUjqUr0hI4BnKOt3EZ5dGWTMb9RNrAN3JoJNY7KdHUtTCkMCG5QHsRgFa+5x3egSRAsmxpuDr6KxC68KtHOh5VMF0q/MwkYmSmAY6hgLkQhbjzY1rQ8Yic64xfSS2+rT59O9HaL+9YFajdY83APNUH7w2DK2PxlekNBtNOTJdAsBLtmKgko4uMj64jHIC11JWFA9FFsBYr5p4NGshsruRPlrx+Y63qG+z/N+cybV14F0E4yZD7soXdFZyw/FAepKTdvH9svmXlB4FEVhZmacM8gkzRyCWkU5WpHrU9CWIAIZt7G6T9Zs5ACht8pzqGuy9pzKqN8Aqp7oZGBKe+IH73qecXOVcuwSGSyrReC+AajiQ8J7RBMs+IXfajvc73KUB16DXMpOfBjpHzewu/2WNEHUjC8lzKPgC03TfU5N/KC827/G0G/BUZmnQ/FlnBX242HeS</stringProp>
                </elementProp>
                <elementProp name="x-amz-date" elementType="Header">
                  <stringProp name="Header.name">x-amz-date</stringProp>
                  <stringProp name="Header.value">20220823T074522Z</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  likerSlaGetStarContributorToFollow(loginUserID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;)\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query ListGroups($filter: ModelGroupFilterInput, $limit: Int, $nextToken: String) {\n  listGroups(filter: $filter, limit: $limit, nextToken: $nextToken) {\n    items {\n      id\n      preID\n      groupName\n      postCategories {\n        items {\n          id\n          name\n          groupID\n        }\n      }\n      createdAt\n      updatedAt\n    }\n    nextToken\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://q7y8ibn334.execute-api.us-east-1.amazonaws.com/prodlive/getfilter" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;queryString&quot;:{&quot;userID&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;,&quot;filter_type&quot;:null}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">prodlive/getfilter</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">AWS4-HMAC-SHA256 Credential=ASIAY23MY4J6LURUZLIA/20220823/us-east-1/execute-api/aws4_request, SignedHeaders=content-type;host;x-amz-date;x-amz-security-token, Signature=9406c64e641df285551b670d8cf109164a90e44ae0922ede94a7be3d306bd8f8</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Amz-Security-Token" elementType="Header">
                  <stringProp name="Header.name">X-Amz-Security-Token</stringProp>
                  <stringProp name="Header.value">IQoJb3JpZ2luX2VjEBAaCXVzLWVhc3QtMSJGMEQCIHa+L91dXZpQQ+00qokgTgvaPlrat5xnX/3dg1jFOeBoAiAHkHvJ1sYiE11HxHVo2HbtIscnmNpX3FdM+pKmqjvmACrNBAiJ//////////8BEAMaDDYwNzQyOTEyNDczMiIMDJaY1Tbcnr3KAnP8KqEEwH3UsaVu5BQZEOkhqNIen5rsxaLaNq08SaakAoAOJxWQ+46sJwGzZDQUPchRYGcw55Dgv1g6Mr+2x/PIlx9JCrrcLruFP9rQbcsPubm9aQZeyWL6m8bMlU4WV3BIAiJ2d4pDeM7pNB2UQ3Vh8xbdzk01IiNpfg3HT7OT1PF/NmIwOrDF1whGJHVWFnvcHGUlAGNK8brwCK9BGhRKxlQeP9s/FgdX+mQxuUGEmAzocjTBBvM50hcWXpCneMK1SgnvbUzY3hXtFhmDg++BtsxukhTS9r6s94JaZWu8Of+JGg8/oTYPyLtYZFPbmxRJJXB3Q9jrAcldZX88aH1Ji5EXcqWKnNn4Q+v91JnbGZL9UmYJpora7TYDKvsQEKfXeYo2cEnzwCGDVUXWRKlpR1kx/BiwPUbMXTXucRcEX9Y1KAr19P67DlcxTMOA5QNKzDsgeyFgCsCZe/nT2Ea1kP5MdvD8mAPGaxbXeIoIBs/hsxsVDI5Kr1RUA4CpS6FlkB50kLzw5nMjDH7eRyK8rW3yndHxS8Xgx0UBsbNZ52vUhMwuf3X0+GinfST59yDQz51xutP/YaOyW3uSeDgKJQ4v8SCkMImEKZyYZCLHX/DGlO/sE3xMYViZEUpqAGdCUjqUr0hI4BnKOt3EZ5dGWTMb9RNrAN3JoJNY7KdHUtTCkMCG5QHsRgFa+5x3egSRAsmxpuDr6KxC68KtHOh5VMF0q/MwkYmSmAY6hgLkQhbjzY1rQ8Yic64xfSS2+rT59O9HaL+9YFajdY83APNUH7w2DK2PxlekNBtNOTJdAsBLtmKgko4uMj64jHIC11JWFA9FFsBYr5p4NGshsruRPlrx+Y63qG+z/N+cybV14F0E4yZD7soXdFZyw/FAepKTdvH9svmXlB4FEVhZmacM8gkzRyCWkU5WpHrU9CWIAIZt7G6T9Zs5ACht8pzqGuy9pzKqN8Aqp7oZGBKe+IH73qecXOVcuwSGSyrReC+AajiQ8J7RBMs+IXfajvc73KUB16DXMpOfBjpHzewu/2WNEHUjC8lzKPgC03TfU5N/KC827/G0G/BUZmnQ/FlnBX242HeS</stringProp>
                </elementProp>
                <elementProp name="x-amz-date" elementType="Header">
                  <stringProp name="Header.name">x-amz-date</stringProp>
                  <stringProp name="Header.value">20220823T074522Z</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  likerslaGetFriendFeed(is_public: \&quot;false\&quot;, limit: \&quot;5\&quot;, offset: \&quot;0\&quot;, userID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, filter: \&quot;1\&quot;, feed: \&quot;friends\&quot;, cat_id: \&quot;\&quot;)\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">AWS4-HMAC-SHA256 Credential=ASIAY23MY4J6LURUZLIA/20220823/us-east-1/appsync/aws4_request, SignedHeaders=content-type;host;x-amz-date;x-amz-security-token;x-amz-user-agent, Signature=0617266ee3b17c70ac82e1be6aac63ebefa1a446c32b190026643bc39acc171a</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Amz-Security-Token" elementType="Header">
                  <stringProp name="Header.name">X-Amz-Security-Token</stringProp>
                  <stringProp name="Header.value">IQoJb3JpZ2luX2VjEBAaCXVzLWVhc3QtMSJGMEQCIHa+L91dXZpQQ+00qokgTgvaPlrat5xnX/3dg1jFOeBoAiAHkHvJ1sYiE11HxHVo2HbtIscnmNpX3FdM+pKmqjvmACrNBAiJ//////////8BEAMaDDYwNzQyOTEyNDczMiIMDJaY1Tbcnr3KAnP8KqEEwH3UsaVu5BQZEOkhqNIen5rsxaLaNq08SaakAoAOJxWQ+46sJwGzZDQUPchRYGcw55Dgv1g6Mr+2x/PIlx9JCrrcLruFP9rQbcsPubm9aQZeyWL6m8bMlU4WV3BIAiJ2d4pDeM7pNB2UQ3Vh8xbdzk01IiNpfg3HT7OT1PF/NmIwOrDF1whGJHVWFnvcHGUlAGNK8brwCK9BGhRKxlQeP9s/FgdX+mQxuUGEmAzocjTBBvM50hcWXpCneMK1SgnvbUzY3hXtFhmDg++BtsxukhTS9r6s94JaZWu8Of+JGg8/oTYPyLtYZFPbmxRJJXB3Q9jrAcldZX88aH1Ji5EXcqWKnNn4Q+v91JnbGZL9UmYJpora7TYDKvsQEKfXeYo2cEnzwCGDVUXWRKlpR1kx/BiwPUbMXTXucRcEX9Y1KAr19P67DlcxTMOA5QNKzDsgeyFgCsCZe/nT2Ea1kP5MdvD8mAPGaxbXeIoIBs/hsxsVDI5Kr1RUA4CpS6FlkB50kLzw5nMjDH7eRyK8rW3yndHxS8Xgx0UBsbNZ52vUhMwuf3X0+GinfST59yDQz51xutP/YaOyW3uSeDgKJQ4v8SCkMImEKZyYZCLHX/DGlO/sE3xMYViZEUpqAGdCUjqUr0hI4BnKOt3EZ5dGWTMb9RNrAN3JoJNY7KdHUtTCkMCG5QHsRgFa+5x3egSRAsmxpuDr6KxC68KtHOh5VMF0q/MwkYmSmAY6hgLkQhbjzY1rQ8Yic64xfSS2+rT59O9HaL+9YFajdY83APNUH7w2DK2PxlekNBtNOTJdAsBLtmKgko4uMj64jHIC11JWFA9FFsBYr5p4NGshsruRPlrx+Y63qG+z/N+cybV14F0E4yZD7soXdFZyw/FAepKTdvH9svmXlB4FEVhZmacM8gkzRyCWkU5WpHrU9CWIAIZt7G6T9Zs5ACht8pzqGuy9pzKqN8Aqp7oZGBKe+IH73qecXOVcuwSGSyrReC+AajiQ8J7RBMs+IXfajvc73KUB16DXMpOfBjpHzewu/2WNEHUjC8lzKPgC03TfU5N/KC827/G0G/BUZmnQ/FlnBX242HeS</stringProp>
                </elementProp>
                <elementProp name="x-amz-date" elementType="Header">
                  <stringProp name="Header.name">x-amz-date</stringProp>
                  <stringProp name="Header.value">20220823T074524Z</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://q7y8ibn334.execute-api.us-east-1.amazonaws.com/prodlive/getfilter" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;queryString&quot;:{&quot;userID&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;,&quot;filter_type&quot;:null}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">prodlive/getfilter</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">AWS4-HMAC-SHA256 Credential=ASIAY23MY4J6LURUZLIA/20220823/us-east-1/execute-api/aws4_request, SignedHeaders=content-type;host;x-amz-date;x-amz-security-token, Signature=3d2fde56c36fd03feea49c1314fce25e034a30e797bc8e73e699aee732b49c96</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Amz-Security-Token" elementType="Header">
                  <stringProp name="Header.name">X-Amz-Security-Token</stringProp>
                  <stringProp name="Header.value">IQoJb3JpZ2luX2VjEBAaCXVzLWVhc3QtMSJGMEQCIHa+L91dXZpQQ+00qokgTgvaPlrat5xnX/3dg1jFOeBoAiAHkHvJ1sYiE11HxHVo2HbtIscnmNpX3FdM+pKmqjvmACrNBAiJ//////////8BEAMaDDYwNzQyOTEyNDczMiIMDJaY1Tbcnr3KAnP8KqEEwH3UsaVu5BQZEOkhqNIen5rsxaLaNq08SaakAoAOJxWQ+46sJwGzZDQUPchRYGcw55Dgv1g6Mr+2x/PIlx9JCrrcLruFP9rQbcsPubm9aQZeyWL6m8bMlU4WV3BIAiJ2d4pDeM7pNB2UQ3Vh8xbdzk01IiNpfg3HT7OT1PF/NmIwOrDF1whGJHVWFnvcHGUlAGNK8brwCK9BGhRKxlQeP9s/FgdX+mQxuUGEmAzocjTBBvM50hcWXpCneMK1SgnvbUzY3hXtFhmDg++BtsxukhTS9r6s94JaZWu8Of+JGg8/oTYPyLtYZFPbmxRJJXB3Q9jrAcldZX88aH1Ji5EXcqWKnNn4Q+v91JnbGZL9UmYJpora7TYDKvsQEKfXeYo2cEnzwCGDVUXWRKlpR1kx/BiwPUbMXTXucRcEX9Y1KAr19P67DlcxTMOA5QNKzDsgeyFgCsCZe/nT2Ea1kP5MdvD8mAPGaxbXeIoIBs/hsxsVDI5Kr1RUA4CpS6FlkB50kLzw5nMjDH7eRyK8rW3yndHxS8Xgx0UBsbNZ52vUhMwuf3X0+GinfST59yDQz51xutP/YaOyW3uSeDgKJQ4v8SCkMImEKZyYZCLHX/DGlO/sE3xMYViZEUpqAGdCUjqUr0hI4BnKOt3EZ5dGWTMb9RNrAN3JoJNY7KdHUtTCkMCG5QHsRgFa+5x3egSRAsmxpuDr6KxC68KtHOh5VMF0q/MwkYmSmAY6hgLkQhbjzY1rQ8Yic64xfSS2+rT59O9HaL+9YFajdY83APNUH7w2DK2PxlekNBtNOTJdAsBLtmKgko4uMj64jHIC11JWFA9FFsBYr5p4NGshsruRPlrx+Y63qG+z/N+cybV14F0E4yZD7soXdFZyw/FAepKTdvH9svmXlB4FEVhZmacM8gkzRyCWkU5WpHrU9CWIAIZt7G6T9Zs5ACht8pzqGuy9pzKqN8Aqp7oZGBKe+IH73qecXOVcuwSGSyrReC+AajiQ8J7RBMs+IXfajvc73KUB16DXMpOfBjpHzewu/2WNEHUjC8lzKPgC03TfU5N/KC827/G0G/BUZmnQ/FlnBX242HeS</stringProp>
                </elementProp>
                <elementProp name="x-amz-date" elementType="Header">
                  <stringProp name="Header.name">x-amz-date</stringProp>
                  <stringProp name="Header.value">20220823T074525Z</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://q7y8ibn334.execute-api.us-east-1.amazonaws.com/prodlive/getfilter" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;queryString&quot;:{&quot;userID&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;,&quot;filter_type&quot;:null}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">prodlive/getfilter</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">AWS4-HMAC-SHA256 Credential=ASIAY23MY4J6LURUZLIA/20220823/us-east-1/execute-api/aws4_request, SignedHeaders=content-type;host;x-amz-date;x-amz-security-token, Signature=3d2fde56c36fd03feea49c1314fce25e034a30e797bc8e73e699aee732b49c96</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Amz-Security-Token" elementType="Header">
                  <stringProp name="Header.name">X-Amz-Security-Token</stringProp>
                  <stringProp name="Header.value">IQoJb3JpZ2luX2VjEBAaCXVzLWVhc3QtMSJGMEQCIHa+L91dXZpQQ+00qokgTgvaPlrat5xnX/3dg1jFOeBoAiAHkHvJ1sYiE11HxHVo2HbtIscnmNpX3FdM+pKmqjvmACrNBAiJ//////////8BEAMaDDYwNzQyOTEyNDczMiIMDJaY1Tbcnr3KAnP8KqEEwH3UsaVu5BQZEOkhqNIen5rsxaLaNq08SaakAoAOJxWQ+46sJwGzZDQUPchRYGcw55Dgv1g6Mr+2x/PIlx9JCrrcLruFP9rQbcsPubm9aQZeyWL6m8bMlU4WV3BIAiJ2d4pDeM7pNB2UQ3Vh8xbdzk01IiNpfg3HT7OT1PF/NmIwOrDF1whGJHVWFnvcHGUlAGNK8brwCK9BGhRKxlQeP9s/FgdX+mQxuUGEmAzocjTBBvM50hcWXpCneMK1SgnvbUzY3hXtFhmDg++BtsxukhTS9r6s94JaZWu8Of+JGg8/oTYPyLtYZFPbmxRJJXB3Q9jrAcldZX88aH1Ji5EXcqWKnNn4Q+v91JnbGZL9UmYJpora7TYDKvsQEKfXeYo2cEnzwCGDVUXWRKlpR1kx/BiwPUbMXTXucRcEX9Y1KAr19P67DlcxTMOA5QNKzDsgeyFgCsCZe/nT2Ea1kP5MdvD8mAPGaxbXeIoIBs/hsxsVDI5Kr1RUA4CpS6FlkB50kLzw5nMjDH7eRyK8rW3yndHxS8Xgx0UBsbNZ52vUhMwuf3X0+GinfST59yDQz51xutP/YaOyW3uSeDgKJQ4v8SCkMImEKZyYZCLHX/DGlO/sE3xMYViZEUpqAGdCUjqUr0hI4BnKOt3EZ5dGWTMb9RNrAN3JoJNY7KdHUtTCkMCG5QHsRgFa+5x3egSRAsmxpuDr6KxC68KtHOh5VMF0q/MwkYmSmAY6hgLkQhbjzY1rQ8Yic64xfSS2+rT59O9HaL+9YFajdY83APNUH7w2DK2PxlekNBtNOTJdAsBLtmKgko4uMj64jHIC11JWFA9FFsBYr5p4NGshsruRPlrx+Y63qG+z/N+cybV14F0E4yZD7soXdFZyw/FAepKTdvH9svmXlB4FEVhZmacM8gkzRyCWkU5WpHrU9CWIAIZt7G6T9Zs5ACht8pzqGuy9pzKqN8Aqp7oZGBKe+IH73qecXOVcuwSGSyrReC+AajiQ8J7RBMs+IXfajvc73KUB16DXMpOfBjpHzewu/2WNEHUjC8lzKPgC03TfU5N/KC827/G0G/BUZmnQ/FlnBX242HeS</stringProp>
                </elementProp>
                <elementProp name="x-amz-date" elementType="Header">
                  <stringProp name="Header.name">x-amz-date</stringProp>
                  <stringProp name="Header.value">20220823T074525Z</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://q7y8ibn334.execute-api.us-east-1.amazonaws.com/prodlive/getfilter" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;queryString&quot;:{&quot;userID&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;,&quot;filter_type&quot;:null}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">prodlive/getfilter</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">AWS4-HMAC-SHA256 Credential=ASIAY23MY4J6LURUZLIA/20220823/us-east-1/execute-api/aws4_request, SignedHeaders=content-type;host;x-amz-date;x-amz-security-token, Signature=8012bb9335ab0f5f0ef023495d6526ff08510d95fbc114432c947f61dc23eab8</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Amz-Security-Token" elementType="Header">
                  <stringProp name="Header.name">X-Amz-Security-Token</stringProp>
                  <stringProp name="Header.value">IQoJb3JpZ2luX2VjEBAaCXVzLWVhc3QtMSJGMEQCIHa+L91dXZpQQ+00qokgTgvaPlrat5xnX/3dg1jFOeBoAiAHkHvJ1sYiE11HxHVo2HbtIscnmNpX3FdM+pKmqjvmACrNBAiJ//////////8BEAMaDDYwNzQyOTEyNDczMiIMDJaY1Tbcnr3KAnP8KqEEwH3UsaVu5BQZEOkhqNIen5rsxaLaNq08SaakAoAOJxWQ+46sJwGzZDQUPchRYGcw55Dgv1g6Mr+2x/PIlx9JCrrcLruFP9rQbcsPubm9aQZeyWL6m8bMlU4WV3BIAiJ2d4pDeM7pNB2UQ3Vh8xbdzk01IiNpfg3HT7OT1PF/NmIwOrDF1whGJHVWFnvcHGUlAGNK8brwCK9BGhRKxlQeP9s/FgdX+mQxuUGEmAzocjTBBvM50hcWXpCneMK1SgnvbUzY3hXtFhmDg++BtsxukhTS9r6s94JaZWu8Of+JGg8/oTYPyLtYZFPbmxRJJXB3Q9jrAcldZX88aH1Ji5EXcqWKnNn4Q+v91JnbGZL9UmYJpora7TYDKvsQEKfXeYo2cEnzwCGDVUXWRKlpR1kx/BiwPUbMXTXucRcEX9Y1KAr19P67DlcxTMOA5QNKzDsgeyFgCsCZe/nT2Ea1kP5MdvD8mAPGaxbXeIoIBs/hsxsVDI5Kr1RUA4CpS6FlkB50kLzw5nMjDH7eRyK8rW3yndHxS8Xgx0UBsbNZ52vUhMwuf3X0+GinfST59yDQz51xutP/YaOyW3uSeDgKJQ4v8SCkMImEKZyYZCLHX/DGlO/sE3xMYViZEUpqAGdCUjqUr0hI4BnKOt3EZ5dGWTMb9RNrAN3JoJNY7KdHUtTCkMCG5QHsRgFa+5x3egSRAsmxpuDr6KxC68KtHOh5VMF0q/MwkYmSmAY6hgLkQhbjzY1rQ8Yic64xfSS2+rT59O9HaL+9YFajdY83APNUH7w2DK2PxlekNBtNOTJdAsBLtmKgko4uMj64jHIC11JWFA9FFsBYr5p4NGshsruRPlrx+Y63qG+z/N+cybV14F0E4yZD7soXdFZyw/FAepKTdvH9svmXlB4FEVhZmacM8gkzRyCWkU5WpHrU9CWIAIZt7G6T9Zs5ACht8pzqGuy9pzKqN8Aqp7oZGBKe+IH73qecXOVcuwSGSyrReC+AajiQ8J7RBMs+IXfajvc73KUB16DXMpOfBjpHzewu/2WNEHUjC8lzKPgC03TfU5N/KC827/G0G/BUZmnQ/FlnBX242HeS</stringProp>
                </elementProp>
                <elementProp name="x-amz-date" elementType="Header">
                  <stringProp name="Header.name">x-amz-date</stringProp>
                  <stringProp name="Header.value">20220823T074534Z</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  listMemes {\n    items {\n      id\n      meamID\n      memeInputAddClassName\n      memePreviewClassName\n      memelistClassName\n      serialNumber\n      status\n    }\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query starCategory {\n  likerSlaGetStarCategory(userID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;)\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  likerSlaGetPostData(userID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, userGroupID: \&quot;\&quot;, profileUserID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, offset: \&quot;0\&quot;, isPublic: false, categoryID: \&quot;\&quot;, groupPrivacy: \&quot;\&quot;)\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">AWS4-HMAC-SHA256 Credential=ASIAY23MY4J6LURUZLIA/20220823/us-east-1/appsync/aws4_request, SignedHeaders=content-type;host;x-amz-date;x-amz-security-token;x-amz-user-agent, Signature=26243f5b695ab93febc3f0ab50ec50806949ad2727a06b9d81eb8d8f7f60743d</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Amz-Security-Token" elementType="Header">
                  <stringProp name="Header.name">X-Amz-Security-Token</stringProp>
                  <stringProp name="Header.value">IQoJb3JpZ2luX2VjEBAaCXVzLWVhc3QtMSJGMEQCIHa+L91dXZpQQ+00qokgTgvaPlrat5xnX/3dg1jFOeBoAiAHkHvJ1sYiE11HxHVo2HbtIscnmNpX3FdM+pKmqjvmACrNBAiJ//////////8BEAMaDDYwNzQyOTEyNDczMiIMDJaY1Tbcnr3KAnP8KqEEwH3UsaVu5BQZEOkhqNIen5rsxaLaNq08SaakAoAOJxWQ+46sJwGzZDQUPchRYGcw55Dgv1g6Mr+2x/PIlx9JCrrcLruFP9rQbcsPubm9aQZeyWL6m8bMlU4WV3BIAiJ2d4pDeM7pNB2UQ3Vh8xbdzk01IiNpfg3HT7OT1PF/NmIwOrDF1whGJHVWFnvcHGUlAGNK8brwCK9BGhRKxlQeP9s/FgdX+mQxuUGEmAzocjTBBvM50hcWXpCneMK1SgnvbUzY3hXtFhmDg++BtsxukhTS9r6s94JaZWu8Of+JGg8/oTYPyLtYZFPbmxRJJXB3Q9jrAcldZX88aH1Ji5EXcqWKnNn4Q+v91JnbGZL9UmYJpora7TYDKvsQEKfXeYo2cEnzwCGDVUXWRKlpR1kx/BiwPUbMXTXucRcEX9Y1KAr19P67DlcxTMOA5QNKzDsgeyFgCsCZe/nT2Ea1kP5MdvD8mAPGaxbXeIoIBs/hsxsVDI5Kr1RUA4CpS6FlkB50kLzw5nMjDH7eRyK8rW3yndHxS8Xgx0UBsbNZ52vUhMwuf3X0+GinfST59yDQz51xutP/YaOyW3uSeDgKJQ4v8SCkMImEKZyYZCLHX/DGlO/sE3xMYViZEUpqAGdCUjqUr0hI4BnKOt3EZ5dGWTMb9RNrAN3JoJNY7KdHUtTCkMCG5QHsRgFa+5x3egSRAsmxpuDr6KxC68KtHOh5VMF0q/MwkYmSmAY6hgLkQhbjzY1rQ8Yic64xfSS2+rT59O9HaL+9YFajdY83APNUH7w2DK2PxlekNBtNOTJdAsBLtmKgko4uMj64jHIC11JWFA9FFsBYr5p4NGshsruRPlrx+Y63qG+z/N+cybV14F0E4yZD7soXdFZyw/FAepKTdvH9svmXlB4FEVhZmacM8gkzRyCWkU5WpHrU9CWIAIZt7G6T9Zs5ACht8pzqGuy9pzKqN8Aqp7oZGBKe+IH73qecXOVcuwSGSyrReC+AajiQ8J7RBMs+IXfajvc73KUB16DXMpOfBjpHzewu/2WNEHUjC8lzKPgC03TfU5N/KC827/G0G/BUZmnQ/FlnBX242HeS</stringProp>
                </elementProp>
                <elementProp name="x-amz-date" elementType="Header">
                  <stringProp name="Header.name">x-amz-date</stringProp>
                  <stringProp name="Header.value">20220823T074534Z</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  likerSlaGetPostData(userID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, userGroupID: \&quot;\&quot;, profileUserID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, offset: \&quot;5\&quot;, isPublic: false, categoryID: \&quot;\&quot;, groupPrivacy: \&quot;\&quot;)\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">AWS4-HMAC-SHA256 Credential=ASIAY23MY4J6LURUZLIA/20220823/us-east-1/appsync/aws4_request, SignedHeaders=content-type;host;x-amz-date;x-amz-security-token;x-amz-user-agent, Signature=5ce51f4d951e03f2996cacd161716ee14b0dd5a7e2c9f70a3fdc3691c43307fb</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Amz-Security-Token" elementType="Header">
                  <stringProp name="Header.name">X-Amz-Security-Token</stringProp>
                  <stringProp name="Header.value">IQoJb3JpZ2luX2VjEBAaCXVzLWVhc3QtMSJGMEQCIHa+L91dXZpQQ+00qokgTgvaPlrat5xnX/3dg1jFOeBoAiAHkHvJ1sYiE11HxHVo2HbtIscnmNpX3FdM+pKmqjvmACrNBAiJ//////////8BEAMaDDYwNzQyOTEyNDczMiIMDJaY1Tbcnr3KAnP8KqEEwH3UsaVu5BQZEOkhqNIen5rsxaLaNq08SaakAoAOJxWQ+46sJwGzZDQUPchRYGcw55Dgv1g6Mr+2x/PIlx9JCrrcLruFP9rQbcsPubm9aQZeyWL6m8bMlU4WV3BIAiJ2d4pDeM7pNB2UQ3Vh8xbdzk01IiNpfg3HT7OT1PF/NmIwOrDF1whGJHVWFnvcHGUlAGNK8brwCK9BGhRKxlQeP9s/FgdX+mQxuUGEmAzocjTBBvM50hcWXpCneMK1SgnvbUzY3hXtFhmDg++BtsxukhTS9r6s94JaZWu8Of+JGg8/oTYPyLtYZFPbmxRJJXB3Q9jrAcldZX88aH1Ji5EXcqWKnNn4Q+v91JnbGZL9UmYJpora7TYDKvsQEKfXeYo2cEnzwCGDVUXWRKlpR1kx/BiwPUbMXTXucRcEX9Y1KAr19P67DlcxTMOA5QNKzDsgeyFgCsCZe/nT2Ea1kP5MdvD8mAPGaxbXeIoIBs/hsxsVDI5Kr1RUA4CpS6FlkB50kLzw5nMjDH7eRyK8rW3yndHxS8Xgx0UBsbNZ52vUhMwuf3X0+GinfST59yDQz51xutP/YaOyW3uSeDgKJQ4v8SCkMImEKZyYZCLHX/DGlO/sE3xMYViZEUpqAGdCUjqUr0hI4BnKOt3EZ5dGWTMb9RNrAN3JoJNY7KdHUtTCkMCG5QHsRgFa+5x3egSRAsmxpuDr6KxC68KtHOh5VMF0q/MwkYmSmAY6hgLkQhbjzY1rQ8Yic64xfSS2+rT59O9HaL+9YFajdY83APNUH7w2DK2PxlekNBtNOTJdAsBLtmKgko4uMj64jHIC11JWFA9FFsBYr5p4NGshsruRPlrx+Y63qG+z/N+cybV14F0E4yZD7soXdFZyw/FAepKTdvH9svmXlB4FEVhZmacM8gkzRyCWkU5WpHrU9CWIAIZt7G6T9Zs5ACht8pzqGuy9pzKqN8Aqp7oZGBKe+IH73qecXOVcuwSGSyrReC+AajiQ8J7RBMs+IXfajvc73KUB16DXMpOfBjpHzewu/2WNEHUjC8lzKPgC03TfU5N/KC827/G0G/BUZmnQ/FlnBX242HeS</stringProp>
                </elementProp>
                <elementProp name="x-amz-date" elementType="Header">
                  <stringProp name="Header.name">x-amz-date</stringProp>
                  <stringProp name="Header.value">20220823T074536Z</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  likerslaGetFollowerList(userID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, loginUserID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, limit: \&quot;100\&quot;)\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  likerslaGetFollowingList(userID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, loginUserID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, limit: \&quot;100\&quot;)\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  likerslaGetFreiendList(userID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, loginUserID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, limit: \&quot;10\&quot;)\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery2 {\n  pictureByTime(sortDirection: DESC, userID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, filter: {album: {eq: profilePhotos}}) {\n    nextToken\n    items {\n      id\n      createdAt\n      imagekey\n    }\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  searchPictureMetas(sort: {direction: desc, field: createdAt}, filter: {postID: {exists: true}, postCommentID: {exists: false}, userGroupID: {exists: false}, userID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}}, limit: 10) {\n    items {\n      id\n      postID\n      imagekey\n      type\n      post {\n        id\n        videoUploadStatus\n        postContentType\n      }\n      videoKey\n      album\n    }\n    total\n    nextToken\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery2 {\n  pictureByTime(sortDirection: DESC, userID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, filter: {album: {eq: coverPhoto}}) {\n    nextToken\n    items {\n      id\n      createdAt\n      imagekey\n    }\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery2 {\n  pictureByTime(sortDirection: DESC, userID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, filter: {album: {eq: profilePhotos}}) {\n    nextToken\n    items {\n      id\n      createdAt\n      imagekey\n    }\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  likerSlaGetPostData(userID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, userGroupID: \&quot;\&quot;, profileUserID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, offset: \&quot;0\&quot;, isPublic: false, categoryID: \&quot;99c15d04-cbe0-4714-88d5-30493adb955e\&quot;, groupPrivacy: \&quot;\&quot;)\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">AWS4-HMAC-SHA256 Credential=ASIAY23MY4J6LURUZLIA/20220823/us-east-1/appsync/aws4_request, SignedHeaders=content-type;host;x-amz-date;x-amz-security-token;x-amz-user-agent, Signature=5a51c5490fb9761a1e937b302aaa2f1d722a1ebe936fe411a628e67dcf5ad6b5</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Amz-Security-Token" elementType="Header">
                  <stringProp name="Header.name">X-Amz-Security-Token</stringProp>
                  <stringProp name="Header.value">IQoJb3JpZ2luX2VjEBAaCXVzLWVhc3QtMSJGMEQCIHa+L91dXZpQQ+00qokgTgvaPlrat5xnX/3dg1jFOeBoAiAHkHvJ1sYiE11HxHVo2HbtIscnmNpX3FdM+pKmqjvmACrNBAiJ//////////8BEAMaDDYwNzQyOTEyNDczMiIMDJaY1Tbcnr3KAnP8KqEEwH3UsaVu5BQZEOkhqNIen5rsxaLaNq08SaakAoAOJxWQ+46sJwGzZDQUPchRYGcw55Dgv1g6Mr+2x/PIlx9JCrrcLruFP9rQbcsPubm9aQZeyWL6m8bMlU4WV3BIAiJ2d4pDeM7pNB2UQ3Vh8xbdzk01IiNpfg3HT7OT1PF/NmIwOrDF1whGJHVWFnvcHGUlAGNK8brwCK9BGhRKxlQeP9s/FgdX+mQxuUGEmAzocjTBBvM50hcWXpCneMK1SgnvbUzY3hXtFhmDg++BtsxukhTS9r6s94JaZWu8Of+JGg8/oTYPyLtYZFPbmxRJJXB3Q9jrAcldZX88aH1Ji5EXcqWKnNn4Q+v91JnbGZL9UmYJpora7TYDKvsQEKfXeYo2cEnzwCGDVUXWRKlpR1kx/BiwPUbMXTXucRcEX9Y1KAr19P67DlcxTMOA5QNKzDsgeyFgCsCZe/nT2Ea1kP5MdvD8mAPGaxbXeIoIBs/hsxsVDI5Kr1RUA4CpS6FlkB50kLzw5nMjDH7eRyK8rW3yndHxS8Xgx0UBsbNZ52vUhMwuf3X0+GinfST59yDQz51xutP/YaOyW3uSeDgKJQ4v8SCkMImEKZyYZCLHX/DGlO/sE3xMYViZEUpqAGdCUjqUr0hI4BnKOt3EZ5dGWTMb9RNrAN3JoJNY7KdHUtTCkMCG5QHsRgFa+5x3egSRAsmxpuDr6KxC68KtHOh5VMF0q/MwkYmSmAY6hgLkQhbjzY1rQ8Yic64xfSS2+rT59O9HaL+9YFajdY83APNUH7w2DK2PxlekNBtNOTJdAsBLtmKgko4uMj64jHIC11JWFA9FFsBYr5p4NGshsruRPlrx+Y63qG+z/N+cybV14F0E4yZD7soXdFZyw/FAepKTdvH9svmXlB4FEVhZmacM8gkzRyCWkU5WpHrU9CWIAIZt7G6T9Zs5ACht8pzqGuy9pzKqN8Aqp7oZGBKe+IH73qecXOVcuwSGSyrReC+AajiQ8J7RBMs+IXfajvc73KUB16DXMpOfBjpHzewu/2WNEHUjC8lzKPgC03TfU5N/KC827/G0G/BUZmnQ/FlnBX242HeS</stringProp>
                </elementProp>
                <elementProp name="x-amz-date" elementType="Header">
                  <stringProp name="Header.name">x-amz-date</stringProp>
                  <stringProp name="Header.value">20220823T074557Z</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  listMemes {\n    items {\n      id\n      meamID\n      memeInputAddClassName\n      memePreviewClassName\n      memelistClassName\n      serialNumber\n      status\n    }\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  likerSlaGetPostData(userID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, userGroupID: \&quot;\&quot;, profileUserID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, offset: \&quot;0\&quot;, isPublic: false, categoryID: \&quot;\&quot;, groupPrivacy: \&quot;\&quot;)\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">AWS4-HMAC-SHA256 Credential=ASIAY23MY4J6LURUZLIA/20220823/us-east-1/appsync/aws4_request, SignedHeaders=content-type;host;x-amz-date;x-amz-security-token;x-amz-user-agent, Signature=b2bc4ab9059a4c2c28240a7afbfaaf11e3b63bfef089b121f3525b3f57f1994b</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Amz-Security-Token" elementType="Header">
                  <stringProp name="Header.name">X-Amz-Security-Token</stringProp>
                  <stringProp name="Header.value">IQoJb3JpZ2luX2VjEBAaCXVzLWVhc3QtMSJGMEQCIHa+L91dXZpQQ+00qokgTgvaPlrat5xnX/3dg1jFOeBoAiAHkHvJ1sYiE11HxHVo2HbtIscnmNpX3FdM+pKmqjvmACrNBAiJ//////////8BEAMaDDYwNzQyOTEyNDczMiIMDJaY1Tbcnr3KAnP8KqEEwH3UsaVu5BQZEOkhqNIen5rsxaLaNq08SaakAoAOJxWQ+46sJwGzZDQUPchRYGcw55Dgv1g6Mr+2x/PIlx9JCrrcLruFP9rQbcsPubm9aQZeyWL6m8bMlU4WV3BIAiJ2d4pDeM7pNB2UQ3Vh8xbdzk01IiNpfg3HT7OT1PF/NmIwOrDF1whGJHVWFnvcHGUlAGNK8brwCK9BGhRKxlQeP9s/FgdX+mQxuUGEmAzocjTBBvM50hcWXpCneMK1SgnvbUzY3hXtFhmDg++BtsxukhTS9r6s94JaZWu8Of+JGg8/oTYPyLtYZFPbmxRJJXB3Q9jrAcldZX88aH1Ji5EXcqWKnNn4Q+v91JnbGZL9UmYJpora7TYDKvsQEKfXeYo2cEnzwCGDVUXWRKlpR1kx/BiwPUbMXTXucRcEX9Y1KAr19P67DlcxTMOA5QNKzDsgeyFgCsCZe/nT2Ea1kP5MdvD8mAPGaxbXeIoIBs/hsxsVDI5Kr1RUA4CpS6FlkB50kLzw5nMjDH7eRyK8rW3yndHxS8Xgx0UBsbNZ52vUhMwuf3X0+GinfST59yDQz51xutP/YaOyW3uSeDgKJQ4v8SCkMImEKZyYZCLHX/DGlO/sE3xMYViZEUpqAGdCUjqUr0hI4BnKOt3EZ5dGWTMb9RNrAN3JoJNY7KdHUtTCkMCG5QHsRgFa+5x3egSRAsmxpuDr6KxC68KtHOh5VMF0q/MwkYmSmAY6hgLkQhbjzY1rQ8Yic64xfSS2+rT59O9HaL+9YFajdY83APNUH7w2DK2PxlekNBtNOTJdAsBLtmKgko4uMj64jHIC11JWFA9FFsBYr5p4NGshsruRPlrx+Y63qG+z/N+cybV14F0E4yZD7soXdFZyw/FAepKTdvH9svmXlB4FEVhZmacM8gkzRyCWkU5WpHrU9CWIAIZt7G6T9Zs5ACht8pzqGuy9pzKqN8Aqp7oZGBKe+IH73qecXOVcuwSGSyrReC+AajiQ8J7RBMs+IXfajvc73KUB16DXMpOfBjpHzewu/2WNEHUjC8lzKPgC03TfU5N/KC827/G0G/BUZmnQ/FlnBX242HeS</stringProp>
                </elementProp>
                <elementProp name="x-amz-date" elementType="Header">
                  <stringProp name="Header.name">x-amz-date</stringProp>
                  <stringProp name="Header.value">20220823T074559Z</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  likerSlaGetPostData(userID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, userGroupID: \&quot;\&quot;, profileUserID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, offset: \&quot;5\&quot;, isPublic: false, categoryID: \&quot;\&quot;, groupPrivacy: \&quot;\&quot;)\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">AWS4-HMAC-SHA256 Credential=ASIAY23MY4J6LURUZLIA/20220823/us-east-1/appsync/aws4_request, SignedHeaders=content-type;host;x-amz-date;x-amz-security-token;x-amz-user-agent, Signature=29dc81244f887826dfe6dc1ed592cb51e420cf4a4a5b4cd4fe019062ba64a1f9</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Amz-Security-Token" elementType="Header">
                  <stringProp name="Header.name">X-Amz-Security-Token</stringProp>
                  <stringProp name="Header.value">IQoJb3JpZ2luX2VjEBAaCXVzLWVhc3QtMSJGMEQCIHa+L91dXZpQQ+00qokgTgvaPlrat5xnX/3dg1jFOeBoAiAHkHvJ1sYiE11HxHVo2HbtIscnmNpX3FdM+pKmqjvmACrNBAiJ//////////8BEAMaDDYwNzQyOTEyNDczMiIMDJaY1Tbcnr3KAnP8KqEEwH3UsaVu5BQZEOkhqNIen5rsxaLaNq08SaakAoAOJxWQ+46sJwGzZDQUPchRYGcw55Dgv1g6Mr+2x/PIlx9JCrrcLruFP9rQbcsPubm9aQZeyWL6m8bMlU4WV3BIAiJ2d4pDeM7pNB2UQ3Vh8xbdzk01IiNpfg3HT7OT1PF/NmIwOrDF1whGJHVWFnvcHGUlAGNK8brwCK9BGhRKxlQeP9s/FgdX+mQxuUGEmAzocjTBBvM50hcWXpCneMK1SgnvbUzY3hXtFhmDg++BtsxukhTS9r6s94JaZWu8Of+JGg8/oTYPyLtYZFPbmxRJJXB3Q9jrAcldZX88aH1Ji5EXcqWKnNn4Q+v91JnbGZL9UmYJpora7TYDKvsQEKfXeYo2cEnzwCGDVUXWRKlpR1kx/BiwPUbMXTXucRcEX9Y1KAr19P67DlcxTMOA5QNKzDsgeyFgCsCZe/nT2Ea1kP5MdvD8mAPGaxbXeIoIBs/hsxsVDI5Kr1RUA4CpS6FlkB50kLzw5nMjDH7eRyK8rW3yndHxS8Xgx0UBsbNZ52vUhMwuf3X0+GinfST59yDQz51xutP/YaOyW3uSeDgKJQ4v8SCkMImEKZyYZCLHX/DGlO/sE3xMYViZEUpqAGdCUjqUr0hI4BnKOt3EZ5dGWTMb9RNrAN3JoJNY7KdHUtTCkMCG5QHsRgFa+5x3egSRAsmxpuDr6KxC68KtHOh5VMF0q/MwkYmSmAY6hgLkQhbjzY1rQ8Yic64xfSS2+rT59O9HaL+9YFajdY83APNUH7w2DK2PxlekNBtNOTJdAsBLtmKgko4uMj64jHIC11JWFA9FFsBYr5p4NGshsruRPlrx+Y63qG+z/N+cybV14F0E4yZD7soXdFZyw/FAepKTdvH9svmXlB4FEVhZmacM8gkzRyCWkU5WpHrU9CWIAIZt7G6T9Zs5ACht8pzqGuy9pzKqN8Aqp7oZGBKe+IH73qecXOVcuwSGSyrReC+AajiQ8J7RBMs+IXfajvc73KUB16DXMpOfBjpHzewu/2WNEHUjC8lzKPgC03TfU5N/KC827/G0G/BUZmnQ/FlnBX242HeS</stringProp>
                </elementProp>
                <elementProp name="x-amz-date" elementType="Header">
                  <stringProp name="Header.name">x-amz-date</stringProp>
                  <stringProp name="Header.value">20220823T074600Z</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  getUser(id: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;) {\n    email\n    emailVisiblity\n    dobDay\n    dobMonth\n    dobYear\n    dobYeayVisiblity\n    dobMonthVisiblity\n    dobDayVisiblity\n    phoneHome\n    phoneHomeVisibilty\n    phoneOffice\n    phoneOfficeVisibilty\n    phoneHomeCountryCode\n    phoneOfficeCountryCode\n    country\n    state\n    homestateCountry\n    homestateCity\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  byUserEdication(userID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;) {\n    items {\n      id\n      eduName\n      insType\n      visiblity\n      gpa\n      fieldOfStudy\n      degree\n      fromYear\n      fromMonth\n      toYear\n      toMonth\n      summary\n      instituteHelper {\n        id\n        instituteName\n        location\n        type\n        url\n      }\n    }\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  byUserProfessionalExperience(userID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;) {\n    items {\n      id\n      userID\n      designation\n      isWorking\n      visiblity\n      summery\n      fromYear\n      fromMonth\n      toYear\n      toMonth\n      createdAt\n      instituteHelper {\n        id\n        instituteName\n        type\n        location\n        url\n      }\n    }\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  byUserHonorsAwards(userID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;) {\n    items {\n      id\n      userID\n      awardName\n      visiblity\n      year\n      month\n      summary\n      createdAt\n      instituteHelper {\n        id\n        instituteName\n        type\n        location\n        url\n      }\n    }\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  byUserCertificate(userID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;) {\n    items {\n      id\n      instID\n      userID\n      visiblity\n      certificateTitle\n      certificateUrl\n      certificteNo\n      toDate\n      s3Key\n      isExpire\n      fromDdate\n      expireDate\n      createdAt\n      instituteHelper {\n        id\n        instituteName\n        location\n        type\n        url\n        createdAt\n      }\n    }\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query GetUser($id: ID!) {\n  getUser(id: $id) {\n    id\n    userName\n    owner\n    firstName\n    lastName\n    isPreSignup\n    emailNotification\n    recentCategories\n    profileLinkName\n    usertourChatboxOnOff\n    usertourFeedSearchBox\n    usertourFeedCategory\n    usertourPostLike\n    usertourPostCategory\n    usertourPostTextArea\n    usertourProgressBar\n    usertourCommentLike\n    usertourAudience\n    usertourAddFriend\n    usertourFollowing\n    totalGoldStars\n    totalSilverStars\n    gender\n    country\n    state\n    isAccountVerified\n    isActive\n    defaultFeed\n    choiceMeta\n    postCategoryID\n    authProvider\n    whoCanAccessWall\n    whoCanAccessPhotos\n    whoCanSendMessage\n    whoCanSeeProfile\n    isChattBoxActive\n    displyHomestate\n    displyLiveIn\n    homestate\n    homestateCity\n    hasAcceptedCockie\n    homestateCountry\n    intro\n    isFoundingMember\n    userStoryAbout\n    userStoryAboutVisibilty\n    userStoryEarlyLife\n    userStoryEarlyLifeVisibilty\n    userStoryFamily\n    userStoryFamilyVisibilty\n    userStoryCareer\n    userStoryCareerVisibilty\n    userStoryBackground\n    userStoryBackgroundVisibilty\n    userStoryChildHood\n    userStoryChildHoodVisibilty\n    userStoryPersonalLife\n    userStoryPersonalVisibilty\n    websiteUrl\n    isLikerSupport\n    isMasterAccount\n    googleUrl\n    googleUrlVisibilty\n    websiteUrlVisibilty\n    facebookUrl\n    facebookUrlVisibilty\n    twitterUrl\n    twitterUrlVisibilty\n    linkedInUrl\n    linkedInUrlVisibilty\n    instagramUrl\n    instagramUrlVisibilty\n    skypeUrl\n    skypeUrlVisibilty\n    pinterestUrl\n    pinterestUrlVisibilty\n    youtubeUrl\n    youtubeUrlVisibilty\n    forceSecurityCheckUp\n    pushNotification\n    forceTFA\n    isCognitoConfirmed\n    activeFeedFilterType\n    headline\n    isExisting\n    isTFAActive\n    isVerified\n    createdAt\n    coverPhotoActive\n    profilePhotoActive\n    isExparienceAdded\n    isEducationAdded\n    isFriendInvitationDone\n    totalLikes\n    isBlockByAdmin\n    totalFollowers\n    totalFollowing\n    totalFriends\n    totalStars\n    totalComments\n    totalPhotos\n    isPreSignup\n    isTopCommenter\n    topCommentor {\n      items {\n        userID\n      }\n    }\n    UserSearchHistories {\n      items {\n        id\n        userID\n        searchedIteam\n        isUser\n        searchedIteamOrder\n        createdAt\n      }\n      nextToken\n    }\n    userFilter {\n      items {\n        id\n        userID\n        isSingleCategory\n        isMyFavorit\n        isEverythingExcept\n        isFeed\n        isStarContributors\n        catID\n        catName\n        subCatID\n        subCatName\n        createdAt\n      }\n      nextToken\n    }\n  }\n}\n&quot;,&quot;variables&quot;:{&quot;id&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  getCountry(id: \&quot;7cf82988-577d-4dbd-aefa-79459efe5400\&quot;) {\n    id\n    countryName\n    stateInfo {\n      items {\n        id\n        stateName\n      }\n    }\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  getCountry(id: \&quot;null\&quot;) {\n    id\n    countryName\n    stateInfo {\n      items {\n        id\n        stateName\n      }\n    }\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  listCountrys {\n    items {\n      countryName\n      countryPhoneCode\n      countryShortCode\n      id\n      preID\n    }\n    nextToken\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  listCountrys(nextToken: \&quot;eyJ2ZXJzaW9uIjoyLCJ0b2tlbiI6IkFRSUNBSGg5OUIvN3BjWU41eE96NDZJMW5GeGM4WUNGeG1acmFOMUpqajZLWkFDQ25BSHQ5bzBXSEJ5M1dkaXN5STBmSzBsVUFBQUNJVENDQWgwR0NTcUdTSWIzRFFFSEJxQ0NBZzR3Z2dJS0FnRUFNSUlDQXdZSktvWklodmNOQVFjQk1CNEdDV0NHU0FGbEF3UUJMakFSQkF6ck44ZHYrYUo1Sm8wdWcxNENBUkNBZ2dIVVhHTHhiVkhhdW92dGx1SE5MM0pKZjBad1ZZbnIvdmRFYTZ2aFFVVjdDNnZrNUZ5YzEyWWVNL3dCaTVZYWlYaWlLM1NEbnZvS05ybEd4L0h2cFNFNk0wNlFZaDc5alloSzlFcDgza2Y1TTh5MW5ac080dXM0c0tlWFR5ejcrZmlzY0d6Z092STdMYXVHTGpEZ0J5dFNYNW1NeGQzYWhjY0h4V1BUa0pEZWZEd2JhMkR1TVNVWGtGOVBWUWVPcWU3dDljVzlyL1pWclhZeW1JU1NXTmpGUHluanFBcDBIZ2MyZmdXU3dUL2xmVFp5cTZQaVAycWFEb0JicTBuV1dxc2Niam1BSUpJUmJoOFRoUS9VcW02VGFndmpDMkdtMFY1SkZ3WjRtRHJ1TXh1bFowOFhuWWN1NldRam9PMlFKWThJMklyYUhMcGxTZXBRU3lTRUNlM3p5RjVMWTFWcVdVcExlRUROZU1DSXVjNVI3V2hCaStkM1UreDlyYjlhL1ZrRUE0VXgwUXlmdy9xRFNwK3JvYnRSc0YzajE5YnVwMjF1V0JIVGpFZzZqVjdKc1RvdUZUOGNqN2JBVE54aHArN1AwNHBjajBubzBvUEFUM3ZSTFBCa0RQSE4xU1M1d1FaT1luWkdQQ1VVa0xiaHFuZXBHT3gwVEpiRmpIZ3EvTlFmdHlQazJoVXA0K1M3UGVGMHRPWEduaXBNeVVtZHJwTHhrTU9hOW5UY1hON2VKRGxubUkxOXJVK2VuajNIWFZMcGNnS0NHNUlEWnNyeWpKNjB1WFZvRWJPUjVYd1dwT2xxVkJhQzdENVJ0SklKMjZmdyJ9\&quot;) {\n    items {\n      countryName\n      countryPhoneCode\n      countryShortCode\n      id\n      preID\n    }\n    nextToken\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  listCountrys(nextToken: \&quot;eyJ2ZXJzaW9uIjoyLCJ0b2tlbiI6IkFRSUNBSGg5OUIvN3BjWU41eE96NDZJMW5GeGM4WUNGeG1acmFOMUpqajZLWkFDQ25BR0lYbG5HWmFIY0hXM1FodzBuR0lpbUFBQUNJVENDQWgwR0NTcUdTSWIzRFFFSEJxQ0NBZzR3Z2dJS0FnRUFNSUlDQXdZSktvWklodmNOQVFjQk1CNEdDV0NHU0FGbEF3UUJMakFSQkF3ZDRwQlJEWW5nWnNZOUd6a0NBUkNBZ2dIVWpUY05MWUkvekM3aGYvQUtrdmFNVVZqSTZrV0puT29XRFlrdUFTWTE4ZnVmSDNxVEF0UVkyNGlCdERtaHRWNmlwQ0FkN2NLcUlpUFNRcDlsUDEySEZCUERBd2QrZndkMWdNdjdrdENRQmgvVVpGYzUrN0FBcXIrWWRLSzBxOE4rWUJCbkZ5b00yc3d1b3RJbHpBemxGQ3J4S2ZQUlhvMVZ1REFCSnAyRlkrQjB6SGZVWWt4Y1RJcGo2emhvUDRtZXFuRjBkbjhLS25sVFFNckFpanRiWmh3VFM1L3paWUhHcGVTRjBlYU1KV1A4QTJaNjlNWDNnRzFWK2IzN1pIM214L1hiTHVtNXlWQmYxbjZ1QjFDUTZKajMrVWk0NFdIZUtITUpyZVREWnh1eFpOY3g4T0d6K0VuT2Y5UXlMa0lKRWFUNGFRb2tDb2pEU3R2NHBIUHRsSnI2anBJTzFsUjIrbUtvQ3hTNmNkdjU2RFo3TzR5RWxiVkN3UWhCQzRoNjJFOVplRTNoNkFDVFZ1WDRTVko1dFNOTGN6aC9ZWUNDRzBkYklYVUlNb2FYY0YzZzZkYmx2bVdQOWVqcm9FL1o1amZOMmloVTZoM0x1WmFUSmR6Q2tRUkNTNVVtRHVwNmZSNnUvMlZHRXNrVkRveURhUHpjRE8zQ1FnUnB1NENEa1NPZjl0dTVDVTBWZ3YxTVhwL0JMQnl2TkF0WWxCQWRsQjU0aUZFT1R4Q0kwaVovMWdacm43Z3ZINEdpMHIxWm5jVkVKZFE4eHFxOTAwM2hieFh1bDN1SkE2M3JFZ2lUSDY0blJWQUQvLytaMzk4UyJ9\&quot;) {\n    items {\n      countryName\n      countryPhoneCode\n      countryShortCode\n      id\n      preID\n    }\n    nextToken\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  getState(id: \&quot;null\&quot;) {\n    id\n    stateName\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  getCountry(id: \&quot;7cf82988-577d-4dbd-aefa-79459efe5400\&quot;) {\n    id\n    countryName\n    stateInfo {\n      items {\n        id\n        stateName\n      }\n    }\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  getCountry(id: \&quot;null\&quot;) {\n    id\n    countryName\n    stateInfo {\n      items {\n        id\n        stateName\n      }\n    }\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  likerslaGetFollowerList(userID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, loginUserID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, limit: \&quot;100\&quot;)\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;{\n  notificationByUser(sortDirection: DESC, ownerID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, limit: 50) {\n    items {\n      id\n      cantPostDuration\n      ownerID\n      actionCreator\n      postID\n      categoryID\n      commentID\n      comment {\n        id\n        totalLikes\n        totalRiply\n        commentUserInfo {\n          id\n          userName\n          firstName\n          lastName\n        }\n      }\n      createdAt\n      groupID\n      userGroup {\n        groupName\n        meAsGroupMember(userID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}, filter: {status: {eq: \&quot;Invited\&quot;}}) {\n          items {\n            id\n            status\n          }\n        }\n      }\n      isDetailsSeen\n      isSeen\n      notificationType\n      replyID\n      rankPercent\n      wholeNetwork\n      starBadge\n      UserInfo {\n        id\n        firstName\n        lastName\n        userName\n        profilePhotoActive\n        totalGoldStars\n        myFollowingStatus(userID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n          items {\n            followingUserID\n            id\n            userID\n          }\n        }\n        totalSilverStars\n      }\n      group {\n        groupName\n      }\n      post {\n        totalLikes\n        totalComments\n        totalShares\n        sharePostMeta {\n          id\n          oldPostID\n          sharedByUserID\n          createdAt\n          updatedAt\n          owner\n        }\n        user {\n          id\n          firstName\n          lastName\n          userName\n        }\n      }\n    }\n    nextToken\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;mutation MyMutation {\n  LikerSLAUpdateNoticfication(loginUserID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;)\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;{\n  notificationByUser(sortDirection: DESC, ownerID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, limit: 50) {\n    items {\n      id\n      cantPostDuration\n      ownerID\n      actionCreator\n      postID\n      categoryID\n      commentID\n      comment {\n        id\n        totalLikes\n        totalRiply\n        commentUserInfo {\n          id\n          userName\n          firstName\n          lastName\n        }\n      }\n      createdAt\n      groupID\n      userGroup {\n        groupName\n        meAsGroupMember(userID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}, filter: {status: {eq: \&quot;Invited\&quot;}}) {\n          items {\n            id\n            status\n          }\n        }\n      }\n      isDetailsSeen\n      isSeen\n      notificationType\n      replyID\n      rankPercent\n      wholeNetwork\n      starBadge\n      UserInfo {\n        id\n        firstName\n        lastName\n        userName\n        profilePhotoActive\n        totalGoldStars\n        myFollowingStatus(userID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n          items {\n            followingUserID\n            id\n            userID\n          }\n        }\n        totalSilverStars\n      }\n      group {\n        groupName\n      }\n      post {\n        totalLikes\n        totalComments\n        totalShares\n        sharePostMeta {\n          id\n          oldPostID\n          sharedByUserID\n          createdAt\n          updatedAt\n          owner\n        }\n        user {\n          id\n          firstName\n          lastName\n          userName\n        }\n      }\n    }\n    nextToken\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;mutation MyMutation {\n  LikerSLAUpdateNoticfication(loginUserID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;)\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  likerslaGetFreiendList(userID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, loginUserID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, limit: \&quot;10\&quot;)\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://q7y8ibn334.execute-api.us-east-1.amazonaws.com/prodlive/getfilter" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;queryString&quot;:{&quot;userID&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;,&quot;filter_type&quot;:null}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">prodlive/getfilter</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">AWS4-HMAC-SHA256 Credential=ASIAY23MY4J6LURUZLIA/20220823/us-east-1/execute-api/aws4_request, SignedHeaders=content-type;host;x-amz-date;x-amz-security-token, Signature=7ded5229612541769ceb8af6509b79f143f844924f07fa8bae8757b9ae579cac</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Amz-Security-Token" elementType="Header">
                  <stringProp name="Header.name">X-Amz-Security-Token</stringProp>
                  <stringProp name="Header.value">IQoJb3JpZ2luX2VjEBAaCXVzLWVhc3QtMSJGMEQCIHa+L91dXZpQQ+00qokgTgvaPlrat5xnX/3dg1jFOeBoAiAHkHvJ1sYiE11HxHVo2HbtIscnmNpX3FdM+pKmqjvmACrNBAiJ//////////8BEAMaDDYwNzQyOTEyNDczMiIMDJaY1Tbcnr3KAnP8KqEEwH3UsaVu5BQZEOkhqNIen5rsxaLaNq08SaakAoAOJxWQ+46sJwGzZDQUPchRYGcw55Dgv1g6Mr+2x/PIlx9JCrrcLruFP9rQbcsPubm9aQZeyWL6m8bMlU4WV3BIAiJ2d4pDeM7pNB2UQ3Vh8xbdzk01IiNpfg3HT7OT1PF/NmIwOrDF1whGJHVWFnvcHGUlAGNK8brwCK9BGhRKxlQeP9s/FgdX+mQxuUGEmAzocjTBBvM50hcWXpCneMK1SgnvbUzY3hXtFhmDg++BtsxukhTS9r6s94JaZWu8Of+JGg8/oTYPyLtYZFPbmxRJJXB3Q9jrAcldZX88aH1Ji5EXcqWKnNn4Q+v91JnbGZL9UmYJpora7TYDKvsQEKfXeYo2cEnzwCGDVUXWRKlpR1kx/BiwPUbMXTXucRcEX9Y1KAr19P67DlcxTMOA5QNKzDsgeyFgCsCZe/nT2Ea1kP5MdvD8mAPGaxbXeIoIBs/hsxsVDI5Kr1RUA4CpS6FlkB50kLzw5nMjDH7eRyK8rW3yndHxS8Xgx0UBsbNZ52vUhMwuf3X0+GinfST59yDQz51xutP/YaOyW3uSeDgKJQ4v8SCkMImEKZyYZCLHX/DGlO/sE3xMYViZEUpqAGdCUjqUr0hI4BnKOt3EZ5dGWTMb9RNrAN3JoJNY7KdHUtTCkMCG5QHsRgFa+5x3egSRAsmxpuDr6KxC68KtHOh5VMF0q/MwkYmSmAY6hgLkQhbjzY1rQ8Yic64xfSS2+rT59O9HaL+9YFajdY83APNUH7w2DK2PxlekNBtNOTJdAsBLtmKgko4uMj64jHIC11JWFA9FFsBYr5p4NGshsruRPlrx+Y63qG+z/N+cybV14F0E4yZD7soXdFZyw/FAepKTdvH9svmXlB4FEVhZmacM8gkzRyCWkU5WpHrU9CWIAIZt7G6T9Zs5ACht8pzqGuy9pzKqN8Aqp7oZGBKe+IH73qecXOVcuwSGSyrReC+AajiQ8J7RBMs+IXfajvc73KUB16DXMpOfBjpHzewu/2WNEHUjC8lzKPgC03TfU5N/KC827/G0G/BUZmnQ/FlnBX242HeS</stringProp>
                </elementProp>
                <elementProp name="x-amz-date" elementType="Header">
                  <stringProp name="Header.name">x-amz-date</stringProp>
                  <stringProp name="Header.value">20220823T074624Z</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  byUserNameUser(userName: \&quot;Ericf99acf2\&quot;) {\n    items {\n      blockMe(userID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n        items {\n          userID\n          ownerID\n          blockType\n        }\n      }\n      blockByMe(ownerID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n        items {\n          userID\n          blockType\n          ownerID\n        }\n      }\n      friends(filter: {friendUserID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}}) {\n        items {\n          id\n          userID\n          isActiveFriend\n          friendUserID\n          compositKey\n          isFollower\n          isPendingFriend\n          isSeenNotification\n        }\n      }\n      topCommentor {\n        items {\n          userID\n        }\n      }\n      myFollowingStatus(userID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n        items {\n          followingUserID\n          id\n          userID\n        }\n      }\n      pictureMeta(sortDirection: ASC) {\n        items {\n          imagekey\n          album\n          orderIndex\n          id\n        }\n      }\n      countryName {\n        countryName\n      }\n      stateName {\n        stateName\n      }\n      homestateCountryName {\n        countryName\n      }\n      homestateName {\n        stateName\n      }\n      userAsFriend(userID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n        items {\n          friendUserID\n          userID\n          userDetails {\n            firstName\n            lastName\n          }\n          id\n          isActiveFriend\n          isPendingFriend\n        }\n      }\n      meAsFriend(friendUserID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n        items {\n          friendUserID\n          userID\n          friendDetails {\n            firstName\n            lastName\n          }\n          id\n          isActiveFriend\n          isPendingFriend\n        }\n      }\n      country\n      id\n      phoneHome\n      phoneHomeCountryCode\n      phoneHomeVisibilty\n      phoneOffice\n      phoneOfficeCountryCode\n      userName\n      owner\n      firstName\n      lastName\n      recentCategories\n      profileLinkName\n      usertourChatboxOnOff\n      usertourFeedSearchBox\n      usertourFeedCategory\n      usertourPostLike\n      usertourPostCategory\n      usertourPostTextArea\n      usertourProgressBar\n      usertourCommentLike\n      usertourAudience\n      usertourAddFriend\n      usertourFollowing\n      totalGoldStars\n      totalSilverStars\n      gender\n      country\n      state\n      isAccountVerified\n      isActive\n      defaultFeed\n      choiceMeta\n      postCategoryID\n      authProvider\n      whoCanAccessWall\n      whoCanAccessPhotos\n      whoCanSendMessage\n      whoCanSeeProfile\n      isChattBoxActive\n      displyHomestate\n      displyLiveIn\n      homestate\n      homestateCity\n      hasAcceptedCockie\n      homestateCountry\n      intro\n      isBlockByAdmin\n      isFoundingMember\n      userStoryAbout\n      userStoryAboutVisibilty\n      userStoryEarlyLife\n      userStoryEarlyLifeVisibilty\n      userStoryFamily\n      userStoryFamilyVisibilty\n      userStoryCareer\n      userStoryCareerVisibilty\n      userStoryBackground\n      userStoryBackgroundVisibilty\n      userStoryChildHood\n      userStoryChildHoodVisibilty\n      userStoryPersonalLife\n      userStoryPersonalVisibilty\n      websiteUrl\n      isLikerSupport\n      isMasterAccount\n      googleUrl\n      googleUrlVisibilty\n      websiteUrlVisibilty\n      facebookUrl\n      facebookUrlVisibilty\n      twitterUrl\n      twitterUrlVisibilty\n      linkedInUrl\n      linkedInUrlVisibilty\n      instagramUrl\n      instagramUrlVisibilty\n      skypeUrl\n      skypeUrlVisibilty\n      pinterestUrl\n      pinterestUrlVisibilty\n      youtubeUrl\n      youtubeUrlVisibilty\n      forceSecurityCheckUp\n      pushNotification\n      forceTFA\n      isCognitoConfirmed\n      activeFeedFilterType\n      headline\n      isExisting\n      isTFAActive\n      isVerified\n      coverPhotoActive\n      profilePhotoActive\n      isExparienceAdded\n      isEducationAdded\n      isFriendInvitationDone\n      totalLikes\n      isBlockByAdmin\n      totalFollowers\n      totalFollowing\n      totalFriends\n      totalStars\n      totalComments\n      totalPhotos\n      isPreSignup\n      isTopCommenter\n      topCommentor {\n        items {\n          userID\n        }\n      }\n      UserSearchHistories {\n        nextToken\n      }\n      userGroups {\n        nextToken\n      }\n      userEducation {\n        nextToken\n      }\n      userProfessionalExperience {\n        nextToken\n      }\n      userCertificate {\n        nextToken\n      }\n      contributorSettingData {\n        nextToken\n      }\n      userHonorsAwards {\n        nextToken\n      }\n      posts {\n        nextToken\n      }\n      userFilter {\n        nextToken\n      }\n    }\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  listMemes {\n    items {\n      id\n      meamID\n      memeInputAddClassName\n      memePreviewClassName\n      memelistClassName\n      serialNumber\n      status\n    }\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query starCategory {\n  likerSlaGetStarCategory(userID: \&quot;8df53756-a689-495e-b54f-0c63f440229d\&quot;)\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  likerSlaGetPostData(userID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, userGroupID: \&quot;\&quot;, profileUserID: \&quot;8df53756-a689-495e-b54f-0c63f440229d\&quot;, offset: \&quot;0\&quot;, isPublic: false, categoryID: \&quot;\&quot;, groupPrivacy: \&quot;\&quot;)\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">AWS4-HMAC-SHA256 Credential=ASIAY23MY4J6LURUZLIA/20220823/us-east-1/appsync/aws4_request, SignedHeaders=content-type;host;x-amz-date;x-amz-security-token;x-amz-user-agent, Signature=c4ffdd1d7c5bba93c600aaa00c9752e17ce56d2f8ec4142eacfd19e53f511ce9</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Amz-Security-Token" elementType="Header">
                  <stringProp name="Header.name">X-Amz-Security-Token</stringProp>
                  <stringProp name="Header.value">IQoJb3JpZ2luX2VjEBAaCXVzLWVhc3QtMSJGMEQCIHa+L91dXZpQQ+00qokgTgvaPlrat5xnX/3dg1jFOeBoAiAHkHvJ1sYiE11HxHVo2HbtIscnmNpX3FdM+pKmqjvmACrNBAiJ//////////8BEAMaDDYwNzQyOTEyNDczMiIMDJaY1Tbcnr3KAnP8KqEEwH3UsaVu5BQZEOkhqNIen5rsxaLaNq08SaakAoAOJxWQ+46sJwGzZDQUPchRYGcw55Dgv1g6Mr+2x/PIlx9JCrrcLruFP9rQbcsPubm9aQZeyWL6m8bMlU4WV3BIAiJ2d4pDeM7pNB2UQ3Vh8xbdzk01IiNpfg3HT7OT1PF/NmIwOrDF1whGJHVWFnvcHGUlAGNK8brwCK9BGhRKxlQeP9s/FgdX+mQxuUGEmAzocjTBBvM50hcWXpCneMK1SgnvbUzY3hXtFhmDg++BtsxukhTS9r6s94JaZWu8Of+JGg8/oTYPyLtYZFPbmxRJJXB3Q9jrAcldZX88aH1Ji5EXcqWKnNn4Q+v91JnbGZL9UmYJpora7TYDKvsQEKfXeYo2cEnzwCGDVUXWRKlpR1kx/BiwPUbMXTXucRcEX9Y1KAr19P67DlcxTMOA5QNKzDsgeyFgCsCZe/nT2Ea1kP5MdvD8mAPGaxbXeIoIBs/hsxsVDI5Kr1RUA4CpS6FlkB50kLzw5nMjDH7eRyK8rW3yndHxS8Xgx0UBsbNZ52vUhMwuf3X0+GinfST59yDQz51xutP/YaOyW3uSeDgKJQ4v8SCkMImEKZyYZCLHX/DGlO/sE3xMYViZEUpqAGdCUjqUr0hI4BnKOt3EZ5dGWTMb9RNrAN3JoJNY7KdHUtTCkMCG5QHsRgFa+5x3egSRAsmxpuDr6KxC68KtHOh5VMF0q/MwkYmSmAY6hgLkQhbjzY1rQ8Yic64xfSS2+rT59O9HaL+9YFajdY83APNUH7w2DK2PxlekNBtNOTJdAsBLtmKgko4uMj64jHIC11JWFA9FFsBYr5p4NGshsruRPlrx+Y63qG+z/N+cybV14F0E4yZD7soXdFZyw/FAepKTdvH9svmXlB4FEVhZmacM8gkzRyCWkU5WpHrU9CWIAIZt7G6T9Zs5ACht8pzqGuy9pzKqN8Aqp7oZGBKe+IH73qecXOVcuwSGSyrReC+AajiQ8J7RBMs+IXfajvc73KUB16DXMpOfBjpHzewu/2WNEHUjC8lzKPgC03TfU5N/KC827/G0G/BUZmnQ/FlnBX242HeS</stringProp>
                </elementProp>
                <elementProp name="x-amz-date" elementType="Header">
                  <stringProp name="Header.name">x-amz-date</stringProp>
                  <stringProp name="Header.value">20220823T074625Z</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  likerslaGetFreiendList(userID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, loginUserID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;)\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  searchUserChatRooms(filter: {compositKey: {matchPhrase: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}, chatRoomStatus: {eq: \&quot;Pending\&quot;}, lastSender: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}, createdAt: {lte: \&quot;2022-08-23T06:46:38.368Z\&quot;}}, sort: {direction: desc, field: lastMessageAt}) {\n    total\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  searchUserChatRooms(filter: {and: [{compositKey: {matchPhrase: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}}, {compositKey: {matchPhrase: \&quot;8df53756-a689-495e-b54f-0c63f440229d\&quot;}}]}) {\n    items {\n      id\n      chatRoomStatus\n      compositKey\n    }\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  likerslaCheckFriends(friendUserID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, userID: \&quot;8df53756-a689-495e-b54f-0c63f440229d\&quot;)\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  likerslaCheckFriends(friendUserID: \&quot;8df53756-a689-495e-b54f-0c63f440229d\&quot;, userID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;)\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  byuserIDUserFollwers(followingUserID: \&quot;8df53756-a689-495e-b54f-0c63f440229d\&quot;, userID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n    items {\n      id\n      followingUserID\n      userID\n    }\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://q7y8ibn334.execute-api.us-east-1.amazonaws.com/prodlive/getfilter" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;queryString&quot;:{&quot;userID&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;,&quot;filter_type&quot;:7}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">prodlive/getfilter</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">AWS4-HMAC-SHA256 Credential=ASIAY23MY4J6LURUZLIA/20220823/us-east-1/execute-api/aws4_request, SignedHeaders=content-type;host;x-amz-date;x-amz-security-token, Signature=5fa1e8dcf18c9eb6e0ec71fe0b1c70c6992b2826f63ac0403661e4fcb1f80c43</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Amz-Security-Token" elementType="Header">
                  <stringProp name="Header.name">X-Amz-Security-Token</stringProp>
                  <stringProp name="Header.value">IQoJb3JpZ2luX2VjEBAaCXVzLWVhc3QtMSJGMEQCIHa+L91dXZpQQ+00qokgTgvaPlrat5xnX/3dg1jFOeBoAiAHkHvJ1sYiE11HxHVo2HbtIscnmNpX3FdM+pKmqjvmACrNBAiJ//////////8BEAMaDDYwNzQyOTEyNDczMiIMDJaY1Tbcnr3KAnP8KqEEwH3UsaVu5BQZEOkhqNIen5rsxaLaNq08SaakAoAOJxWQ+46sJwGzZDQUPchRYGcw55Dgv1g6Mr+2x/PIlx9JCrrcLruFP9rQbcsPubm9aQZeyWL6m8bMlU4WV3BIAiJ2d4pDeM7pNB2UQ3Vh8xbdzk01IiNpfg3HT7OT1PF/NmIwOrDF1whGJHVWFnvcHGUlAGNK8brwCK9BGhRKxlQeP9s/FgdX+mQxuUGEmAzocjTBBvM50hcWXpCneMK1SgnvbUzY3hXtFhmDg++BtsxukhTS9r6s94JaZWu8Of+JGg8/oTYPyLtYZFPbmxRJJXB3Q9jrAcldZX88aH1Ji5EXcqWKnNn4Q+v91JnbGZL9UmYJpora7TYDKvsQEKfXeYo2cEnzwCGDVUXWRKlpR1kx/BiwPUbMXTXucRcEX9Y1KAr19P67DlcxTMOA5QNKzDsgeyFgCsCZe/nT2Ea1kP5MdvD8mAPGaxbXeIoIBs/hsxsVDI5Kr1RUA4CpS6FlkB50kLzw5nMjDH7eRyK8rW3yndHxS8Xgx0UBsbNZ52vUhMwuf3X0+GinfST59yDQz51xutP/YaOyW3uSeDgKJQ4v8SCkMImEKZyYZCLHX/DGlO/sE3xMYViZEUpqAGdCUjqUr0hI4BnKOt3EZ5dGWTMb9RNrAN3JoJNY7KdHUtTCkMCG5QHsRgFa+5x3egSRAsmxpuDr6KxC68KtHOh5VMF0q/MwkYmSmAY6hgLkQhbjzY1rQ8Yic64xfSS2+rT59O9HaL+9YFajdY83APNUH7w2DK2PxlekNBtNOTJdAsBLtmKgko4uMj64jHIC11JWFA9FFsBYr5p4NGshsruRPlrx+Y63qG+z/N+cybV14F0E4yZD7soXdFZyw/FAepKTdvH9svmXlB4FEVhZmacM8gkzRyCWkU5WpHrU9CWIAIZt7G6T9Zs5ACht8pzqGuy9pzKqN8Aqp7oZGBKe+IH73qecXOVcuwSGSyrReC+AajiQ8J7RBMs+IXfajvc73KUB16DXMpOfBjpHzewu/2WNEHUjC8lzKPgC03TfU5N/KC827/G0G/BUZmnQ/FlnBX242HeS</stringProp>
                </elementProp>
                <elementProp name="x-amz-date" elementType="Header">
                  <stringProp name="Header.name">x-amz-date</stringProp>
                  <stringProp name="Header.value">20220823T074642Z</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://q7y8ibn334.execute-api.us-east-1.amazonaws.com/prodlive/getfilter" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;queryString&quot;:{&quot;userID&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;,&quot;filter_type&quot;:null}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">prodlive/getfilter</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">AWS4-HMAC-SHA256 Credential=ASIAY23MY4J6LURUZLIA/20220823/us-east-1/execute-api/aws4_request, SignedHeaders=content-type;host;x-amz-date;x-amz-security-token, Signature=b4221db1fdafebb0840a849144cf4c41f3a8cca2e77ba72dfeeb9888741771da</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Amz-Security-Token" elementType="Header">
                  <stringProp name="Header.name">X-Amz-Security-Token</stringProp>
                  <stringProp name="Header.value">IQoJb3JpZ2luX2VjEBAaCXVzLWVhc3QtMSJGMEQCIHa+L91dXZpQQ+00qokgTgvaPlrat5xnX/3dg1jFOeBoAiAHkHvJ1sYiE11HxHVo2HbtIscnmNpX3FdM+pKmqjvmACrNBAiJ//////////8BEAMaDDYwNzQyOTEyNDczMiIMDJaY1Tbcnr3KAnP8KqEEwH3UsaVu5BQZEOkhqNIen5rsxaLaNq08SaakAoAOJxWQ+46sJwGzZDQUPchRYGcw55Dgv1g6Mr+2x/PIlx9JCrrcLruFP9rQbcsPubm9aQZeyWL6m8bMlU4WV3BIAiJ2d4pDeM7pNB2UQ3Vh8xbdzk01IiNpfg3HT7OT1PF/NmIwOrDF1whGJHVWFnvcHGUlAGNK8brwCK9BGhRKxlQeP9s/FgdX+mQxuUGEmAzocjTBBvM50hcWXpCneMK1SgnvbUzY3hXtFhmDg++BtsxukhTS9r6s94JaZWu8Of+JGg8/oTYPyLtYZFPbmxRJJXB3Q9jrAcldZX88aH1Ji5EXcqWKnNn4Q+v91JnbGZL9UmYJpora7TYDKvsQEKfXeYo2cEnzwCGDVUXWRKlpR1kx/BiwPUbMXTXucRcEX9Y1KAr19P67DlcxTMOA5QNKzDsgeyFgCsCZe/nT2Ea1kP5MdvD8mAPGaxbXeIoIBs/hsxsVDI5Kr1RUA4CpS6FlkB50kLzw5nMjDH7eRyK8rW3yndHxS8Xgx0UBsbNZ52vUhMwuf3X0+GinfST59yDQz51xutP/YaOyW3uSeDgKJQ4v8SCkMImEKZyYZCLHX/DGlO/sE3xMYViZEUpqAGdCUjqUr0hI4BnKOt3EZ5dGWTMb9RNrAN3JoJNY7KdHUtTCkMCG5QHsRgFa+5x3egSRAsmxpuDr6KxC68KtHOh5VMF0q/MwkYmSmAY6hgLkQhbjzY1rQ8Yic64xfSS2+rT59O9HaL+9YFajdY83APNUH7w2DK2PxlekNBtNOTJdAsBLtmKgko4uMj64jHIC11JWFA9FFsBYr5p4NGshsruRPlrx+Y63qG+z/N+cybV14F0E4yZD7soXdFZyw/FAepKTdvH9svmXlB4FEVhZmacM8gkzRyCWkU5WpHrU9CWIAIZt7G6T9Zs5ACht8pzqGuy9pzKqN8Aqp7oZGBKe+IH73qecXOVcuwSGSyrReC+AajiQ8J7RBMs+IXfajvc73KUB16DXMpOfBjpHzewu/2WNEHUjC8lzKPgC03TfU5N/KC827/G0G/BUZmnQ/FlnBX242HeS</stringProp>
                </elementProp>
                <elementProp name="x-amz-date" elementType="Header">
                  <stringProp name="Header.name">x-amz-date</stringProp>
                  <stringProp name="Header.value">20220823T074642Z</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  likerSlaGetStarContributorToFollow(loginUserID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;)\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  byuserIDUserFollwers(followingUserID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, userID: {eq: \&quot;8df53756-a689-495e-b54f-0c63f440229d\&quot;}) {\n    items {\n      id\n      followingUserID\n      userID\n    }\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query ListGroups($filter: ModelGroupFilterInput, $limit: Int, $nextToken: String) {\n  listGroups(filter: $filter, limit: $limit, nextToken: $nextToken) {\n    items {\n      id\n      preID\n      groupName\n      postCategories {\n        items {\n          id\n          name\n          groupID\n        }\n      }\n      createdAt\n      updatedAt\n    }\n    nextToken\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://q7y8ibn334.execute-api.us-east-1.amazonaws.com/prodlive/getfilter" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;queryString&quot;:{&quot;userID&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;,&quot;filter_type&quot;:null}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">prodlive/getfilter</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">AWS4-HMAC-SHA256 Credential=ASIAY23MY4J6LURUZLIA/20220823/us-east-1/execute-api/aws4_request, SignedHeaders=content-type;host;x-amz-date;x-amz-security-token, Signature=b4221db1fdafebb0840a849144cf4c41f3a8cca2e77ba72dfeeb9888741771da</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Amz-Security-Token" elementType="Header">
                  <stringProp name="Header.name">X-Amz-Security-Token</stringProp>
                  <stringProp name="Header.value">IQoJb3JpZ2luX2VjEBAaCXVzLWVhc3QtMSJGMEQCIHa+L91dXZpQQ+00qokgTgvaPlrat5xnX/3dg1jFOeBoAiAHkHvJ1sYiE11HxHVo2HbtIscnmNpX3FdM+pKmqjvmACrNBAiJ//////////8BEAMaDDYwNzQyOTEyNDczMiIMDJaY1Tbcnr3KAnP8KqEEwH3UsaVu5BQZEOkhqNIen5rsxaLaNq08SaakAoAOJxWQ+46sJwGzZDQUPchRYGcw55Dgv1g6Mr+2x/PIlx9JCrrcLruFP9rQbcsPubm9aQZeyWL6m8bMlU4WV3BIAiJ2d4pDeM7pNB2UQ3Vh8xbdzk01IiNpfg3HT7OT1PF/NmIwOrDF1whGJHVWFnvcHGUlAGNK8brwCK9BGhRKxlQeP9s/FgdX+mQxuUGEmAzocjTBBvM50hcWXpCneMK1SgnvbUzY3hXtFhmDg++BtsxukhTS9r6s94JaZWu8Of+JGg8/oTYPyLtYZFPbmxRJJXB3Q9jrAcldZX88aH1Ji5EXcqWKnNn4Q+v91JnbGZL9UmYJpora7TYDKvsQEKfXeYo2cEnzwCGDVUXWRKlpR1kx/BiwPUbMXTXucRcEX9Y1KAr19P67DlcxTMOA5QNKzDsgeyFgCsCZe/nT2Ea1kP5MdvD8mAPGaxbXeIoIBs/hsxsVDI5Kr1RUA4CpS6FlkB50kLzw5nMjDH7eRyK8rW3yndHxS8Xgx0UBsbNZ52vUhMwuf3X0+GinfST59yDQz51xutP/YaOyW3uSeDgKJQ4v8SCkMImEKZyYZCLHX/DGlO/sE3xMYViZEUpqAGdCUjqUr0hI4BnKOt3EZ5dGWTMb9RNrAN3JoJNY7KdHUtTCkMCG5QHsRgFa+5x3egSRAsmxpuDr6KxC68KtHOh5VMF0q/MwkYmSmAY6hgLkQhbjzY1rQ8Yic64xfSS2+rT59O9HaL+9YFajdY83APNUH7w2DK2PxlekNBtNOTJdAsBLtmKgko4uMj64jHIC11JWFA9FFsBYr5p4NGshsruRPlrx+Y63qG+z/N+cybV14F0E4yZD7soXdFZyw/FAepKTdvH9svmXlB4FEVhZmacM8gkzRyCWkU5WpHrU9CWIAIZt7G6T9Zs5ACht8pzqGuy9pzKqN8Aqp7oZGBKe+IH73qecXOVcuwSGSyrReC+AajiQ8J7RBMs+IXfajvc73KUB16DXMpOfBjpHzewu/2WNEHUjC8lzKPgC03TfU5N/KC827/G0G/BUZmnQ/FlnBX242HeS</stringProp>
                </elementProp>
                <elementProp name="x-amz-date" elementType="Header">
                  <stringProp name="Header.name">x-amz-date</stringProp>
                  <stringProp name="Header.value">20220823T074642Z</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;mutation MyMutation {\n  likerslaCheckUserChatRommLimit(userID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;)\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;mutation MyMutation {\n  createUserChatRoom(input: {owner: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, lastSender: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, chatRoomStatus: \&quot;Active\&quot;, receiverID: \&quot;8df53756-a689-495e-b54f-0c63f440229d\&quot;, compositKey: \&quot;#856d94f7-965b-449c-aff2-8df1a89ca0fc#8df53756-a689-495e-b54f-0c63f440229d\&quot;, lastMessageAt: \&quot;2022-08-23T07:46:43.775Z\&quot;}) {\n    id\n    compositKey\n    isDetailsSeen\n    isNotificationSeen\n    lastMessage\n    lastMessageAt\n    lastSender\n    owner\n    receiverID\n    updatedAt\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  likerslaGetFriendFeed(is_public: \&quot;false\&quot;, limit: \&quot;5\&quot;, offset: \&quot;0\&quot;, userID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, filter: \&quot;1\&quot;, feed: \&quot;friends\&quot;, cat_id: \&quot;\&quot;)\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">AWS4-HMAC-SHA256 Credential=ASIAY23MY4J6LURUZLIA/20220823/us-east-1/appsync/aws4_request, SignedHeaders=content-type;host;x-amz-date;x-amz-security-token;x-amz-user-agent, Signature=ae9acb9d15cbc0ef620c7d804174a9a41db80e2f75cfbac1efe4a34eed79f242</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Amz-Security-Token" elementType="Header">
                  <stringProp name="Header.name">X-Amz-Security-Token</stringProp>
                  <stringProp name="Header.value">IQoJb3JpZ2luX2VjEBAaCXVzLWVhc3QtMSJGMEQCIHa+L91dXZpQQ+00qokgTgvaPlrat5xnX/3dg1jFOeBoAiAHkHvJ1sYiE11HxHVo2HbtIscnmNpX3FdM+pKmqjvmACrNBAiJ//////////8BEAMaDDYwNzQyOTEyNDczMiIMDJaY1Tbcnr3KAnP8KqEEwH3UsaVu5BQZEOkhqNIen5rsxaLaNq08SaakAoAOJxWQ+46sJwGzZDQUPchRYGcw55Dgv1g6Mr+2x/PIlx9JCrrcLruFP9rQbcsPubm9aQZeyWL6m8bMlU4WV3BIAiJ2d4pDeM7pNB2UQ3Vh8xbdzk01IiNpfg3HT7OT1PF/NmIwOrDF1whGJHVWFnvcHGUlAGNK8brwCK9BGhRKxlQeP9s/FgdX+mQxuUGEmAzocjTBBvM50hcWXpCneMK1SgnvbUzY3hXtFhmDg++BtsxukhTS9r6s94JaZWu8Of+JGg8/oTYPyLtYZFPbmxRJJXB3Q9jrAcldZX88aH1Ji5EXcqWKnNn4Q+v91JnbGZL9UmYJpora7TYDKvsQEKfXeYo2cEnzwCGDVUXWRKlpR1kx/BiwPUbMXTXucRcEX9Y1KAr19P67DlcxTMOA5QNKzDsgeyFgCsCZe/nT2Ea1kP5MdvD8mAPGaxbXeIoIBs/hsxsVDI5Kr1RUA4CpS6FlkB50kLzw5nMjDH7eRyK8rW3yndHxS8Xgx0UBsbNZ52vUhMwuf3X0+GinfST59yDQz51xutP/YaOyW3uSeDgKJQ4v8SCkMImEKZyYZCLHX/DGlO/sE3xMYViZEUpqAGdCUjqUr0hI4BnKOt3EZ5dGWTMb9RNrAN3JoJNY7KdHUtTCkMCG5QHsRgFa+5x3egSRAsmxpuDr6KxC68KtHOh5VMF0q/MwkYmSmAY6hgLkQhbjzY1rQ8Yic64xfSS2+rT59O9HaL+9YFajdY83APNUH7w2DK2PxlekNBtNOTJdAsBLtmKgko4uMj64jHIC11JWFA9FFsBYr5p4NGshsruRPlrx+Y63qG+z/N+cybV14F0E4yZD7soXdFZyw/FAepKTdvH9svmXlB4FEVhZmacM8gkzRyCWkU5WpHrU9CWIAIZt7G6T9Zs5ACht8pzqGuy9pzKqN8Aqp7oZGBKe+IH73qecXOVcuwSGSyrReC+AajiQ8J7RBMs+IXfajvc73KUB16DXMpOfBjpHzewu/2WNEHUjC8lzKPgC03TfU5N/KC827/G0G/BUZmnQ/FlnBX242HeS</stringProp>
                </elementProp>
                <elementProp name="x-amz-date" elementType="Header">
                  <stringProp name="Header.name">x-amz-date</stringProp>
                  <stringProp name="Header.value">20220823T074643Z</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;mutation MyMutation($id: ID!, $chatRoomID: ID!, $message: String, $chatContentType: ChatContentType, $messageOwner: ID!, $receiverID: ID!, $linkUrl: String, $linkTitle: String, $pictureMeta: ID) {\n  createMessage(input: {id: $id, chatRoomID: $chatRoomID, chatContentType: $chatContentType, message: $message, messageOwner: $messageOwner, receiverID: $receiverID, linkUrl: $linkUrl, linkTitle: $linkTitle, pictureMeta: $pictureMeta}) {\n    id\n    chatRoomID\n    chatContentType\n    linkUrl\n    linkTitle\n    linkDescription\n    pictureMeta\n    pictureMetas {\n      items {\n        id\n        imagekey\n      }\n      nextToken\n    }\n    message\n    isDeleted\n    owner\n    messageOwner\n    receiverID\n    createdAt\n    deliveredOnTime\n    isNotificationSeen\n    seenOnTime\n    senderID\n    updatedAt\n    chatRoom {\n      id\n      owner\n      chatRoomStatus\n      createdAt\n      updatedAt\n      isDetailsSeen\n      lastMessage\n      lastMessageAt\n      isNotificationSeen\n      ownerInfo {\n        id\n        firstName\n        lastName\n        userName\n        isActive\n        totalFollowers\n        totalStars\n        totalLikes\n        profilePhotoActive\n        totalGoldStars\n        totalSilverStars\n        isTopCommenter\n        topCommentor {\n          items {\n            userID\n          }\n        }\n        totalComments\n        isFoundingMember\n        isChattBoxActive\n        isMasterAccount\n        lastLogOutTime\n        lastLoginDate\n        lastLoginDevice\n        lastLoginTime\n        loginStatus\n      }\n      receiverInfo {\n        id\n        firstName\n        lastName\n        userName\n        isActive\n        totalFollowers\n        totalStars\n        totalLikes\n        profilePhotoActive\n        totalGoldStars\n        totalSilverStars\n        isTopCommenter\n        topCommentor {\n          items {\n            userID\n          }\n        }\n        totalComments\n        isFoundingMember\n        isChattBoxActive\n        isMasterAccount\n        lastLogOutTime\n        lastLoginDate\n        lastLoginDevice\n        lastLoginTime\n        loginStatus\n      }\n    }\n  }\n}\n&quot;,&quot;variables&quot;:{&quot;id&quot;:&quot;fb09af52-70ba-4b9e-aafd-79546f77eade&quot;,&quot;chatRoomID&quot;:&quot;1ed4ce14-34e3-4e5c-a3fd-7397cfd21f84&quot;,&quot;messageOwner&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;,&quot;receiverID&quot;:&quot;8df53756-a689-495e-b54f-0c63f440229d&quot;,&quot;message&quot;:&quot;Hi Eric&quot;,&quot;chatContentType&quot;:&quot;Text&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;mutation UpdateUserChatRoom($input: UpdateUserChatRoomInput!, $condition: ModelUserChatRoomConditionInput) {\n  updateUserChatRoom(input: $input, condition: $condition) {\n    id\n    owner\n    receiverID\n    chatRoomStatus\n    createdAt\n    compositKey\n    lastMessageAt\n    lastMessage\n    isNotificationSeen\n    isDetailsSeen\n    lastSender\n    blockByUser\n    updatedAt\n    ownerInfo {\n      id\n      firstName\n      lastName\n      userName\n      isActive\n      totalFollowers\n      totalStars\n      totalLikes\n      profilePhotoActive\n      totalGoldStars\n      totalSilverStars\n      isTopCommenter\n      topCommentor {\n        items {\n          userID\n        }\n      }\n      totalComments\n      isFoundingMember\n      isChattBoxActive\n      isMasterAccount\n      lastLogOutTime\n      lastLoginDate\n      lastLoginDevice\n      lastLoginTime\n      loginStatus\n    }\n    receiverInfo {\n      id\n      firstName\n      lastName\n      userName\n      isActive\n      totalFollowers\n      totalStars\n      totalLikes\n      profilePhotoActive\n      totalGoldStars\n      totalSilverStars\n      isTopCommenter\n      topCommentor {\n        items {\n          userID\n        }\n      }\n      totalComments\n      isFoundingMember\n      isChattBoxActive\n      isMasterAccount\n      lastLogOutTime\n      lastLoginDate\n      lastLoginDevice\n      lastLoginTime\n      loginStatus\n    }\n    message {\n      nextToken\n    }\n    chatRoomMember {\n      nextToken\n    }\n  }\n}\n&quot;,&quot;variables&quot;:{&quot;input&quot;:{&quot;id&quot;:&quot;1ed4ce14-34e3-4e5c-a3fd-7397cfd21f84&quot;,&quot;lastMessage&quot;:&quot;Hi Eric&quot;,&quot;lastMessageAt&quot;:&quot;2022-08-23T07:46:44.899Z&quot;,&quot;lastSender&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;,&quot;isDetailsSeen&quot;:false,&quot;isNotificationSeen&quot;:false}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://q7y8ibn334.execute-api.us-east-1.amazonaws.com/prodlive/getfilter" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;queryString&quot;:{&quot;userID&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;,&quot;filter_type&quot;:null}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">prodlive/getfilter</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">AWS4-HMAC-SHA256 Credential=ASIAY23MY4J6LURUZLIA/20220823/us-east-1/execute-api/aws4_request, SignedHeaders=content-type;host;x-amz-date;x-amz-security-token, Signature=de11afe197347f9351d4a77ab39bc563436052e80ee5dd5d418063e00f917145</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Amz-Security-Token" elementType="Header">
                  <stringProp name="Header.name">X-Amz-Security-Token</stringProp>
                  <stringProp name="Header.value">IQoJb3JpZ2luX2VjEBAaCXVzLWVhc3QtMSJGMEQCIHa+L91dXZpQQ+00qokgTgvaPlrat5xnX/3dg1jFOeBoAiAHkHvJ1sYiE11HxHVo2HbtIscnmNpX3FdM+pKmqjvmACrNBAiJ//////////8BEAMaDDYwNzQyOTEyNDczMiIMDJaY1Tbcnr3KAnP8KqEEwH3UsaVu5BQZEOkhqNIen5rsxaLaNq08SaakAoAOJxWQ+46sJwGzZDQUPchRYGcw55Dgv1g6Mr+2x/PIlx9JCrrcLruFP9rQbcsPubm9aQZeyWL6m8bMlU4WV3BIAiJ2d4pDeM7pNB2UQ3Vh8xbdzk01IiNpfg3HT7OT1PF/NmIwOrDF1whGJHVWFnvcHGUlAGNK8brwCK9BGhRKxlQeP9s/FgdX+mQxuUGEmAzocjTBBvM50hcWXpCneMK1SgnvbUzY3hXtFhmDg++BtsxukhTS9r6s94JaZWu8Of+JGg8/oTYPyLtYZFPbmxRJJXB3Q9jrAcldZX88aH1Ji5EXcqWKnNn4Q+v91JnbGZL9UmYJpora7TYDKvsQEKfXeYo2cEnzwCGDVUXWRKlpR1kx/BiwPUbMXTXucRcEX9Y1KAr19P67DlcxTMOA5QNKzDsgeyFgCsCZe/nT2Ea1kP5MdvD8mAPGaxbXeIoIBs/hsxsVDI5Kr1RUA4CpS6FlkB50kLzw5nMjDH7eRyK8rW3yndHxS8Xgx0UBsbNZ52vUhMwuf3X0+GinfST59yDQz51xutP/YaOyW3uSeDgKJQ4v8SCkMImEKZyYZCLHX/DGlO/sE3xMYViZEUpqAGdCUjqUr0hI4BnKOt3EZ5dGWTMb9RNrAN3JoJNY7KdHUtTCkMCG5QHsRgFa+5x3egSRAsmxpuDr6KxC68KtHOh5VMF0q/MwkYmSmAY6hgLkQhbjzY1rQ8Yic64xfSS2+rT59O9HaL+9YFajdY83APNUH7w2DK2PxlekNBtNOTJdAsBLtmKgko4uMj64jHIC11JWFA9FFsBYr5p4NGshsruRPlrx+Y63qG+z/N+cybV14F0E4yZD7soXdFZyw/FAepKTdvH9svmXlB4FEVhZmacM8gkzRyCWkU5WpHrU9CWIAIZt7G6T9Zs5ACht8pzqGuy9pzKqN8Aqp7oZGBKe+IH73qecXOVcuwSGSyrReC+AajiQ8J7RBMs+IXfajvc73KUB16DXMpOfBjpHzewu/2WNEHUjC8lzKPgC03TfU5N/KC827/G0G/BUZmnQ/FlnBX242HeS</stringProp>
                </elementProp>
                <elementProp name="x-amz-date" elementType="Header">
                  <stringProp name="Header.name">x-amz-date</stringProp>
                  <stringProp name="Header.value">20220823T074645Z</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://q7y8ibn334.execute-api.us-east-1.amazonaws.com/prodlive/getfilter" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;queryString&quot;:{&quot;userID&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;,&quot;filter_type&quot;:null}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">prodlive/getfilter</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">AWS4-HMAC-SHA256 Credential=ASIAY23MY4J6LURUZLIA/20220823/us-east-1/execute-api/aws4_request, SignedHeaders=content-type;host;x-amz-date;x-amz-security-token, Signature=de11afe197347f9351d4a77ab39bc563436052e80ee5dd5d418063e00f917145</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Amz-Security-Token" elementType="Header">
                  <stringProp name="Header.name">X-Amz-Security-Token</stringProp>
                  <stringProp name="Header.value">IQoJb3JpZ2luX2VjEBAaCXVzLWVhc3QtMSJGMEQCIHa+L91dXZpQQ+00qokgTgvaPlrat5xnX/3dg1jFOeBoAiAHkHvJ1sYiE11HxHVo2HbtIscnmNpX3FdM+pKmqjvmACrNBAiJ//////////8BEAMaDDYwNzQyOTEyNDczMiIMDJaY1Tbcnr3KAnP8KqEEwH3UsaVu5BQZEOkhqNIen5rsxaLaNq08SaakAoAOJxWQ+46sJwGzZDQUPchRYGcw55Dgv1g6Mr+2x/PIlx9JCrrcLruFP9rQbcsPubm9aQZeyWL6m8bMlU4WV3BIAiJ2d4pDeM7pNB2UQ3Vh8xbdzk01IiNpfg3HT7OT1PF/NmIwOrDF1whGJHVWFnvcHGUlAGNK8brwCK9BGhRKxlQeP9s/FgdX+mQxuUGEmAzocjTBBvM50hcWXpCneMK1SgnvbUzY3hXtFhmDg++BtsxukhTS9r6s94JaZWu8Of+JGg8/oTYPyLtYZFPbmxRJJXB3Q9jrAcldZX88aH1Ji5EXcqWKnNn4Q+v91JnbGZL9UmYJpora7TYDKvsQEKfXeYo2cEnzwCGDVUXWRKlpR1kx/BiwPUbMXTXucRcEX9Y1KAr19P67DlcxTMOA5QNKzDsgeyFgCsCZe/nT2Ea1kP5MdvD8mAPGaxbXeIoIBs/hsxsVDI5Kr1RUA4CpS6FlkB50kLzw5nMjDH7eRyK8rW3yndHxS8Xgx0UBsbNZ52vUhMwuf3X0+GinfST59yDQz51xutP/YaOyW3uSeDgKJQ4v8SCkMImEKZyYZCLHX/DGlO/sE3xMYViZEUpqAGdCUjqUr0hI4BnKOt3EZ5dGWTMb9RNrAN3JoJNY7KdHUtTCkMCG5QHsRgFa+5x3egSRAsmxpuDr6KxC68KtHOh5VMF0q/MwkYmSmAY6hgLkQhbjzY1rQ8Yic64xfSS2+rT59O9HaL+9YFajdY83APNUH7w2DK2PxlekNBtNOTJdAsBLtmKgko4uMj64jHIC11JWFA9FFsBYr5p4NGshsruRPlrx+Y63qG+z/N+cybV14F0E4yZD7soXdFZyw/FAepKTdvH9svmXlB4FEVhZmacM8gkzRyCWkU5WpHrU9CWIAIZt7G6T9Zs5ACht8pzqGuy9pzKqN8Aqp7oZGBKe+IH73qecXOVcuwSGSyrReC+AajiQ8J7RBMs+IXfajvc73KUB16DXMpOfBjpHzewu/2WNEHUjC8lzKPgC03TfU5N/KC827/G0G/BUZmnQ/FlnBX242HeS</stringProp>
                </elementProp>
                <elementProp name="x-amz-date" elementType="Header">
                  <stringProp name="Header.name">x-amz-date</stringProp>
                  <stringProp name="Header.value">20220823T074645Z</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MessageByRoom($chatRoomID: ID, $createdAt: ModelStringKeyConditionInput, $sortDirection: ModelSortDirection, $filter: ModelMessageFilterInput, $limit: Int, $nextToken: String) {\n  messageByRoom(chatRoomID: $chatRoomID, createdAt: $createdAt, sortDirection: $sortDirection, filter: $filter, limit: $limit, nextToken: $nextToken) {\n    items {\n      id\n      chatRoomID\n      messageOwner\n      message\n      createdAt\n      updatedAt\n      pictureMeta\n      chatContentType\n      linkTitle\n      linkDescription\n      linkUrl\n      isDeleted\n      isForwardMessage\n      forwardCaption\n      reportPostID\n      reportGroupID\n      reportCommentID\n      reportProfileID\n      chatRoom {\n        id\n        owner\n        chatRoomStatus\n        createdAt\n        updatedAt\n      }\n      seenOnTime\n      deliveryInfo {\n        items {\n          id\n          messageID\n          receiverID\n          seenOnTime\n          deliveredOnTime\n          isDeleted\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      pictureMetas {\n        items {\n          id\n          imagekey\n        }\n        nextToken\n      }\n      userInfo {\n        id\n        owner\n        firstName\n        lastName\n        userName\n        totalLikes\n        totalFollowers\n        totalFollowing\n        totalStars\n        totalComments\n        isTopCommenter\n        topCommentor {\n          items {\n            userID\n          }\n        }\n      }\n    }\n    nextToken\n  }\n}\n&quot;,&quot;variables&quot;:{&quot;chatRoomID&quot;:&quot;1ed4ce14-34e3-4e5c-a3fd-7397cfd21f84&quot;,&quot;filter&quot;:{&quot;or&quot;:[{&quot;chatContentType&quot;:{&quot;eq&quot;:&quot;Image&quot;}},{&quot;chatContentType&quot;:{&quot;eq&quot;:&quot;Video&quot;}}]}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MessageByRoom($chatRoomID: ID, $createdAt: ModelStringKeyConditionInput, $sortDirection: ModelSortDirection, $filter: ModelMessageFilterInput, $limit: Int, $nextToken: String) {\n  messageByRoom(chatRoomID: $chatRoomID, createdAt: $createdAt, sortDirection: $sortDirection, filter: $filter, limit: $limit, nextToken: $nextToken) {\n    items {\n      id\n      chatRoomID\n      messageOwner\n      message\n      createdAt\n      updatedAt\n      pictureMeta\n      chatContentType\n      linkTitle\n      linkDescription\n      linkUrl\n      isDeleted\n      isForwardMessage\n      forwardCaption\n      reportPostID\n      reportGroupID\n      reportCommentID\n      reportProfileID\n      chatRoom {\n        id\n        owner\n        chatRoomStatus\n        createdAt\n        updatedAt\n      }\n      seenOnTime\n      deliveryInfo {\n        items {\n          id\n          messageID\n          receiverID\n          seenOnTime\n          deliveredOnTime\n          isDeleted\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      pictureMetas {\n        items {\n          id\n          imagekey\n        }\n        nextToken\n      }\n      userInfo {\n        id\n        owner\n        firstName\n        lastName\n        userName\n        totalLikes\n        totalFollowers\n        totalFollowing\n        totalStars\n        totalComments\n        isTopCommenter\n        topCommentor {\n          items {\n            userID\n          }\n        }\n      }\n    }\n    nextToken\n  }\n}\n&quot;,&quot;variables&quot;:{&quot;chatRoomID&quot;:&quot;1ed4ce14-34e3-4e5c-a3fd-7397cfd21f84&quot;,&quot;sortDirection&quot;:&quot;DESC&quot;,&quot;limit&quot;:10}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  getUserChatRoom(id: \&quot;1ed4ce14-34e3-4e5c-a3fd-7397cfd21f84\&quot;) {\n    chatRoomStatus\n    blockByUser\n    owner\n    receiverID\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query GetUser {\n  getUser(id: \&quot;8df53756-a689-495e-b54f-0c63f440229d\&quot;) {\n    id\n    whoCanSendMessage\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  likerslaCheckFriends(friendUserID: \&quot;8df53756-a689-495e-b54f-0c63f440229d\&quot;, userID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;)\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  getUser(id: \&quot;null\&quot;) {\n    id\n    firstName\n    lastName\n    userName\n    profilePhotoActive\n    totalLikes\n    totalFollowers\n    totalStars\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;mutation MyMutation($id: ID!, $seenOnTime: AWSDateTime) {\n  updateMessage(input: {id: $id, seenOnTime: $seenOnTime}) {\n    id\n    chatRoomID\n    messageOwner\n    owner\n    receiverID\n    seenOnTime\n  }\n}\n&quot;,&quot;variables&quot;:{&quot;id&quot;:&quot;788532c6-6f42-4903-bf6a-ee3c72ee18b7&quot;,&quot;seenOnTime&quot;:&quot;2022-08-23T07:46:58.723Z&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;mutation UpdateUserChatRoom($input: UpdateUserChatRoomInput!, $condition: ModelUserChatRoomConditionInput) {\n  updateUserChatRoom(input: $input, condition: $condition) {\n    id\n    owner\n    receiverID\n    chatRoomStatus\n    createdAt\n    compositKey\n    lastMessageAt\n    lastMessage\n    isNotificationSeen\n    isDetailsSeen\n    lastSender\n    blockByUser\n    updatedAt\n    ownerInfo {\n      id\n      firstName\n      lastName\n      userName\n      isActive\n      totalFollowers\n      totalStars\n      totalLikes\n      profilePhotoActive\n      totalGoldStars\n      totalSilverStars\n      isTopCommenter\n      topCommentor {\n        items {\n          userID\n        }\n      }\n      totalComments\n      isFoundingMember\n      isChattBoxActive\n      isMasterAccount\n      lastLogOutTime\n      lastLoginDate\n      lastLoginDevice\n      lastLoginTime\n      loginStatus\n    }\n    receiverInfo {\n      id\n      firstName\n      lastName\n      userName\n      isActive\n      totalFollowers\n      totalStars\n      totalLikes\n      profilePhotoActive\n      totalGoldStars\n      totalSilverStars\n      isTopCommenter\n      topCommentor {\n        items {\n          userID\n        }\n      }\n      totalComments\n      isFoundingMember\n      isChattBoxActive\n      isMasterAccount\n      lastLogOutTime\n      lastLoginDate\n      lastLoginDevice\n      lastLoginTime\n      loginStatus\n    }\n    message {\n      nextToken\n    }\n    chatRoomMember {\n      nextToken\n    }\n  }\n}\n&quot;,&quot;variables&quot;:{&quot;input&quot;:{&quot;id&quot;:&quot;1ed4ce14-34e3-4e5c-a3fd-7397cfd21f84&quot;,&quot;isNotificationSeen&quot;:&quot;true&quot;}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;mutation MyMutation {\n  updateUserChatRoom(input: {id: \&quot;1ed4ce14-34e3-4e5c-a3fd-7397cfd21f84\&quot;, isDetailsSeen: \&quot;true\&quot;}) {\n    chatRoomStatus\n    compositKey\n    createdAt\n    id\n    isDetailsSeen\n    isNotificationSeen\n    lastMessage\n    lastMessageAt\n    lastSender\n    receiverID\n    owner\n    ownerInfo {\n      id\n      firstName\n      lastName\n      userName\n      isActive\n      totalFollowers\n      totalStars\n      totalLikes\n      profilePhotoActive\n      totalGoldStars\n      totalSilverStars\n      isTopCommenter\n      topCommentor {\n        items {\n          userID\n        }\n      }\n      totalComments\n      isFoundingMember\n      isChattBoxActive\n      whoCanSendMessage\n      isMasterAccount\n      lastLogOutTime\n      lastLoginDate\n      lastLoginDevice\n      lastLoginTime\n      loginStatus\n    }\n    receiverInfo {\n      id\n      firstName\n      lastName\n      userName\n      isActive\n      totalFollowers\n      totalStars\n      totalLikes\n      profilePhotoActive\n      totalGoldStars\n      totalSilverStars\n      isTopCommenter\n      topCommentor {\n        items {\n          userID\n        }\n      }\n      totalComments\n      isFoundingMember\n      isChattBoxActive\n      whoCanSendMessage\n      isMasterAccount\n      lastLogOutTime\n      lastLoginDate\n      lastLoginDevice\n      lastLoginTime\n      loginStatus\n    }\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MessageByRoom($chatRoomID: ID, $createdAt: ModelStringKeyConditionInput, $sortDirection: ModelSortDirection, $filter: ModelMessageFilterInput, $limit: Int, $nextToken: String) {\n  messageByRoom(chatRoomID: $chatRoomID, createdAt: $createdAt, sortDirection: $sortDirection, filter: $filter, limit: $limit, nextToken: $nextToken) {\n    items {\n      id\n      chatRoomID\n      messageOwner\n      message\n      createdAt\n      updatedAt\n      pictureMeta\n      chatContentType\n      linkTitle\n      linkDescription\n      linkUrl\n      isDeleted\n      isForwardMessage\n      forwardCaption\n      reportPostID\n      reportGroupID\n      reportCommentID\n      reportProfileID\n      chatRoom {\n        id\n        owner\n        chatRoomStatus\n        createdAt\n        updatedAt\n      }\n      seenOnTime\n      deliveryInfo {\n        items {\n          id\n          messageID\n          receiverID\n          seenOnTime\n          deliveredOnTime\n          isDeleted\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      pictureMetas {\n        items {\n          id\n          imagekey\n        }\n        nextToken\n      }\n      userInfo {\n        id\n        owner\n        firstName\n        lastName\n        userName\n        totalLikes\n        totalFollowers\n        totalFollowing\n        totalStars\n        totalComments\n        isTopCommenter\n        topCommentor {\n          items {\n            userID\n          }\n        }\n      }\n    }\n    nextToken\n  }\n}\n&quot;,&quot;variables&quot;:{&quot;chatRoomID&quot;:&quot;1ed4ce14-34e3-4e5c-a3fd-7397cfd21f84&quot;,&quot;filter&quot;:{&quot;or&quot;:[{&quot;chatContentType&quot;:{&quot;eq&quot;:&quot;Image&quot;}},{&quot;chatContentType&quot;:{&quot;eq&quot;:&quot;Video&quot;}}]}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MessageByRoom($chatRoomID: ID, $createdAt: ModelStringKeyConditionInput, $sortDirection: ModelSortDirection, $filter: ModelMessageFilterInput, $limit: Int, $nextToken: String) {\n  messageByRoom(chatRoomID: $chatRoomID, createdAt: $createdAt, sortDirection: $sortDirection, filter: $filter, limit: $limit, nextToken: $nextToken) {\n    items {\n      id\n      chatRoomID\n      messageOwner\n      message\n      createdAt\n      updatedAt\n      pictureMeta\n      chatContentType\n      linkTitle\n      linkDescription\n      linkUrl\n      isDeleted\n      isForwardMessage\n      forwardCaption\n      reportPostID\n      reportGroupID\n      reportCommentID\n      reportProfileID\n      chatRoom {\n        id\n        owner\n        chatRoomStatus\n        createdAt\n        updatedAt\n      }\n      seenOnTime\n      deliveryInfo {\n        items {\n          id\n          messageID\n          receiverID\n          seenOnTime\n          deliveredOnTime\n          isDeleted\n          createdAt\n          updatedAt\n        }\n        nextToken\n      }\n      pictureMetas {\n        items {\n          id\n          imagekey\n        }\n        nextToken\n      }\n      userInfo {\n        id\n        owner\n        firstName\n        lastName\n        userName\n        totalLikes\n        totalFollowers\n        totalFollowing\n        totalStars\n        totalComments\n        isTopCommenter\n        topCommentor {\n          items {\n            userID\n          }\n        }\n      }\n    }\n    nextToken\n  }\n}\n&quot;,&quot;variables&quot;:{&quot;chatRoomID&quot;:&quot;1ed4ce14-34e3-4e5c-a3fd-7397cfd21f84&quot;,&quot;sortDirection&quot;:&quot;DESC&quot;,&quot;limit&quot;:10}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  getUserChatRoom(id: \&quot;1ed4ce14-34e3-4e5c-a3fd-7397cfd21f84\&quot;) {\n    chatRoomStatus\n    blockByUser\n    owner\n    receiverID\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query GetUser {\n  getUser(id: \&quot;8df53756-a689-495e-b54f-0c63f440229d\&quot;) {\n    id\n    whoCanSendMessage\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;mutation LikerSLAInsertLoginInfo($loginUserID: String!, $mode: String, $device: String) {\n  LikerSLAInsertLoginInfo(loginUserID: $loginUserID, mode: $mode, device: $device)\n}\n&quot;,&quot;variables&quot;:{&quot;loginUserID&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;,&quot;mode&quot;:&quot;login&quot;,&quot;device&quot;:&quot;web&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  likerslaCheckFriends(friendUserID: \&quot;8df53756-a689-495e-b54f-0c63f440229d\&quot;, userID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;)\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;mutation MyMutation($id: ID!, $chatRoomID: ID!, $message: String, $chatContentType: ChatContentType, $messageOwner: ID!, $receiverID: ID!, $linkUrl: String, $linkTitle: String, $pictureMeta: ID) {\n  createMessage(input: {id: $id, chatRoomID: $chatRoomID, chatContentType: $chatContentType, message: $message, messageOwner: $messageOwner, receiverID: $receiverID, linkUrl: $linkUrl, linkTitle: $linkTitle, pictureMeta: $pictureMeta}) {\n    id\n    chatRoomID\n    chatContentType\n    linkUrl\n    linkTitle\n    linkDescription\n    pictureMeta\n    pictureMetas {\n      items {\n        id\n        imagekey\n      }\n      nextToken\n    }\n    message\n    isDeleted\n    owner\n    messageOwner\n    receiverID\n    createdAt\n    deliveredOnTime\n    isNotificationSeen\n    seenOnTime\n    senderID\n    updatedAt\n    chatRoom {\n      id\n      owner\n      chatRoomStatus\n      createdAt\n      updatedAt\n      isDetailsSeen\n      lastMessage\n      lastMessageAt\n      isNotificationSeen\n      ownerInfo {\n        id\n        firstName\n        lastName\n        userName\n        isActive\n        totalFollowers\n        totalStars\n        totalLikes\n        profilePhotoActive\n        totalGoldStars\n        totalSilverStars\n        isTopCommenter\n        topCommentor {\n          items {\n            userID\n          }\n        }\n        totalComments\n        isFoundingMember\n        isChattBoxActive\n        isMasterAccount\n        lastLogOutTime\n        lastLoginDate\n        lastLoginDevice\n        lastLoginTime\n        loginStatus\n      }\n      receiverInfo {\n        id\n        firstName\n        lastName\n        userName\n        isActive\n        totalFollowers\n        totalStars\n        totalLikes\n        profilePhotoActive\n        totalGoldStars\n        totalSilverStars\n        isTopCommenter\n        topCommentor {\n          items {\n            userID\n          }\n        }\n        totalComments\n        isFoundingMember\n        isChattBoxActive\n        isMasterAccount\n        lastLogOutTime\n        lastLoginDate\n        lastLoginDevice\n        lastLoginTime\n        loginStatus\n      }\n    }\n  }\n}\n&quot;,&quot;variables&quot;:{&quot;id&quot;:&quot;5a48916a-11d4-4a83-b219-d49c2209868f&quot;,&quot;chatRoomID&quot;:&quot;1ed4ce14-34e3-4e5c-a3fd-7397cfd21f84&quot;,&quot;messageOwner&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;,&quot;receiverID&quot;:&quot;8df53756-a689-495e-b54f-0c63f440229d&quot;,&quot;message&quot;:&quot;How are you&quot;,&quot;chatContentType&quot;:&quot;Text&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  likerslaGetChatUserList(loginUserID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;, searchKey: \&quot;\&quot;, limit: \&quot;20\&quot;)\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;mutation UpdateUserChatRoom($input: UpdateUserChatRoomInput!, $condition: ModelUserChatRoomConditionInput) {\n  updateUserChatRoom(input: $input, condition: $condition) {\n    id\n    owner\n    receiverID\n    chatRoomStatus\n    createdAt\n    compositKey\n    lastMessageAt\n    lastMessage\n    isNotificationSeen\n    isDetailsSeen\n    lastSender\n    blockByUser\n    updatedAt\n    ownerInfo {\n      id\n      firstName\n      lastName\n      userName\n      isActive\n      totalFollowers\n      totalStars\n      totalLikes\n      profilePhotoActive\n      totalGoldStars\n      totalSilverStars\n      isTopCommenter\n      topCommentor {\n        items {\n          userID\n        }\n      }\n      totalComments\n      isFoundingMember\n      isChattBoxActive\n      isMasterAccount\n      lastLogOutTime\n      lastLoginDate\n      lastLoginDevice\n      lastLoginTime\n      loginStatus\n    }\n    receiverInfo {\n      id\n      firstName\n      lastName\n      userName\n      isActive\n      totalFollowers\n      totalStars\n      totalLikes\n      profilePhotoActive\n      totalGoldStars\n      totalSilverStars\n      isTopCommenter\n      topCommentor {\n        items {\n          userID\n        }\n      }\n      totalComments\n      isFoundingMember\n      isChattBoxActive\n      isMasterAccount\n      lastLogOutTime\n      lastLoginDate\n      lastLoginDevice\n      lastLoginTime\n      loginStatus\n    }\n    message {\n      nextToken\n    }\n    chatRoomMember {\n      nextToken\n    }\n  }\n}\n&quot;,&quot;variables&quot;:{&quot;input&quot;:{&quot;id&quot;:&quot;1ed4ce14-34e3-4e5c-a3fd-7397cfd21f84&quot;,&quot;lastMessage&quot;:&quot;How are you&quot;,&quot;lastMessageAt&quot;:&quot;2022-08-23T07:47:19.822Z&quot;,&quot;lastSender&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;,&quot;isDetailsSeen&quot;:false,&quot;isNotificationSeen&quot;:false}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;mutation MyMutation($id: ID!, $chatRoomID: ID!, $message: String, $chatContentType: ChatContentType, $messageOwner: ID!, $receiverID: ID!, $linkUrl: String, $linkTitle: String, $pictureMeta: ID) {\n  createMessage(input: {id: $id, chatRoomID: $chatRoomID, chatContentType: $chatContentType, message: $message, messageOwner: $messageOwner, receiverID: $receiverID, linkUrl: $linkUrl, linkTitle: $linkTitle, pictureMeta: $pictureMeta}) {\n    id\n    chatRoomID\n    chatContentType\n    linkUrl\n    linkTitle\n    linkDescription\n    pictureMeta\n    pictureMetas {\n      items {\n        id\n        imagekey\n      }\n      nextToken\n    }\n    message\n    isDeleted\n    owner\n    messageOwner\n    receiverID\n    createdAt\n    deliveredOnTime\n    isNotificationSeen\n    seenOnTime\n    senderID\n    updatedAt\n    chatRoom {\n      id\n      owner\n      chatRoomStatus\n      createdAt\n      updatedAt\n      isDetailsSeen\n      lastMessage\n      lastMessageAt\n      isNotificationSeen\n      ownerInfo {\n        id\n        firstName\n        lastName\n        userName\n        isActive\n        totalFollowers\n        totalStars\n        totalLikes\n        profilePhotoActive\n        totalGoldStars\n        totalSilverStars\n        isTopCommenter\n        topCommentor {\n          items {\n            userID\n          }\n        }\n        totalComments\n        isFoundingMember\n        isChattBoxActive\n        isMasterAccount\n        lastLogOutTime\n        lastLoginDate\n        lastLoginDevice\n        lastLoginTime\n        loginStatus\n      }\n      receiverInfo {\n        id\n        firstName\n        lastName\n        userName\n        isActive\n        totalFollowers\n        totalStars\n        totalLikes\n        profilePhotoActive\n        totalGoldStars\n        totalSilverStars\n        isTopCommenter\n        topCommentor {\n          items {\n            userID\n          }\n        }\n        totalComments\n        isFoundingMember\n        isChattBoxActive\n        isMasterAccount\n        lastLogOutTime\n        lastLoginDate\n        lastLoginDevice\n        lastLoginTime\n        loginStatus\n      }\n    }\n  }\n}\n&quot;,&quot;variables&quot;:{&quot;id&quot;:&quot;672fc9e8-b6c8-4496-a0b0-1f8d328fe8e4&quot;,&quot;chatRoomID&quot;:&quot;1ed4ce14-34e3-4e5c-a3fd-7397cfd21f84&quot;,&quot;messageOwner&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;,&quot;receiverID&quot;:&quot;8df53756-a689-495e-b54f-0c63f440229d&quot;,&quot;message&quot;:&quot;Fine&quot;,&quot;chatContentType&quot;:&quot;Text&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;mutation UpdateUserChatRoom($input: UpdateUserChatRoomInput!, $condition: ModelUserChatRoomConditionInput) {\n  updateUserChatRoom(input: $input, condition: $condition) {\n    id\n    owner\n    receiverID\n    chatRoomStatus\n    createdAt\n    compositKey\n    lastMessageAt\n    lastMessage\n    isNotificationSeen\n    isDetailsSeen\n    lastSender\n    blockByUser\n    updatedAt\n    ownerInfo {\n      id\n      firstName\n      lastName\n      userName\n      isActive\n      totalFollowers\n      totalStars\n      totalLikes\n      profilePhotoActive\n      totalGoldStars\n      totalSilverStars\n      isTopCommenter\n      topCommentor {\n        items {\n          userID\n        }\n      }\n      totalComments\n      isFoundingMember\n      isChattBoxActive\n      isMasterAccount\n      lastLogOutTime\n      lastLoginDate\n      lastLoginDevice\n      lastLoginTime\n      loginStatus\n    }\n    receiverInfo {\n      id\n      firstName\n      lastName\n      userName\n      isActive\n      totalFollowers\n      totalStars\n      totalLikes\n      profilePhotoActive\n      totalGoldStars\n      totalSilverStars\n      isTopCommenter\n      topCommentor {\n        items {\n          userID\n        }\n      }\n      totalComments\n      isFoundingMember\n      isChattBoxActive\n      isMasterAccount\n      lastLogOutTime\n      lastLoginDate\n      lastLoginDevice\n      lastLoginTime\n      loginStatus\n    }\n    message {\n      nextToken\n    }\n    chatRoomMember {\n      nextToken\n    }\n  }\n}\n&quot;,&quot;variables&quot;:{&quot;input&quot;:{&quot;id&quot;:&quot;1ed4ce14-34e3-4e5c-a3fd-7397cfd21f84&quot;,&quot;lastMessage&quot;:&quot;Fine&quot;,&quot;lastMessageAt&quot;:&quot;2022-08-23T07:47:25.611Z&quot;,&quot;lastSender&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;,&quot;isDetailsSeen&quot;:false,&quot;isNotificationSeen&quot;:false}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query GetUser($id: ID!) {\n  getUser(id: $id) {\n    securityQuestion\n    securityAnswer\n    firstName\n    isActive\n  }\n}\n&quot;,&quot;variables&quot;:{&quot;id&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query GetUser($id: ID!) {\n  getUser(id: $id) {\n    email\n    emailVisiblity\n    secondaryEmail\n    secondaryEmailVisiblity\n  }\n}\n&quot;,&quot;variables&quot;:{&quot;id&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query GetUser($id: ID!) {\n  getUser(id: $id) {\n    id\n    userName\n    owner\n    firstName\n    lastName\n    isPreSignup\n    emailNotification\n    recentCategories\n    profileLinkName\n    usertourChatboxOnOff\n    usertourFeedSearchBox\n    usertourFeedCategory\n    usertourPostLike\n    usertourPostCategory\n    usertourPostTextArea\n    usertourProgressBar\n    usertourCommentLike\n    usertourAudience\n    usertourAddFriend\n    usertourFollowing\n    totalGoldStars\n    totalSilverStars\n    gender\n    country\n    state\n    isAccountVerified\n    isActive\n    defaultFeed\n    choiceMeta\n    postCategoryID\n    authProvider\n    whoCanAccessWall\n    whoCanAccessPhotos\n    whoCanSendMessage\n    whoCanSeeProfile\n    isChattBoxActive\n    displyHomestate\n    displyLiveIn\n    homestate\n    homestateCity\n    hasAcceptedCockie\n    homestateCountry\n    intro\n    isFoundingMember\n    userStoryAbout\n    userStoryAboutVisibilty\n    userStoryEarlyLife\n    userStoryEarlyLifeVisibilty\n    userStoryFamily\n    userStoryFamilyVisibilty\n    userStoryCareer\n    userStoryCareerVisibilty\n    userStoryBackground\n    userStoryBackgroundVisibilty\n    userStoryChildHood\n    userStoryChildHoodVisibilty\n    userStoryPersonalLife\n    userStoryPersonalVisibilty\n    websiteUrl\n    isLikerSupport\n    isMasterAccount\n    googleUrl\n    googleUrlVisibilty\n    websiteUrlVisibilty\n    facebookUrl\n    facebookUrlVisibilty\n    twitterUrl\n    twitterUrlVisibilty\n    linkedInUrl\n    linkedInUrlVisibilty\n    instagramUrl\n    instagramUrlVisibilty\n    skypeUrl\n    skypeUrlVisibilty\n    pinterestUrl\n    pinterestUrlVisibilty\n    youtubeUrl\n    youtubeUrlVisibilty\n    forceSecurityCheckUp\n    pushNotification\n    forceTFA\n    isCognitoConfirmed\n    activeFeedFilterType\n    headline\n    isExisting\n    isTFAActive\n    isVerified\n    createdAt\n    coverPhotoActive\n    profilePhotoActive\n    isExparienceAdded\n    isEducationAdded\n    isFriendInvitationDone\n    totalLikes\n    isBlockByAdmin\n    totalFollowers\n    totalFollowing\n    totalFriends\n    totalStars\n    totalComments\n    totalPhotos\n    isPreSignup\n    isTopCommenter\n    topCommentor {\n      items {\n        userID\n      }\n    }\n    UserSearchHistories {\n      items {\n        id\n        userID\n        searchedIteam\n        isUser\n        searchedIteamOrder\n        createdAt\n      }\n      nextToken\n    }\n    userFilter {\n      items {\n        id\n        userID\n        isSingleCategory\n        isMyFavorit\n        isEverythingExcept\n        isFeed\n        isStarContributors\n        catID\n        catName\n        subCatID\n        subCatName\n        createdAt\n      }\n      nextToken\n    }\n  }\n}\n&quot;,&quot;variables&quot;:{&quot;id&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query AyongetUserQuery($id: ID!) {\n  getUser(id: $id) {\n    id\n    owner\n    firstName\n    lastName\n    profileLinkName\n    usertourChatboxOnOff\n    usertourFeedSearchBox\n    usertourFeedCategory\n    usertourPostLike\n    usertourPostCategory\n    usertourPostTextArea\n    usertourProgressBar\n    usertourCommentLike\n    usertourAudience\n    gender\n    country\n    state\n    isAccountVerified\n    isActive\n    defaultFeed\n    choiceMeta\n    postCategoryID\n    authProvider\n    whoCanAccessWall\n    whoCanAccessPhotos\n    whoCanSendMessage\n    whoCanSeeProfile\n    isChattBoxActive\n    displyHomestate\n    displyLiveIn\n    homestate\n    homestateCity\n    homestateCountry\n    intro\n    isFoundingMember\n    userStoryAbout\n    userStoryAboutVisibilty\n    userStoryEarlyLife\n    userStoryEarlyLifeVisibilty\n    userStoryFamily\n    userStoryFamilyVisibilty\n    userStoryCareer\n    userStoryCareerVisibilty\n    userStoryBackground\n    userStoryBackgroundVisibilty\n    userStoryChildHood\n    userStoryChildHoodVisibilty\n    userStoryPersonalLife\n    userStoryPersonalVisibilty\n    websiteUrl\n    websiteUrlVisibilty\n    facebookUrl\n    facebookUrlVisibilty\n    twitterUrl\n    twitterUrlVisibilty\n    linkedInUrl\n    linkedInUrlVisibilty\n    instagramUrl\n    instagramUrlVisibilty\n    skypeUrl\n    skypeUrlVisibilty\n    pinterestUrl\n    pinterestUrlVisibilty\n    youtubeUrl\n    youtubeUrlVisibilty\n    forceSecurityCheckUp\n    securityQuestion\n    securityAnswer\n    emailNotification\n    pushNotification\n    forceTFA\n    headline\n    isExisting\n    isTFAActive\n    isVerified\n    createdAt\n    updatedAt\n    posts {\n      nextToken\n    }\n    friends {\n      nextToken\n    }\n    userGroups {\n      nextToken\n    }\n    pictureMeta {\n      nextToken\n    }\n    userEducation {\n      nextToken\n    }\n    userProfessionalExperience {\n      nextToken\n    }\n    userHonorsAwards {\n      nextToken\n    }\n    userCertificate {\n      nextToken\n    }\n    blockUser {\n      items {\n        id\n        ownerID\n        userID\n      }\n    }\n  }\n  blockByOwner(ownerID: $id) {\n    items {\n      blockType\n      createdAt\n      id\n      ownerID\n      updatedAt\n      userID\n      user {\n        items {\n          id\n          firstName\n          lastName\n          profilePhotoActive\n          totalGoldStars\n          totalSilverStars\n          totalFollowers\n        }\n      }\n    }\n  }\n}\n&quot;,&quot;variables&quot;:{&quot;id&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query GetUser($id: ID!) {\n  getUser(id: $id) {\n    id\n    userName\n    owner\n    firstName\n    lastName\n    isPreSignup\n    emailNotification\n    recentCategories\n    profileLinkName\n    usertourChatboxOnOff\n    usertourFeedSearchBox\n    usertourFeedCategory\n    usertourPostLike\n    usertourPostCategory\n    usertourPostTextArea\n    usertourProgressBar\n    usertourCommentLike\n    usertourAudience\n    usertourAddFriend\n    usertourFollowing\n    totalGoldStars\n    totalSilverStars\n    gender\n    country\n    state\n    isAccountVerified\n    isActive\n    defaultFeed\n    choiceMeta\n    postCategoryID\n    authProvider\n    whoCanAccessWall\n    whoCanAccessPhotos\n    whoCanSendMessage\n    whoCanSeeProfile\n    isChattBoxActive\n    displyHomestate\n    displyLiveIn\n    homestate\n    homestateCity\n    hasAcceptedCockie\n    homestateCountry\n    intro\n    isFoundingMember\n    userStoryAbout\n    userStoryAboutVisibilty\n    userStoryEarlyLife\n    userStoryEarlyLifeVisibilty\n    userStoryFamily\n    userStoryFamilyVisibilty\n    userStoryCareer\n    userStoryCareerVisibilty\n    userStoryBackground\n    userStoryBackgroundVisibilty\n    userStoryChildHood\n    userStoryChildHoodVisibilty\n    userStoryPersonalLife\n    userStoryPersonalVisibilty\n    websiteUrl\n    isLikerSupport\n    isMasterAccount\n    googleUrl\n    googleUrlVisibilty\n    websiteUrlVisibilty\n    facebookUrl\n    facebookUrlVisibilty\n    twitterUrl\n    twitterUrlVisibilty\n    linkedInUrl\n    linkedInUrlVisibilty\n    instagramUrl\n    instagramUrlVisibilty\n    skypeUrl\n    skypeUrlVisibilty\n    pinterestUrl\n    pinterestUrlVisibilty\n    youtubeUrl\n    youtubeUrlVisibilty\n    forceSecurityCheckUp\n    pushNotification\n    forceTFA\n    isCognitoConfirmed\n    activeFeedFilterType\n    headline\n    isExisting\n    isTFAActive\n    isVerified\n    createdAt\n    coverPhotoActive\n    profilePhotoActive\n    isExparienceAdded\n    isEducationAdded\n    isFriendInvitationDone\n    totalLikes\n    isBlockByAdmin\n    totalFollowers\n    totalFollowing\n    totalFriends\n    totalStars\n    totalComments\n    totalPhotos\n    isPreSignup\n    isTopCommenter\n    topCommentor {\n      items {\n        userID\n      }\n    }\n    UserSearchHistories {\n      items {\n        id\n        userID\n        searchedIteam\n        isUser\n        searchedIteamOrder\n        createdAt\n      }\n      nextToken\n    }\n    userFilter {\n      items {\n        id\n        userID\n        isSingleCategory\n        isMyFavorit\n        isEverythingExcept\n        isFeed\n        isStarContributors\n        catID\n        catName\n        subCatID\n        subCatName\n        createdAt\n      }\n      nextToken\n    }\n  }\n}\n&quot;,&quot;variables&quot;:{&quot;id&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query GetUser($id: ID!) {\n  getUser(id: $id) {\n    id\n    owner\n    firstName\n    lastName\n    userName\n    isPreSignup\n    emailVisiblity\n    secondaryEmail\n    secondaryEmailVisiblity\n    profileLinkName\n    usertourChatboxOnOff\n    usertourFeedSearchBox\n    usertourFeedCategory\n    usertourPostLike\n    usertourPostCategory\n    usertourPostTextArea\n    usertourProgressBar\n    usertourCommentLike\n    usertourAudience\n    usertourAddFriend\n    usertourFollowing\n    gender\n    dobYeayVisiblity\n    dobMonthVisiblity\n    dobDayVisiblity\n    country\n    state\n    isAccountVerified\n    hasAcceptedCockie\n    isMasterAccount\n    isActive\n    defaultFeed\n    choiceMeta\n    postCategoryID\n    authProvider\n    whoCanAccessWall\n    whoCanAccessPhotos\n    whoCanSendMessage\n    whoCanSeeProfile\n    isChattBoxActive\n    lastLogOutTime\n    lastLoginDate\n    lastLoginDevice\n    lastLoginTime\n    loginStatus\n    displyHomestate\n    displyLiveIn\n    homestate\n    homestateCity\n    homestateCountry\n    intro\n    isFoundingMember\n    phoneHome\n    phoneHomeVisibilty\n    phoneOffice\n    phoneOfficeVisibilty\n    phoneHomeCountryCode\n    phoneOfficeCountryCode\n    userStoryAbout\n    userStoryAboutVisibilty\n    userStoryEarlyLife\n    userStoryEarlyLifeVisibilty\n    userStoryFamily\n    userStoryFamilyVisibilty\n    userStoryCareer\n    userStoryCareerVisibilty\n    userStoryBackground\n    userStoryBackgroundVisibilty\n    userStoryChildHood\n    userStoryChildHoodVisibilty\n    userStoryPersonalLife\n    userStoryPersonalVisibilty\n    websiteUrl\n    websiteUrlVisibilty\n    facebookUrl\n    facebookUrlVisibilty\n    twitterUrl\n    twitterUrlVisibilty\n    linkedInUrl\n    linkedInUrlVisibilty\n    instagramUrl\n    instagramUrlVisibilty\n    skypeUrl\n    skypeUrlVisibilty\n    pinterestUrl\n    pinterestUrlVisibilty\n    youtubeUrl\n    youtubeUrlVisibilty\n    forceSecurityCheckUp\n    emailNotification\n    pushNotification\n    forceTFA\n    activeFeedFilterType\n    headline\n    isExisting\n    isTFAActive\n    isVerified\n    createdAt\n    updatedAt\n    totalLikes\n    totalFollowers\n    totalStars\n    totalFollowing\n    totalFriends\n    totalPhotos\n    coverPhotoActive\n    profilePhotoActive\n    totalGoldStars\n    totalSilverStars\n    isExparienceAdded\n    isEducationAdded\n    isFriendInvitationDone\n    recentCategories\n    topCommentor {\n      items {\n        userID\n      }\n    }\n    userGroups(limit: 4, sortDirection: DESC) {\n      nextToken\n      items {\n        CategoryInfo {\n          groupName\n        }\n        SubCategoryInfo {\n          name\n        }\n        aboutGroup\n        createdAt\n        createdByUserID\n        groupMembers(filter: {userID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}}) {\n          items {\n            userID\n          }\n          nextToken\n        }\n        groupName\n        id\n        pictureMetaID\n        policy\n        postCategory\n        postGroup\n        postSubCategory\n        privacy\n        status\n        totalMembers\n        totalPosts\n        updatedAt\n      }\n    }\n    countryName {\n      countryName\n    }\n    stateName {\n      stateName\n    }\n    homestateCountryName {\n      countryName\n    }\n    homestateName {\n      stateName\n    }\n    posts {\n      nextToken\n    }\n    pictureMeta {\n      items {\n        imagekey\n        imageSize\n        id\n        orderIndex\n        album\n      }\n    }\n    userEducation {\n      nextToken\n    }\n    userProfessionalExperience {\n      nextToken\n    }\n    userHonorsAwards {\n      nextToken\n    }\n    userCertificate {\n      nextToken\n    }\n    blockUser {\n      items {\n        id\n        ownerID\n        userID\n        blockType\n        createdAt\n        updatedAt\n      }\n    }\n    contributorSettingData {\n      items {\n        id\n        userID\n        categoryID\n        isGroupCat\n        createdAt\n        updatedAt\n      }\n      nextToken\n    }\n    userFilter {\n      nextToken\n    }\n  }\n}\n&quot;,&quot;variables&quot;:{&quot;id&quot;:&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query ListGroups($filter: ModelGroupFilterInput, $limit: Int, $nextToken: String) {\n  listGroups(filter: $filter, limit: $limit, nextToken: $nextToken) {\n    items {\n      id\n      preID\n      groupName\n      postCategories {\n        items {\n          id\n          name\n          groupID\n        }\n      }\n      createdAt\n      updatedAt\n    }\n    nextToken\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">AWS4-HMAC-SHA256 Credential=ASIAY23MY4J6LURUZLIA/20220823/us-east-1/appsync/aws4_request, SignedHeaders=content-type;host;x-amz-date;x-amz-security-token;x-amz-user-agent, Signature=3924558630d7a767bcfc3e2449d04dbde998d2283622dbda82c7ebe1bafd451d</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="X-Amz-Security-Token" elementType="Header">
                  <stringProp name="Header.name">X-Amz-Security-Token</stringProp>
                  <stringProp name="Header.value">IQoJb3JpZ2luX2VjEBAaCXVzLWVhc3QtMSJGMEQCIHa+L91dXZpQQ+00qokgTgvaPlrat5xnX/3dg1jFOeBoAiAHkHvJ1sYiE11HxHVo2HbtIscnmNpX3FdM+pKmqjvmACrNBAiJ//////////8BEAMaDDYwNzQyOTEyNDczMiIMDJaY1Tbcnr3KAnP8KqEEwH3UsaVu5BQZEOkhqNIen5rsxaLaNq08SaakAoAOJxWQ+46sJwGzZDQUPchRYGcw55Dgv1g6Mr+2x/PIlx9JCrrcLruFP9rQbcsPubm9aQZeyWL6m8bMlU4WV3BIAiJ2d4pDeM7pNB2UQ3Vh8xbdzk01IiNpfg3HT7OT1PF/NmIwOrDF1whGJHVWFnvcHGUlAGNK8brwCK9BGhRKxlQeP9s/FgdX+mQxuUGEmAzocjTBBvM50hcWXpCneMK1SgnvbUzY3hXtFhmDg++BtsxukhTS9r6s94JaZWu8Of+JGg8/oTYPyLtYZFPbmxRJJXB3Q9jrAcldZX88aH1Ji5EXcqWKnNn4Q+v91JnbGZL9UmYJpora7TYDKvsQEKfXeYo2cEnzwCGDVUXWRKlpR1kx/BiwPUbMXTXucRcEX9Y1KAr19P67DlcxTMOA5QNKzDsgeyFgCsCZe/nT2Ea1kP5MdvD8mAPGaxbXeIoIBs/hsxsVDI5Kr1RUA4CpS6FlkB50kLzw5nMjDH7eRyK8rW3yndHxS8Xgx0UBsbNZ52vUhMwuf3X0+GinfST59yDQz51xutP/YaOyW3uSeDgKJQ4v8SCkMImEKZyYZCLHX/DGlO/sE3xMYViZEUpqAGdCUjqUr0hI4BnKOt3EZ5dGWTMb9RNrAN3JoJNY7KdHUtTCkMCG5QHsRgFa+5x3egSRAsmxpuDr6KxC68KtHOh5VMF0q/MwkYmSmAY6hgLkQhbjzY1rQ8Yic64xfSS2+rT59O9HaL+9YFajdY83APNUH7w2DK2PxlekNBtNOTJdAsBLtmKgko4uMj64jHIC11JWFA9FFsBYr5p4NGshsruRPlrx+Y63qG+z/N+cybV14F0E4yZD7soXdFZyw/FAepKTdvH9svmXlB4FEVhZmacM8gkzRyCWkU5WpHrU9CWIAIZt7G6T9Zs5ACht8pzqGuy9pzKqN8Aqp7oZGBKe+IH73qecXOVcuwSGSyrReC+AajiQ8J7RBMs+IXfajvc73KUB16DXMpOfBjpHzewu/2WNEHUjC8lzKPgC03TfU5N/KC827/G0G/BUZmnQ/FlnBX242HeS</stringProp>
                </elementProp>
                <elementProp name="x-amz-date" elementType="Header">
                  <stringProp name="Header.name">x-amz-date</stringProp>
                  <stringProp name="Header.value">20220823T074737Z</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  byuserIDstatusUserGroup(userID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;) {\n    items {\n      groupInfo(filter: {createdByUserID: {ne: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}}) {\n        items {\n          totalMembers\n          groupName\n          id\n          policy\n          postCategory\n          createdByUserID\n          CategoryInfo {\n            groupName\n          }\n          postSubCategory\n          SubCategoryInfo {\n            name\n          }\n          postGroup\n          pictureMetaID\n          pictureMeta(limit: 1) {\n            items {\n              imagekey\n            }\n          }\n          privacy\n          status\n          updatedAt\n          createdByUserID\n          createdAt\n          aboutGroup\n          totalPosts\n          meAsGroupMember(userID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}, sortDirection: ASC) {\n            items {\n              id\n              userGroupID\n              userID\n              status\n            }\n          }\n          groupMembers(filter: {userID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}, status: {eq: \&quot;Active\&quot;}}) {\n            nextToken\n            items {\n              userID\n              status\n            }\n          }\n        }\n      }\n      userGroupID\n      status\n    }\n  }\n  bystatusprivacyUserGroup(status: \&quot;Active\&quot;, privacy: {eq: \&quot;PUBLIC\&quot;}) {\n    items {\n      CategoryInfo {\n        groupName\n      }\n      postCategory\n    }\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  searchUserGroups(sort: {field: totalMembers, direction: desc}, filter: {pictureMetaID: {exists: true, ne: \&quot;null\&quot;}, createdByUserID: {ne: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}, totalMembers: {ne: 0}}, limit: 50) {\n    items {\n      id\n      groupName\n      createdAt\n      createdByUserID\n      aboutGroup\n      pictureMetaID\n      totalMembers\n      pictureMeta(limit: 1) {\n        items {\n          imagekey\n        }\n      }\n      policy\n      postCategory\n      CategoryInfo {\n        groupName\n      }\n      postSubCategory\n      SubCategoryInfo {\n        name\n      }\n      privacy\n      status\n      totalPosts\n      meAsGroupMember(userID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}, sortDirection: ASC) {\n        items {\n          id\n          userGroupID\n          userID\n          status\n        }\n      }\n      groupMembers(filter: {userID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}}) {\n        items {\n          userID\n          status\n        }\n      }\n      postGroup\n      updatedAt\n      totalMembers\n    }\n    nextToken\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  getUserGroup(id: \&quot;ad158e2d-dde5-41f4-8d55-51fac8f6eebe\&quot;) {\n    groupName\n    id\n    pictureMeta(limit: 1) {\n      items {\n        imagekey\n      }\n    }\n    policy\n    postCategory\n    CategoryInfo {\n      groupName\n    }\n    postSubCategory\n    SubCategoryInfo {\n      name\n    }\n    postGroup\n    privacy\n    totalMembers\n    totalPosts\n    groupMembers(filter: {or: [{status: {eq: \&quot;Blocked\&quot;}}, {status: {eq: \&quot;Active\&quot;}}]}) {\n      items {\n        userID\n        userInfo {\n          firstName\n          lastName\n        }\n      }\n    }\n    meAsGroupMember(userID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n      items {\n        id\n        status\n        userID\n      }\n    }\n    statusWiseGroupMember(status: {eq: \&quot;Pending\&quot;}) {\n      items {\n        id\n        userID\n        status\n        userGroupID\n      }\n      nextToken\n    }\n    status\n    aboutGroup\n    createdByUserID\n    pictureMetaID\n  }\n  searchUserGroupMembers(filter: {userID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}, userGroupID: {eq: \&quot;ad158e2d-dde5-41f4-8d55-51fac8f6eebe\&quot;}}) {\n    items {\n      id\n      status\n    }\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  getUserGroup(id: \&quot;ad158e2d-dde5-41f4-8d55-51fac8f6eebe\&quot;) {\n    groupName\n    id\n    pictureMeta(limit: 1) {\n      items {\n        imagekey\n      }\n    }\n    policy\n    postCategory\n    CategoryInfo {\n      groupName\n    }\n    postSubCategory\n    SubCategoryInfo {\n      name\n    }\n    postGroup\n    privacy\n    totalMembers\n    totalPosts\n    groupMembers(filter: {or: [{status: {eq: \&quot;Blocked\&quot;}}, {status: {eq: \&quot;Active\&quot;}}]}) {\n      items {\n        userID\n        userInfo {\n          firstName\n          lastName\n        }\n      }\n    }\n    meAsGroupMember(userID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}) {\n      items {\n        id\n        status\n        userID\n      }\n    }\n    statusWiseGroupMember(status: {eq: \&quot;Pending\&quot;}) {\n      items {\n        id\n        userID\n        status\n        userGroupID\n      }\n      nextToken\n    }\n    status\n    aboutGroup\n    createdByUserID\n    pictureMetaID\n  }\n  searchUserGroupMembers(filter: {userID: {eq: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;}, userGroupID: {eq: \&quot;ad158e2d-dde5-41f4-8d55-51fac8f6eebe\&quot;}}) {\n    items {\n      id\n      status\n    }\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  listMemes {\n    items {\n      id\n      meamID\n      memeInputAddClassName\n      memePreviewClassName\n      memelistClassName\n      serialNumber\n      status\n    }\n  }\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://lmwtjcb3tnhrjl6tbksnm74t44.appsync-api.us-east-1.amazonaws.com/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;query&quot;:&quot;query MyQuery {\n  likerSlaGetStarContributorToFollow(loginUserID: \&quot;856d94f7-965b-449c-aff2-8df1a89ca0fc\&quot;)\n}\n&quot;,&quot;variables&quot;:{}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">eyJraWQiOiI1UG9YM3crUmRTanZyc2RcL0hXRkZ0MlBZOUQwMDh0UVJvT2JkU3NQN2J1OD0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI4NTZkOTRmNy05NjViLTQ0OWMtYWZmMi04ZGYxYTg5Y2EwZmMiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9oa1U2Z0xBRnkiLCJjbGllbnRfaWQiOiI1NmJuNmVkdWpjNjY2YXZyNmRnYjdpdmhyOSIsIm9yaWdpbl9qdGkiOiIyOTg2MTg5OC1hYjliLTQxZTgtYTNhOS0wYzNhM2I2ZWQ5OTMiLCJldmVudF9pZCI6ImQwM2UxN2M1LWY3ODMtNDY3ZS04NGNjLTJjYWE3ZjQ5YzBhMCIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE2NjEyNDA0NTksImV4cCI6MTY2MTMyNjg1OSwiaWF0IjoxNjYxMjQwNDU5LCJqdGkiOiI0MDlhM2JkMS0yYjJkLTRkZjMtYTRjMC00YzAzMGM4NDg4MTIiLCJ1c2VybmFtZSI6Ijg1NmQ5NGY3LTk2NWItNDQ5Yy1hZmYyLThkZjFhODljYTBmYyJ9.Z5RcT9B8QeLRAXv1BBNZLk5prgo-uTKGFYJOt_-Rx7zfgn3FsqR0VTw3B-3_xNvRDSwmIqRzqvDxvoI_wGbAGcyCtS68_Ne4rtk2pGDjMRaa6VDaBOZTapN7dwtNPR4O2fuACQAcyx8CkVrzhVTdm8Kyf6JuVxMyfqjt68uecogCY3WlPKskI7vwpBlBm2Y3aIPis-HIUaivKE_VUhJBFwWq5oE-ovmAk9d0aFgxRBy7qIPMi4C2BG1hkcCi41KEkqr-MZHbMu4Ti7Al8W62MstQQRnk3f7QRfi5cTkuHFPh-A6L7F9SgQX-3vUoPZW6XEeJvTWpYzmBfTHsvNE-KQ</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="x-amz-user-agent" elementType="Header">
                  <stringProp name="Header.name">x-amz-user-agent</stringProp>
                  <stringProp name="Header.value">aws-amplify/3.8.23 js</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
